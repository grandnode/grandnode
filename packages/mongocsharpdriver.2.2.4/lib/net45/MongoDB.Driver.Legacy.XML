<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>MongoDB.Driver.Legacy</name>
  </assembly>
  <members>
    <member name="T:MongoDB.Driver.AggregateArgs">
      <summary>
            Represents options for the Aggregate command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.AggregateArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.AggregateArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.AllowDiskUse">
      <summary>
            Gets or sets a value indicating whether disk use is allowed.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.BatchSize">
      <summary>
            Gets or sets the size of a batch when using a cursor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.MaxTime">
      <summary>
            Gets or sets the max time the server should spend on the aggregation command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.OutputMode">
      <summary>
            Gets or sets the output mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.AggregateArgs.Pipeline">
      <summary>
            Gets or sets the pipeline.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.AggregateOutputMode">
      <summary>
            Represents the output mode for an aggregate operation.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.AggregateOutputMode.Inline">
      <summary>
            The output of the aggregate operation is returned inline.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.AggregateOutputMode.Cursor">
      <summary>
            The output of the aggregate operation is returned using a cursor.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.BulkUpdateRequestBuilder`1">
      <summary>
            Represents a fluent builder for one update request.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder`1.ReplaceOne(`0)">
      <summary>
            Adds an update request to replace one matching document to the bulk operation.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder`1.Update(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Adds an update request to update all matching documents to the bulk operation.
            </summary>
      <param name="update">The update.</param>
    </member>
    <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder`1.UpdateOne(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Adds an update request to update one matching document to the bulk operation.
            </summary>
      <param name="update">The update.</param>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteOperation`1">
      <summary>
            Represents a fluent builder for a bulk operation.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.BulkWriteOperation`1.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteOperation`1.Execute">
      <summary>
            Executes the bulk operation using the default write concern from the collection.
            </summary>
      <returns>A BulkWriteResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteOperation`1.Execute(MongoDB.Driver.WriteConcern)">
      <summary>
            Executes the bulk operation.
            </summary>
      <param name="writeConcern">The write concern for this bulk operation.</param>
      <returns>A BulkWriteResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteOperation`1.Find(MongoDB.Driver.IMongoQuery)">
      <summary>
            Creates a builder for a new write request (either a remove or an update).
            </summary>
      <param name="query">The query.</param>
      <returns>A FluentWriteRequestBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteOperation`1.Insert(`0)">
      <summary>
            Adds an insert request for the specified document to the bulk operation.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="T:MongoDB.Driver.BulkWriteRequestBuilder`1">
      <summary>
            Represents a fluent builder for a write request (either a remove or an update).
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.Remove">
      <summary>
            Adds a request to remove all matching documents to the bulk operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.RemoveOne">
      <summary>
            Adds a request to remove one matching documents to the bulk operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.ReplaceOne(`0)">
      <summary>
            Adds a request to replace one matching documents to the bulk operation.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.Update(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Adds a request to update all matching documents to the bulk operation.
            </summary>
      <param name="update">The update.</param>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.UpdateOne(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Adds a request to update one matching documents to the bulk operation.
            </summary>
      <param name="update">The update.</param>
    </member>
    <member name="M:MongoDB.Driver.BulkWriteRequestBuilder`1.Upsert">
      <summary>
            Specifies that the request being built should be an upsert.
            </summary>
      <returns>A bulk update request builder.</returns>
    </member>
    <member name="T:MongoDB.Driver.CollectionOptionsDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoCollectionOptions is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the CollectionOptionsDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.CollectionStatsResult">
      <summary>
            Represents the results of the collection stats command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionStatsResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionStatsResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.AverageObjectSize">
      <summary>
            Gets the average object size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.DataSize">
      <summary>
            Gets the data size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.ExtentCount">
      <summary>
            Gets the extent count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexCount">
      <summary>
            Gets the index count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizes">
      <summary>
            Gets the index sizes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IsCapped">
      <summary>
            Gets a value indicating whether the collection is capped.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.LastExtentSize">
      <summary>
            Gets the last extent size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.MaxDocuments">
      <summary>
            Gets the index count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.Namespace">
      <summary>
            Gets the namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.ObjectCount">
      <summary>
            Gets the object count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.PaddingFactor">
      <summary>
            Gets the padding factor.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.StorageSize">
      <summary>
            Gets the storage size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.SystemFlags">
      <summary>
            Gets the system flags.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.TotalIndexSize">
      <summary>
            Gets the total index size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.UserFlags">
      <summary>
            Gets the user flags.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CollectionStatsResult.IndexSizesResult">
      <summary>
            Represents a collection of index sizes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the IndexSizesResult class.
            </summary>
      <param name="indexSizes">The index sizes document.</param>
    </member>
    <member name="M:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.ContainsKey(System.String)">
      <summary>
            Tests whether the results contain the size of an index.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>True if the results contain the size of the index.</returns>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Count">
      <summary>
            Gets the count of indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Item(System.String)">
      <summary>
            Gets the size of an index.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>The size of the index.</returns>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Keys">
      <summary>
            Gets the names of the indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Values">
      <summary>
            Gets the sizes of the indexes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CollectionSystemFlags">
      <summary>
            Represents collection system flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CollectionSystemFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CollectionSystemFlags.HasIdIndex">
      <summary>
            The collection has an _id index.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CollectionUserFlags">
      <summary>
            Represents collection user flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CollectionUserFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.CollectionUserFlags.UsePowerOf2Sizes">
      <summary>
            User power of 2 size.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CommandDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoCommand is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor">
      <summary>
            Initializes a new instance of the CommandDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the CommandDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the CommandDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the CommandDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the CommandDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.CommandResult">
      <summary>
            Represents the result of a command (there are also subclasses for various commands).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CommandResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CommandResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.CommandResult.Code">
      <summary>
            Gets the code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CommandResult.ErrorMessage">
      <summary>
            Gets the error message (null if none).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CommandResult.Ok">
      <summary>
            Gets the Ok value from the response.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CommandResult.Response">
      <summary>
            Gets the response.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.CommandResultSerializer`1">
      <summary>
            Represents a serializer for a CommandResult.
            </summary>
      <typeparam name="TCommandResult">The type of the command result.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.CommandResultSerializer`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.CommandResultSerializer`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.CommandResultSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
      <summary>
            Deserializes a value.
            </summary>
      <param name="context">The deserialization context.</param>
      <param name="args">The deserialization args.</param>
      <returns>The value.</returns>
    </member>
    <member name="T:MongoDB.Driver.CountArgs">
      <summary>
            Represents arguments for the Count command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.CountArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.CountArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.Limit">
      <summary>
            Gets or sets the maximum number of matching documents to count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.CountArgs.Skip">
      <summary>
            Gets or sets the number of matching documents to skip before starting to count matching documents.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DatabaseStatsResult">
      <summary>
            Represents the result of the database stats command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DatabaseStatsResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DatabaseStatsResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.AverageObjectSize">
      <summary>
            Gets the average object size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.CollectionCount">
      <summary>
            Gets the collection count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.DataSize">
      <summary>
            Gets the data size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.ExtentCount">
      <summary>
            Gets the extent count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.FileSize">
      <summary>
            Gets the file size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.IndexCount">
      <summary>
            Gets the index count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.IndexSize">
      <summary>
            Gets the index size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.ObjectCount">
      <summary>
            Gets the object count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DatabaseStatsResult.StorageSize">
      <summary>
            Gets the storage size.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.DistinctArgs">
      <summary>
            Represents arguments for the Distinct command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.DistinctArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.DistinctArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctArgs.Key">
      <summary>
            Gets or sets the key.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.DistinctArgs.ValueSerializer">
      <summary>
            Gets or sets the value serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.EvalArgs">
      <summary>
            Represents arguments for the Eval command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.EvalArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.EvalArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.EvalArgs.Args">
      <summary>
            Gets or sets the arguments to the JavaScript code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.EvalArgs.Code">
      <summary>
            Gets or sets the JavaScript code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.EvalArgs.Lock">
      <summary>
            Gets or sets a value indicating whether the server should take a global write lock when executing the JavaScript code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.EvalArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.EvalFlags">
      <summary>
            Flags used with the Eval method in MongoDatabase.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.EvalFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.EvalFlags.NoLock">
      <summary>
            Do not take a write lock.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FeatureId">
      <summary>
            Represents the Id of a feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.AggregateAllowDiskUse">
      <summary>
            The aggregate allow disk use feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.AggregateCursor">
      <summary>
            The aggregate cursor feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.AggregateExplain">
      <summary>
            The aggregate explain feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.AggregateOutputToCollection">
      <summary>
            The aggregate output to collection feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.CreateIndexCommand">
      <summary>
            The create index command feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.MaxTime">
      <summary>
            The max time feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.GeoJson">
      <summary>
            The GeoJson data and query feature.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.ParallelScanCommand">
      <summary>
            The parallel scan command.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.TextSearchCommand">
      <summary>
            The text search command.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.TextSearchQuery">
      <summary>
            The text search query operator.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.UserManagementCommands">
      <summary>
            The user management commands.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.WriteCommands">
      <summary>
            The write commands.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FeatureId.WriteOpcodes">
      <summary>
            The write opcodes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FieldsDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoFields is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor">
      <summary>
            Initializes a new instance of the FieldsDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the FieldsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the FieldsDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.FindAndModifyArgs">
      <summary>
            Represents options for the FindAndModify command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindAndModifyArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindAndModifyArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.Fields">
      <summary>
            Gets or sets the fields specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.SortBy">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.Update">
      <summary>
            Gets or sets the update specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.Upsert">
      <summary>
            Gets or sets a value indicating whether FindAndModify should upsert.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyArgs.VersionReturned">
      <summary>
            Gets or sets the version of the document returned.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindAndModifyDocumentVersion">
      <summary>
            Represents a version of a document (original or modified).
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FindAndModifyDocumentVersion.Original">
      <summary>
            The original version of the document.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.FindAndModifyDocumentVersion.Modified">
      <summary>
            The modified version of the document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindAndModifyResult">
      <summary>
            Represents the result of a FindAndModify command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindAndModifyResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindAndModifyResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="M:MongoDB.Driver.FindAndModifyResult.GetModifiedDocumentAs``1">
      <summary>
            Gets the modified document as a TDocument.
            </summary>
      <typeparam name="TDocument">The nominal type of the modified document.</typeparam>
      <returns>The modified document.</returns>
    </member>
    <member name="M:MongoDB.Driver.FindAndModifyResult.GetModifiedDocumentAs(System.Type)">
      <summary>
            Gets the modified document as a TDocument.
            </summary>
      <param name="documentType">The nominal type of the modified document.</param>
      <returns>The modified document.</returns>
    </member>
    <member name="P:MongoDB.Driver.FindAndModifyResult.ModifiedDocument">
      <summary>
            Gets the modified document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindAndRemoveArgs">
      <summary>
            Represents options for the FindAndRemove command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindAndRemoveArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindAndRemoveArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndRemoveArgs.Fields">
      <summary>
            Gets or sets the fields specification.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndRemoveArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndRemoveArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindAndRemoveArgs.SortBy">
      <summary>
            Gets or sets the sort specification.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.FindOneArgs">
      <summary>
            Represents arguments to the FindOne method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.FindOneArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.FindOneArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.Fields">
      <summary>
            Gets or sets the fields.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.Hint">
      <summary>
            Gets or sets the hint.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.Serializer">
      <summary>
            Gets or sets the serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.Skip">
      <summary>
            Gets or sets the skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.FindOneArgs.SortBy">
      <summary>
            Gets or sets the sort order.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchArgs">
      <summary>
            Represents the arguments to the GeoHaystackSearch method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoHaystackSearchArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.AdditionalFieldName">
      <summary>
            Gets or sets the name of the additional field.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.AdditionalFieldValue">
      <summary>
            Gets or sets the additional field value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.MaxDistance">
      <summary>
            Gets or sets the max distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.Near">
      <summary>
            Gets or sets the location near which to search.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchArgs.SetAdditionalField``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
      <summary>
            Sets the name and value of the additional field.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>The args so calls can be chained.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchArgs.SetAdditionalField(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the name and value of the additional field.
            </summary>
      <param name="name">Name of the additional field.</param>
      <param name="value">The value.</param>
      <returns>The args so calls can be chained.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchOptionsDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoGeoHaystackSearchOptions is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult">
      <summary>
            Represents the result of a GeoHaystackSearch command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoHaystackSearchResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.Hits">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.HitsImplementation">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.Stats">
      <summary>
            Gets the stats.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1">
      <summary>
            Represents the result of a GeoHaystackSearch command.
            </summary>
      <typeparam name="TDocument">The type of the returned documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.Hits">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.HitsImplementation">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit">
      <summary>
            Represents a GeoHaystackSearch hit.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchHit class.
            </summary>
      <param name="hit">The hit.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.Document">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.DocumentImplementation">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits">
      <summary>
            Represents a collection of GeoHaystackSearch hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.#ctor(MongoDB.Bson.BsonArray)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchHits class.
            </summary>
      <param name="hits">The hits.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.Count">
      <summary>
            Gets the count of the number of hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetEnumerator">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetEnumeratorImplementation">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetHitImplementation(System.Int32)">
      <summary>
            Gets a hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.Item(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit">
      <summary>
            Represents a GeoHaystackSearch hit.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchHit class.
            </summary>
      <param name="hit">The hit.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.Document">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.DocumentImplementation">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.RawDocument">
      <summary>
            Gets the document as a BsonDocument.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits">
      <summary>
            Represents a collection of GeoHaystackSearch hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.#ctor">
      <summary>
            Initializes a new instance of the GeoHaystackSearchHits class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.Count">
      <summary>
            Gets the count of the number of hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetEnumerator">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetEnumeratorImplementation">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetHitImplementation(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.Item(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats">
      <summary>
            Represents the stats of a GeoHaystackSearch command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchStats class.
            </summary>
      <param name="stats">The stats.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.BTreeMatches">
      <summary>
            Gets the count of b-tree matches.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.Duration">
      <summary>
            Gets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.NumberOfHits">
      <summary>
            Gets the number of hits.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearArgs">
      <summary>
            Represents the arguments to the GeoNear method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoNearArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.DistanceMultiplier">
      <summary>
            Gets or sets the distance multiplier.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.IncludeLocs">
      <summary>
            Gets or sets a value indicating whether to include locations in the results.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.MaxDistance">
      <summary>
            Gets or sets the max distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.Near">
      <summary>
            Gets or sets the location near which to search.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.Spherical">
      <summary>
            Gets or sets a value indicating whether the search is on a spherical surface.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearArgs.UniqueDocs">
      <summary>
            Gets or sets a value indicating whether to only return a document once even if matches multiple times.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearOptionsDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoGeoNearOptions is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.GeoNearPoint">
      <summary>
            Represents a GeoNearPoint (wraps either an XYPoint or a GeoJsonPoint).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GeoNearPoint</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates})~MongoDB.Driver.GeoNearPoint">
      <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
      <param name="value">The value.</param>
      <returns>A GeoNearPoint value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates})~MongoDB.Driver.GeoNearPoint">
      <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
      <param name="value">The value.</param>
      <returns>A GeoNearPoint value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates})~MongoDB.Driver.GeoNearPoint">
      <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
      <param name="value">The value.</param>
      <returns>A GeoNearPoint value.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.XYPoint)~MongoDB.Driver.GeoNearPoint">
      <summary>
            Implicit conversion to wrap an XYPoint in a GeoNearPoint value.
            </summary>
      <param name="value">The value.</param>
      <returns>A GeoNearPoint value.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoNearPoint.GeoJson`1">
      <summary>
            Represents a GeoNearPoint that wraps a GeoJsonPoint.
            </summary>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.GeoJson`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearPoint.GeoJson`1" /> class.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearPoint.GeoJson`1.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearPoint.Legacy">
      <summary>
            Represents a GeoNearPoint that wraps an XYPoint.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearPoint.Legacy.#ctor(MongoDB.Driver.XYPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearPoint.Legacy" /> class.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearPoint.Legacy.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult">
      <summary>
            Represents the result of a GeoNear command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.Hits">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.HitsImplementation">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.Namespace">
      <summary>
            Gets the namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.Stats">
      <summary>
            Gets the stats.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult`1">
      <summary>
            Represents the result of a GeoNear command.
            </summary>
      <typeparam name="TDocument">The type of the returned documents.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearResult`1" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.Hits">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.HitsImplementation">
      <summary>
            Gets the hits.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult`1.GeoNearHit">
      <summary>
            Represents a GeoNear hit.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHit.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoNearHit class.
            </summary>
      <param name="hit">The hit.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHit.Document">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHit.DocumentImplementation">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult`1.GeoNearHits">
      <summary>
            Represents a collection of GeoNear hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.#ctor(MongoDB.Bson.BsonArray)">
      <summary>
            Initializes a new instance of the GeoNearHits class.
            </summary>
      <param name="hits">The hits.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHits.Count">
      <summary>
            Gets the count of the number of hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetEnumerator">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetEnumeratorImplementation">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetHitImplementation(System.Int32)">
      <summary>
            Gets a hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHits.Item(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult.GeoNearHit">
      <summary>
            Represents a GeoNear hit.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHit.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoNearHit class.
            </summary>
      <param name="hit">The hit.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.Distance">
      <summary>
            Gets the distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.Document">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.DocumentImplementation">
      <summary>
            Gets the document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.RawDocument">
      <summary>
            Gets the document as a BsonDocument.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult.GeoNearHits">
      <summary>
            Represents a collection of GeoNear hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.#ctor">
      <summary>
            Initializes a new instance of the GeoNearHits class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHits.Count">
      <summary>
            Gets the count of the number of hits.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetEnumerator">
      <summary>
            Gets an enumerator for the hits.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetEnumeratorImplementation">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetHitImplementation(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHits.Item(System.Int32)">
      <summary>
            Gets an individual hit.
            </summary>
      <param name="index">The zero based index of the hit.</param>
      <returns>The hit.</returns>
    </member>
    <member name="T:MongoDB.Driver.GeoNearResult.GeoNearStats">
      <summary>
            Represents the stats of a GeoNear command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GeoNearResult.GeoNearStats.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the GeoNearStats class.
            </summary>
      <param name="stats">The stats.</param>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.AverageDistance">
      <summary>
            Gets the average distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.BTreeLocations">
      <summary>
            Gets the count of b-tree locations.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.Duration">
      <summary>
            Gets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.MaxDistance">
      <summary>
            Gets the max distance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.NumberScanned">
      <summary>
            Gets the number of documents scanned.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.ObjectsLoaded">
      <summary>
            Gets the number of documents loaded.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GetIndexesResult">
      <summary>
            Represents the result of GetIndexes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GetIndexesResult.#ctor(MongoDB.Bson.BsonDocument[])">
      <summary>
            Initializes a new instance of the GetIndexesResult class.
            </summary>
      <param name="documents">The raw documents containing the information about the indexes.</param>
    </member>
    <member name="P:MongoDB.Driver.GetIndexesResult.Count">
      <summary>
            Gets the count of indexes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GetIndexesResult.Item(System.Int32)">
      <summary>
            Gets the IndexInfo at the specified index.
            </summary>
      <param name="index">The zero-based index of the IndexInfo to get.</param>
      <returns>An IndexInfo.</returns>
    </member>
    <member name="P:MongoDB.Driver.GetIndexesResult.RawDocuments">
      <summary>
            Gets the raw BSON documents containing the information about the indexes.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GetProfilingLevelResult">
      <summary>
            Represents the results of a GetProfilingLevel command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GetProfilingLevelResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GetProfilingLevelResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.GetProfilingLevelResult.Level">
      <summary>
            Gets the profiling level.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GetProfilingLevelResult.Slow">
      <summary>
            Gets the threshold for a slow query.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GetStatsArgs">
      <summary>
            Represents arguments for the GetStats command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GetStatsArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GetStatsArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GetStatsArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GetStatsArgs.Scale">
      <summary>
            Gets or sets the scale.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GroupArgs">
      <summary>
            Represents arguments for the Group command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GroupArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.GroupArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.FinalizeFunction">
      <summary>
            Gets or sets the finalize function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.Initial">
      <summary>
            Gets or sets the initial value of the aggregation result document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.KeyFields">
      <summary>
            Gets or sets the key fields.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.KeyFunction">
      <summary>
            Gets or sets the key function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GroupArgs.ReduceFunction">
      <summary>
            Gets or sets the reduce function.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GroupByDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoGroupBy is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor">
      <summary>
            Initializes a new instance of the GroupByDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the GroupByDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the GroupByDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.IMongoCollectionOptions">
      <summary>
            A marker interface that represents options for creating a collection (see CollectionOptionsDocument and the CollectionOptions builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoCommand">
      <summary>
            A marker interface that represents a command (see CommandDocument).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoFields">
      <summary>
            A marker interface that represents a list of fields (see FieldsDocument and the Fields builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoGeoHaystackSearchOptions">
      <summary>
            A marker interface that represents geo haystack search options (see GeoSearchHaystackOptionsDocument and the GeoHaystackSearchOptions builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoGeoNearOptions">
      <summary>
            A marker interface that represents geo search options (see GeoNearOptionsDocument and the GeoNearOptions builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoGroupBy">
      <summary>
            A marker interface that represents what to group by (see GroupByDocument and the GroupBy builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoIndexKeys">
      <summary>
            A marker interface that represents the keys of an index (see IndexKeysDocument and the IndexKeys builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoIndexOptions">
      <summary>
            A marker interface that represents options for creating an index (see IndexOptionsDocument and the IndexOptions builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoQuery">
      <summary>
            A marker interface that represents a query (see QueryDocument and the Query builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoScope">
      <summary>
            A marker interface that represents a scope (a set of variables with values, see ScopeDocument).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoSortBy">
      <summary>
            A marker interface that represents a sort order (see SortByDocument and the SortBy builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IMongoUpdate">
      <summary>
            A marker interface that represents an update modifier (see UpdateDocument and the Update builder).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IndexInfo">
      <summary>
            Represents information about an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IndexInfo.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates a new instance of the IndexInfo class.
            </summary>
      <param name="document">The BSON document that contains information about the index.</param>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.DroppedDups">
      <summary>
            Gets a value indicating whether dups were dropped when the index was created.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.IsBackground">
      <summary>
            Gets a value indicating whether the index was created in the background.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.IsSparse">
      <summary>
            Gets a value indicating whether the index is sparse.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.IsUnique">
      <summary>
            Gets a value indicating whether the index is unique.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.Key">
      <summary>
            Gets the key of the index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.Name">
      <summary>
            Gets the name of the index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.Namespace">
      <summary>
            Gets the namespace of the collection that the index is for.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.RawDocument">
      <summary>
            Gets the raw BSON document containing the index information.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.TimeToLive">
      <summary>
            Gets the time to live value (or TimeSpan.MaxValue if index doesn't have a time to live value).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.IndexInfo.Version">
      <summary>
            Gets the version of the index.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.IndexKeysDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoIndexKeys is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor">
      <summary>
            Initializes a new instance of the IndexKeysDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the IndexKeysDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the IndexKeysDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.IndexOptionsDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoIndexOptions is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the IndexOptionsDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.InsertFlags">
      <summary>
            Flags used with the Insert method in MongoCollection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.InsertFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.InsertFlags.ContinueOnError">
      <summary>
            Continue with the remaining documents even if one of the documents resulted in an error.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MapReduceArgs">
      <summary>
            Represents arguments for the MapReduce command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MapReduceArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.MapReduceArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.FinalizeFunction">
      <summary>
            Gets or sets the finalize function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.JsMode">
      <summary>
            Gets or sets the JavaScript mode (if true all intermediate values are kept in memory as JavaScript objects).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.Limit">
      <summary>
            Gets or sets the limit.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.MapFunction">
      <summary>
            Gets or sets the map function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.OutputCollectionName">
      <summary>
            Gets or sets the name of the output collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.OutputDatabaseName">
      <summary>
            Gets or sets the name of the output database.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.OutputIsNonAtomic">
      <summary>
            Gets or sets a value indicating whether Merge and Reduce output should not be atomic.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.OutputIsSharded">
      <summary>
            Gets or sets a value indicating whether the output is sharded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.OutputMode">
      <summary>
            Gets or sets the output mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.ReduceFunction">
      <summary>
            Gets or sets the reduce function.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.Scope">
      <summary>
            Gets or sets the scope (variables available to the map-reduce functions);
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.SortBy">
      <summary>
            Gets or sets the sort order.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceArgs.Verbose">
      <summary>
            Gets or sets a value indicating whether to include extra information in the result (like timing).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MapReduceOutputMode">
      <summary>
            Represents the output mode for a map-reduce operation.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MapReduceOutputMode.Inline">
      <summary>
            The output of the map-reduce operation is returned inline.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MapReduceOutputMode.Replace">
      <summary>
            The output of the map-reduce operation replaces an existing collection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MapReduceOutputMode.Merge">
      <summary>
            The output of the map-reduce operation is merged with an existing collection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MapReduceOutputMode.Reduce">
      <summary>
            The output of the map-reduce operation is merged with an existing collection using the reduce function.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MapReduceResult">
      <summary>
            Represents the result of a map-reduce command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MapReduceResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.CollectionName">
      <summary>
            Gets the output collection name (null if none).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.DatabaseName">
      <summary>
            Gets the output database name (null if none).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.Duration">
      <summary>
            Gets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.EmitCount">
      <summary>
            Gets the emit count.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.GetInlineResultsAs``1">
      <summary>
            Gets the inline results as TDocuments.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
      <returns>The documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.GetInlineResultsAs(System.Type)">
      <summary>
            Gets the inline results as TDocuments.
            </summary>
      <param name="documentType">The type of the documents.</param>
      <returns>The documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.GetResults">
      <summary>
            Gets the results (either inline or fetched from the output collection).
            </summary>
      <returns>The documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.GetResultsAs``1">
      <summary>
            Gets the results as TDocuments (either inline or fetched from the output collection).
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
      <returns>The documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.MapReduceResult.GetResultsAs(System.Type)">
      <summary>
            Gets the results as TDocuments (either inline or fetched from the output collection).
            </summary>
      <param name="documentType">The type of the documents.</param>
      <returns>The documents.</returns>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.InlineResults">
      <summary>
            Gets the inline results.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.InputCount">
      <summary>
            Gets the input count.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MapReduceResult.OutputCount">
      <summary>
            Gets the output count.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoClientExtensions">
      <summary>
            Represents extension methods on MongoClient.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoClientExtensions.GetServer(MongoDB.Driver.MongoClient)">
      <summary>
            Gets a MongoServer object using this client's settings.
            </summary>
      <param name="client">The client.</param>
      <returns>
            A MongoServer.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.MongoCollection">
      <summary>
            Represents a MongoDB collection and the settings used to access it. This class is thread-safe.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.#ctor(MongoDB.Driver.MongoDatabase,System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Protected constructor for abstract base class.
            </summary>
      <param name="database">The database that contains this collection.</param>
      <param name="name">The name of the collection.</param>
      <param name="settings">The settings to use to access this collection.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Aggregate(MongoDB.Driver.AggregateArgs)">
      <summary>
            Represents an aggregate framework query. The command is not sent to the server until the result is enumerated.
            </summary>
      <param name="args">The args.</param>
      <returns>A sequence of documents.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.AggregateExplain(MongoDB.Driver.AggregateArgs)">
      <summary>
            Runs an aggregate command with explain set and returns the explain result.
            </summary>
      <param name="args">The args.</param>
      <returns>The explain result.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Count">
      <summary>
            Counts the number of documents in this collection.
            </summary>
      <returns>The number of documents in this collection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Count(MongoDB.Driver.CountArgs)">
      <summary>
            Counts the number of documents in this collection that match a query.
            </summary>
      <param name="args">The args.</param>
      <returns>
            The number of documents in this collection that match the query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Count(MongoDB.Driver.IMongoQuery)">
      <summary>
            Counts the number of documents in this collection that match a query.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>The number of documents in this collection that match the query.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(MongoDB.Driver.IMongoIndexKeys)">
      <summary>
            Creates an index for this collection.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
      <returns>A WriteConcernResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(MongoDB.Driver.IMongoIndexKeys,MongoDB.Driver.IMongoIndexOptions)">
      <summary>
            Creates an index for this collection.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
      <param name="options">The index options(usually an IndexOptionsDocument or created using the IndexOption builder).</param>
      <returns>A WriteConcernResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(System.String[])">
      <summary>
            Creates an index for this collection.
            </summary>
      <param name="keyNames">The names of the indexed fields.</param>
      <returns>A WriteConcernResult.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollection.Database">
      <summary>
            Gets the database that contains this collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(MongoDB.Driver.DistinctArgs)">
      <summary>
            Returns the distinct values for a given field.
            </summary>
      <param name="args">The args.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The distint values of the field.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Distinct(System.String)">
      <summary>
            Returns the distinct values for a given field.
            </summary>
      <param name="key">The key of the field.</param>
      <returns>The distint values of the field.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(System.String)">
      <summary>
            Returns the distinct values for a given field.
            </summary>
      <param name="key">The key of the field.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The distint values of the field.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Distinct(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the distinct values for a given field for documents that match a query.
            </summary>
      <param name="key">The key of the field.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>The distint values of the field.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the distinct values for a given field for documents that match a query.
            </summary>
      <param name="key">The key of the field.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The distint values of the field.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Drop">
      <summary>
            Drops this collection.
            </summary>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.DropAllIndexes">
      <summary>
            Drops all indexes on this collection.
            </summary>
      <returns>A <see cref="T:MongoDB.Driver.CommandResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.DropIndex(MongoDB.Driver.IMongoIndexKeys)">
      <summary>
            Drops an index on this collection.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
      <returns>A <see cref="T:MongoDB.Driver.CommandResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.DropIndex(System.String[])">
      <summary>
            Drops an index on this collection.
            </summary>
      <param name="keyNames">The names of the indexed fields.</param>
      <returns>A <see cref="T:MongoDB.Driver.CommandResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.DropIndexByName(System.String)">
      <summary>
            Drops an index on this collection.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>A <see cref="T:MongoDB.Driver.CommandResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(MongoDB.Driver.IMongoIndexKeys)">
      <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(MongoDB.Driver.IMongoIndexKeys,MongoDB.Driver.IMongoIndexOptions)">
      <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
      <param name="options">The index options(usually an IndexOptionsDocument or created using the IndexOption builder).</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(System.String[])">
      <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
      <param name="keyNames">The names of the indexed fields.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Exists">
      <summary>
            Tests whether this collection exists.
            </summary>
      <returns>True if this collection exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAllAs``1">
      <summary>
            Returns a cursor that can be used to find all documents in this collection as TDocuments.
            </summary>
      <typeparam name="TDocument">The nominal type of the documents.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAllAs(System.Type)">
      <summary>
            Returns a cursor that can be used to find all documents in this collection as TDocuments.
            </summary>
      <param name="documentType">The nominal type of the documents.</param>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.FindAndModifyArgs)">
      <summary>
            Finds one matching document using the supplied arguments and applies the specified update to it.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate)">
      <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="sortBy">The sort order to select one of the matching documents.</param>
      <param name="update">The update to apply to the matching document.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.IMongoFields,System.Boolean,System.Boolean)">
      <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="sortBy">The sort order to select one of the matching documents.</param>
      <param name="update">The update to apply to the matching document.</param>
      <param name="fields">Which fields of the modified document to return in the <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</param>
      <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</param>
      <param name="upsert">Whether to do an upsert if no matching document is found.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,System.Boolean)">
      <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="sortBy">The sort order to select one of the matching documents.</param>
      <param name="update">The update to apply to the matching document.</param>
      <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,System.Boolean,System.Boolean)">
      <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="sortBy">The sort order to select one of the matching documents.</param>
      <param name="update">The update to apply to the matching document.</param>
      <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</param>
      <param name="upsert">Whether to do an upsert if no matching document is found.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndRemove(MongoDB.Driver.FindAndRemoveArgs)">
      <summary>
            Finds one matching document using the supplied args and removes it from this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAndRemove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy)">
      <summary>
            Finds one matching document using the query and sortBy parameters and removes it from this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="sortBy">The sort order to select one of the matching documents.</param>
      <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAs``1(MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDocuments.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindAs(System.Type,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDocuments.
            </summary>
      <param name="documentType">The nominal type of the documents.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1">
      <summary>
            Returns one document in this collection as a TDocument.
            </summary>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1(MongoDB.Driver.FindOneArgs)">
      <summary>
            Returns one document in this collection as a TDocument.
            </summary>
      <param name="args">The args.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1(MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns one document in this collection that matches a query as a TDocument.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type)">
      <summary>
            Returns one document in this collection as a TDocument.
            </summary>
      <param name="documentType">The nominal type of the documents.</param>
      <returns>A document (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type,MongoDB.Driver.FindOneArgs)">
      <summary>
            Returns one document in this collection as a TDocument.
            </summary>
      <param name="documentType">The nominal type of the documents.</param>
      <param name="args">The args.</param>
      <returns>A document (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns one document in this collection that matches a query as a TDocument.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneByIdAs``1(MongoDB.Bson.BsonValue)">
      <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDocument.
            </summary>
      <param name="id">The id of the document.</param>
      <typeparam name="TDocument">The nominal type of the document.</typeparam>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.FindOneByIdAs(System.Type,MongoDB.Bson.BsonValue)">
      <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDocument.
            </summary>
      <param name="documentType">The nominal type of the document.</param>
      <param name="id">The id of the document.</param>
      <returns>A TDocument (or null if not found).</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollection.FullName">
      <summary>
            Gets the fully qualified name of this collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs``1(MongoDB.Driver.GeoHaystackSearchArgs)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="args">The args.</param>
      <typeparam name="TDocument">The type of the found documents.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs``1(System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="options">The options for the geoHaystack search (null if none).</param>
      <typeparam name="TDocument">The type of the found documents.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs(System.Type,MongoDB.Driver.GeoHaystackSearchArgs)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs(System.Type,System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="options">The options for the geoHaystack search (null if none).</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.GeoNearArgs)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="args">The args.</param>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <param name="options">The GeoNear command options (usually a GeoNearOptionsDocument or constructed using the GeoNearOptions builder).</param>
      <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.GeoNearArgs)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="documentType">The type to deserialize the documents as.</param>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <param name="options">The GeoNear command options (usually a GeoNearOptionsDocument or constructed using the GeoNearOptions builder).</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GetIndexes">
      <summary>
            Gets the indexes for this collection.
            </summary>
      <returns>A list of BsonDocuments that describe the indexes.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GetStats">
      <summary>
            Gets the stats for this collection.
            </summary>
      <returns>The stats for this collection as a <see cref="T:MongoDB.Driver.CollectionStatsResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.GetStats(MongoDB.Driver.GetStatsArgs)">
      <summary>
            Gets the stats for this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>The stats for this collection as a <see cref="T:MongoDB.Driver.CollectionStatsResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.GroupArgs)">
      <summary>
            Runs the group command on this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A list of results as BsonDocuments.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
      <summary>
            Runs the group command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="keyFunction">A JavaScript function that returns the key value to group on.</param>
      <param name="initial">Initial value passed to the reduce function for each group.</param>
      <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
      <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
      <returns>A list of results as BsonDocuments.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoGroupBy,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
      <summary>
            Runs the group command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="keys">The names of the fields to group on.</param>
      <param name="initial">Initial value passed to the reduce function for each group.</param>
      <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
      <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
      <returns>A list of results as BsonDocuments.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
      <summary>
            Runs the group command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="key">The name of the field to group on.</param>
      <param name="initial">Initial value passed to the reduce function for each group.</param>
      <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
      <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
      <returns>A list of results as BsonDocuments.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.IndexExists(MongoDB.Driver.IMongoIndexKeys)">
      <summary>
            Tests whether an index exists.
            </summary>
      <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
      <returns>True if the index exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.IndexExists(System.String[])">
      <summary>
            Tests whether an index exists.
            </summary>
      <param name="keyNames">The names of the fields in the index.</param>
      <returns>True if the index exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.IndexExistsByName(System.String)">
      <summary>
            Tests whether an index exists.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>True if the index exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InitializeOrderedBulkOperationAs``1">
      <summary>
            Creates a fluent builder for an ordered bulk operation.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
      <returns>A fluent bulk operation builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InitializeUnorderedBulkOperationAs``1">
      <summary>
            Creates a fluent builder for an unordered bulk operation.
            </summary>
      <typeparam name="TDocument">The type of the documents.</typeparam>
      <returns>A fluent bulk operation builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="nominalType">The nominal type of the document to insert.</param>
      <param name="document">The document to insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="nominalType">The nominal type of the document to insert.</param>
      <param name="document">The document to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object,MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="nominalType">The nominal type of the document to insert.</param>
      <param name="document">The document to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0,MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="nominalType">The nominal type of the documents to insert.</param>
      <param name="documents">The documents to insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="nominalType">The nominal type of the documents to insert.</param>
      <param name="documents">The documents to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable,MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="nominalType">The nominal type of the documents to insert.</param>
      <param name="documents">The documents to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.IsCapped">
      <summary>
            Tests whether this collection is capped.
            </summary>
      <returns>True if this collection is capped.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Driver.MapReduceArgs)">
      <summary>
            Runs a map-reduce command on this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.MapReduceResult" />.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollection.Name">
      <summary>
            Gets the name of this collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.ParallelScanAs``1(MongoDB.Driver.ParallelScanArgs{``0})">
      <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
      <param name="args">The args.</param>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <returns>Multiple enumerators, one for each cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.ParallelScanAs(System.Type,MongoDB.Driver.ParallelScanArgs)">
      <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
      <param name="documentType">Type of the document.</param>
      <param name="args">The args.</param>
      <returns>Multiple enumerators, one for each cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.ReIndex">
      <summary>
            Runs the ReIndex command on this collection.
            </summary>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery)">
      <summary>
            Removes documents from this collection that match a query.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.RemoveFlags)">
      <summary>
            Removes documents from this collection that match a query.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="flags">The flags for this Remove (see <see cref="T:MongoDB.Driver.RemoveFlags" />).</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.RemoveFlags,MongoDB.Driver.WriteConcern)">
      <summary>
            Removes documents from this collection that match a query.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="flags">The flags for this Remove (see <see cref="T:MongoDB.Driver.RemoveFlags" />).</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.WriteConcern)">
      <summary>
            Removes documents from this collection that match a query.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.RemoveAll">
      <summary>
            Removes all documents from this collection (see also <see cref="M:MongoDB.Driver.MongoCollection.Drop" />).
            </summary>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.RemoveAll(MongoDB.Driver.WriteConcern)">
      <summary>
            Removes all documents from this collection (see also <see cref="M:MongoDB.Driver.MongoCollection.Drop" />).
            </summary>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="nominalType">The type of the document to save.</param>
      <param name="document">The document to save.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="nominalType">The type of the document to save.</param>
      <param name="document">The document to save.</param>
      <param name="options">The options to use for this Save.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object,MongoDB.Driver.WriteConcern)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="nominalType">The type of the document to save.</param>
      <param name="document">The document to save.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <typeparam name="TNominalType">The type of the document to save.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <param name="options">The options to use for this Save.</param>
      <typeparam name="TNominalType">The type of the document to save.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0,MongoDB.Driver.WriteConcern)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <typeparam name="TNominalType">The type of the document to save.</typeparam>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCollection.Settings">
      <summary>
            Gets the settings being used to access this collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.ToString">
      <summary>
            Gets a canonical string representation for this database.
            </summary>
      <returns>A canonical string representation for this database.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate)">
      <summary>
            Updates one matching document in this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="update">The update to perform on the matching document.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.MongoUpdateOptions)">
      <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="update">The update to perform on the matching document.</param>
      <param name="options">The update options.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.UpdateFlags)">
      <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="update">The update to perform on the matching document.</param>
      <param name="flags">The flags for this Update.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.UpdateFlags,MongoDB.Driver.WriteConcern)">
      <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="update">The update to perform on the matching document.</param>
      <param name="flags">The flags for this Update.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.WriteConcern)">
      <summary>
            Updates one matching document in this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="update">The update to perform on the matching document.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Validate">
      <summary>
            Validates the integrity of this collection.
            </summary>
      <returns>A <see cref="T:MongoDB.Driver.ValidateCollectionResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection.Validate(MongoDB.Driver.ValidateCollectionArgs)">
      <summary>
            Validates the integrity of this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.ValidateCollectionResult" />.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoCollection`1">
      <summary>
            Represents a MongoDB collection and the settings used to access it as well as a default document type. This class is thread-safe.
            </summary>
      <typeparam name="TDefaultDocument">The default document type of the collection.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.#ctor(MongoDB.Driver.MongoDatabase,System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Creates a new instance of MongoCollection. Normally you would call one of the indexers or GetCollection methods
            of MongoDatabase instead.
            </summary>
      <param name="database">The database that contains this collection.</param>
      <param name="name">The name of the collection.</param>
      <param name="settings">The settings to use to access this collection.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Find(MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDefaultDocuments.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.FindAll">
      <summary>
            Returns a cursor that can be used to find all documents in this collection as TDefaultDocuments.
            </summary>
      <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.FindOne">
      <summary>
            Returns one document in this collection as a TDefaultDocument.
            </summary>
      <returns>A TDefaultDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.FindOne(MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns one document in this collection that matches a query as a TDefaultDocument.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <returns>A TDefaultDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.FindOneById(MongoDB.Bson.BsonValue)">
      <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDefaultDocument.
            </summary>
      <param name="id">The id of the document.</param>
      <returns>A TDefaultDocument (or null if not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.GeoHaystackSearch(MongoDB.Driver.GeoHaystackSearchArgs)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.GeoHaystackSearch(System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
      <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="options">The options for the geoHaystack search (null if none).</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.GeoNearArgs)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="args">The args.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
      <summary>
            Runs a GeoNear command on this collection.
            </summary>
      <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
      <param name="x">The x coordinate of the starting location.</param>
      <param name="y">The y coordinate of the starting location.</param>
      <param name="limit">The maximum number of results returned.</param>
      <param name="options">Options for the GeoNear command (see <see cref="T:MongoDB.Driver.GeoNearOptionsDocument" />, <see cref="T:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper" />, and the <see cref="T:MongoDB.Driver.Builders.GeoNearOptions" /> builder).</param>
      <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.InitializeOrderedBulkOperation">
      <summary>
            Creates a fluent builder for an ordered bulk operation.
            </summary>
      <returns>A fluent bulk operation builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.InitializeUnorderedBulkOperation">
      <summary>
            Creates a fluent builder for an unordered bulk operation.
            </summary>
      <returns>A fluent bulk operation builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0,MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
      <param name="document">The document to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <param name="options">The options to use for this Insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.WriteConcern)">
      <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
      <param name="documents">The documents to insert.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.ParallelScan(MongoDB.Driver.ParallelScanArgs{`0})">
      <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
      <param name="args">The args.</param>
      <returns>Multiple enumerators, one for each cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0,MongoDB.Driver.MongoInsertOptions)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <param name="options">The options to use for this Save.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0,MongoDB.Driver.WriteConcern)">
      <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
      <param name="document">The document to save.</param>
      <param name="writeConcern">The write concern to use for this Insert.</param>
      <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoCursor">
      <summary>
            An object that can be enumerated to fetch the results of a query. The query is not sent
            to the server until you begin enumerating the results.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadConcern,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursor" /> class.
            </summary>
      <param name="collection">The collection.</param>
      <param name="query">The query.</param>
      <param name="readConcern">The read concern.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a new MongoCursor. It is very unlikely that you will call this constructor. Instead, see all the Find methods in MongoCollection.
            </summary>
      <param name="collection">The collection.</param>
      <param name="query">The query.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.BatchSize">
      <summary>
            Gets or sets the batch size (the number of documents returned per batch).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Clone``1">
      <summary>
            Creates a clone of the cursor.
            </summary>
      <typeparam name="TDocument">The type of the documents returned.</typeparam>
      <returns>A clone of the cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Clone``1(MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a clone of the cursor.
            </summary>
      <param name="serializer">The serializer to use.</param>
      <typeparam name="TDocument">The type of the documents returned.</typeparam>
      <returns>
            A clone of the cursor.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Clone(System.Type)">
      <summary>
            Creates a clone of the cursor.
            </summary>
      <param name="documentType">The type of the documents returned.</param>
      <returns>A clone of the cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Clone(System.Type,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a clone of the cursor.
            </summary>
      <param name="documentType">The type of the documents returned.</param>
      <param name="serializer">The serializer to use.</param>
      <returns>
            A clone of the cursor.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Collection">
      <summary>
            Gets the collection that is being queried.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Count">
      <summary>
            Returns the number of documents that match the query (ignores Skip and Limit, unlike Size which honors them).
            </summary>
      <returns>The number of documents that match the query.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Create(System.Type,MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadConcern,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a cursor.
            </summary>
      <param name="documentType">Type of the document.</param>
      <param name="collection">The collection.</param>
      <param name="query">The query.</param>
      <param name="readConcern">The read concern.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
      <returns>
            A cursor.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Create(System.Type,MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a cursor.
            </summary>
      <param name="documentType">The type of the returned documents.</param>
      <param name="collection">The collection to query.</param>
      <param name="query">A query.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
      <returns>
            A cursor.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Database">
      <summary>
            Gets the database that constains the collection that is being queried.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Explain">
      <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
      <returns>An explanation of thow the query was executed.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Explain(System.Boolean)">
      <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
      <param name="verbose">Whether the explanation should contain more details.</param>
      <returns>An explanation of thow the query was executed.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Fields">
      <summary>
            Gets or sets the fields that will be returned from the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Flags">
      <summary>
            Gets or sets the query flags.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.IEnumerableGetEnumerator">
      <summary>
            Gets the non-generic enumerator.
            </summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.IsFrozen">
      <summary>
            Gets whether the cursor has been frozen to prevent further changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Limit">
      <summary>
            Gets or sets the limit on the number of documents to be returned.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.MaxAwaitTime">
      <summary>
            Gets or sets the maximum await time for TailableAwait cursors.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Options">
      <summary>
            Gets or sets the cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Query">
      <summary>
            Gets the query that will be sent to the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.ReadConcern">
      <summary>
            Gets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Server">
      <summary>
            Gets the server that the query will be sent to.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetBatchSize(System.Int32)">
      <summary>
            Sets the batch size (the number of documents returned per batch).
            </summary>
      <param name="batchSize">The number of documents in each batch.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetFields(MongoDB.Driver.IMongoFields)">
      <summary>
            Sets the fields that will be returned from the server.
            </summary>
      <param name="fields">The fields that will be returned from the server.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetFields(System.String[])">
      <summary>
            Sets the fields that will be returned from the server.
            </summary>
      <param name="fields">The fields that will be returned from the server.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetFlags(MongoDB.Driver.QueryFlags)">
      <summary>
            Sets the query flags.
            </summary>
      <param name="flags">The query flags.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetHint(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the index hint for the query.
            </summary>
      <param name="hint">The index hint.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetHint(System.String)">
      <summary>
            Sets the index hint for the query.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetLimit(System.Int32)">
      <summary>
            Sets the limit on the number of documents to be returned.
            </summary>
      <param name="limit">The limit on the number of documents to be returned.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetMax(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the max value for the index key range of documents to return (note: the max value itself is excluded from the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
      <param name="max">The max value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetMaxAwaitTime(System.Nullable{System.TimeSpan})">
      <summary>
            Sets the maximum await time for tailable await cursors.
            </summary>
      <param name="value">The value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetMaxScan(System.Int32)">
      <summary>
            Sets the maximum number of documents to scan.
            </summary>
      <param name="maxScan">The maximum number of documents to scan.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetMaxTime(System.TimeSpan)">
      <summary>
            Sets the maximum time the server should spend on this query.
            </summary>
      <param name="maxTime">The max time.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetMin(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the min value for the index key range of documents to return (note: the min value itself is included in the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
      <param name="min">The min value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetOption(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets a cursor option.
            </summary>
      <param name="name">The name of the option.</param>
      <param name="value">The value of the option.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets multiple cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
      <param name="options">The options.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetReadPreference(MongoDB.Driver.ReadPreference)">
      <summary>
            Sets the read preference.
            </summary>
      <param name="readPreference">The read preference.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Sets the serializer.
            </summary>
      <param name="serializer">The serializer.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetShowDiskLoc">
      <summary>
            Sets the $showDiskLoc option.
            </summary>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetSkip(System.Int32)">
      <summary>
            Sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
      <param name="skip">The number of documents to skip.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetSnapshot">
      <summary>
            Sets the $snapshot option.
            </summary>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
      <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
      <param name="sortBy">The sort order.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.SetSortOrder(System.String[])">
      <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
      <param name="keys">The names of the fields to sort by.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor.Size">
      <summary>
            Returns the size of the result set (honors Skip and Limit, unlike Count which does not).
            </summary>
      <returns>The size of the result set.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor.Skip">
      <summary>
            Gets or sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoCursor`1">
      <summary>
            An object that can be enumerated to fetch the results of a query. The query is not sent
            to the server until you begin enumerating the results.
            </summary>
      <typeparam name="TDocument">The type of the documents returned.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadConcern,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCursor`1" /> class.
            </summary>
      <param name="collection">The collection.</param>
      <param name="query">The query.</param>
      <param name="readConcern">The read concern.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
      <summary>
            Creates a new MongoCursor. It is very unlikely that you will call this constructor. Instead, see all the Find methods in MongoCollection.
            </summary>
      <param name="collection">The collection.</param>
      <param name="query">The query.</param>
      <param name="readPreference">The read preference.</param>
      <param name="serializer">The serializer.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.GetEnumerator">
      <summary>
            Returns an enumerator that can be used to enumerate the cursor. Normally you will use the foreach statement
            to enumerate the cursor (foreach will call GetEnumerator for you).
            </summary>
      <returns>An enumerator that can be used to iterate over the cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.IEnumerableGetEnumerator">
      <summary>
            Gets the non-generic enumerator.
            </summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoCursor`1.Serializer">
      <summary>
            Gets the serializer.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetBatchSize(System.Int32)">
      <summary>
            Sets the batch size (the number of documents returned per batch).
            </summary>
      <param name="batchSize">The number of documents in each batch.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetFields(MongoDB.Driver.IMongoFields)">
      <summary>
            Sets the fields that will be returned from the server.
            </summary>
      <param name="fields">The fields that will be returned from the server.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetFields(System.String[])">
      <summary>
            Sets the fields that will be returned from the server.
            </summary>
      <param name="fields">The fields that will be returned from the server.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetFlags(MongoDB.Driver.QueryFlags)">
      <summary>
            Sets the query flags.
            </summary>
      <param name="flags">The query flags.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetHint(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the index hint for the query.
            </summary>
      <param name="hint">The index hint.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetHint(System.String)">
      <summary>
            Sets the index hint for the query.
            </summary>
      <param name="indexName">The name of the index.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetLimit(System.Int32)">
      <summary>
            Sets the limit on the number of documents to be returned.
            </summary>
      <param name="limit">The limit on the number of documents to be returned.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetMax(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the max value for the index key range of documents to return (note: the max value itself is excluded from the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
      <param name="max">The max value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetMaxAwaitTime(System.Nullable{System.TimeSpan})">
      <summary>
            Sets the maximum await time for tailable await cursors.
            </summary>
      <param name="value">The value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetMaxScan(System.Int32)">
      <summary>
            Sets the maximum number of documents to scan.
            </summary>
      <param name="maxScan">The maximum number of documents to scan.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetMaxTime(System.TimeSpan)">
      <summary>
            Sets the maximum time the server should spend on this query.
            </summary>
      <param name="maxTime">The max time.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetMin(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the min value for the index key range of documents to return (note: the min value itself is included in the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
      <param name="min">The min value.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetOption(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets a cursor option.
            </summary>
      <param name="name">The name of the option.</param>
      <param name="value">The value of the option.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets multiple cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
      <param name="options">The options.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetReadPreference(MongoDB.Driver.ReadPreference)">
      <summary>
            Sets the read preference.
            </summary>
      <param name="readPreference">The read preference.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
      <summary>
            Sets the serializer.
            </summary>
      <param name="serializer">The serializer.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetShowDiskLoc">
      <summary>
            Sets the $showDiskLoc option.
            </summary>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetSkip(System.Int32)">
      <summary>
            Sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
      <param name="skip">The number of documents to skip.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetSnapshot">
      <summary>
            Sets the $snapshot option.
            </summary>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
      <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
      <param name="sortBy">The sort order.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoCursor`1.SetSortOrder(System.String[])">
      <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
      <param name="keys">The names of the fields to sort by.</param>
      <returns>The cursor (so you can chain method calls to it).</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoDatabase">
      <summary>
            Represents a MongoDB database and the settings used to access it. This class is thread-safe.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.#ctor(MongoDB.Driver.MongoServer,System.String,MongoDB.Driver.MongoDatabaseSettings)">
      <summary>
            Creates a new instance of MongoDatabase. Normally you would call one of the indexers or GetDatabase methods
            of MongoServer instead.
            </summary>
      <param name="server">The server that contains this database.</param>
      <param name="name">The name of the database.</param>
      <param name="settings">The settings to use to access this database.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.AddUser(MongoDB.Driver.MongoUser)">
      <summary>
            Adds a user to this database.
            </summary>
      <param name="user">The user.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.CollectionExists(System.String)">
      <summary>
            Tests whether a collection exists on this database.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <returns>True if the collection exists.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.CommandCollection">
      <summary>
            Gets the command collection for this database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.CreateCollection(System.String)">
      <summary>
            Creates a collection. MongoDB creates collections automatically when they are first used, so
            this command is mainly here for frameworks.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.CreateCollection(System.String,MongoDB.Driver.IMongoCollectionOptions)">
      <summary>
            Creates a collection. MongoDB creates collections automatically when they are first used, so
            you only need to call this method if you want to provide non-default options.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="options">Options for creating this collection (usually a CollectionOptionsDocument or constructed using the CollectionOptions builder).</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.Drop">
      <summary>
            Drops a database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.DropCollection(System.String)">
      <summary>
            Drops a collection.
            </summary>
      <param name="collectionName">The name of the collection to drop.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Bson.BsonJavaScript,System.Object[])">
      <summary>
            Evaluates JavaScript code at the server.
            </summary>
      <param name="code">The code to evaluate.</param>
      <param name="args">Optional arguments (only used when the code is a function with parameters).</param>
      <returns>The result of evaluating the code.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Driver.EvalArgs)">
      <summary>
            Evaluates JavaScript code at the server.
            </summary>
      <param name="args">The args.</param>
      <returns>The result of evaluating the code.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Driver.EvalFlags,MongoDB.Bson.BsonJavaScript,System.Object[])">
      <summary>
            Evaluates JavaScript code at the server.
            </summary>
      <param name="flags">Flags that control Eval options.</param>
      <param name="code">The code to evaluate.</param>
      <param name="args">Optional arguments (only used when the code is a function with parameters).</param>
      <returns>The result of evaluating the code.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRef(MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef.
            </summary>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <returns>A BsonDocument (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRefAs``1(MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef, deserialized as a <typeparamref name="TDocument" />.
            </summary>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <typeparam name="TDocument">The nominal type of the document to fetch.</typeparam>
      <returns>A <typeparamref name="TDocument" /> (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRefAs(System.Type,MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef.
            </summary>
      <param name="documentType">The nominal type of the document to fetch.</param>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <returns>An instance of nominalType (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.FindAllUsers">
      <summary>
            Finds all users of this database.
            </summary>
      <returns>An array of users.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.FindUser(System.String)">
      <summary>
            Finds a user of this database.
            </summary>
      <param name="username">The username.</param>
      <returns>The user.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="collectionSettings">The settings to use when accessing this collection.</param>
      <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="collectionSettings">The settings to use when accessing this collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="writeConcern">The write concern to use when accessing this collection.</param>
      <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="writeConcern">The write concern to use when accessing this collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="defaultDocumentType">The default document type.</param>
      <param name="collectionName">The name of the collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String,MongoDB.Driver.MongoCollectionSettings)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="defaultDocumentType">The default document type.</param>
      <param name="collectionName">The name of the collection.</param>
      <param name="collectionSettings">The settings to use when accessing this collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="defaultDocumentType">The default document type.</param>
      <param name="collectionName">The name of the collection.</param>
      <param name="writeConcern">The write concern to use when accessing this collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCollectionNames">
      <summary>
            Gets a list of the names of all the collections in this database.
            </summary>
      <returns>A list of collection names.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetCurrentOp">
      <summary>
            Gets the current operation.
            </summary>
      <returns>The current operation.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetGridFS(MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Gets an instance of MongoGridFS for this database using custom GridFS settings.
            </summary>
      <param name="gridFSSettings">The GridFS settings to use.</param>
      <returns>An instance of MongoGridFS.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetProfilingInfo(MongoDB.Driver.IMongoQuery)">
      <summary>
            Gets one or more documents from the system.profile collection.
            </summary>
      <param name="query">A query to select which documents to return.</param>
      <returns>A cursor.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetProfilingLevel">
      <summary>
            Gets the current profiling level.
            </summary>
      <returns>The profiling level.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetSisterDatabase(System.String)">
      <summary>
            Gets a sister database on the same server.
            </summary>
      <param name="databaseName">The name of the sister database.</param>
      <returns>An instance of MongoDatabase.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.GetStats">
      <summary>
            Gets the current database stats.
            </summary>
      <returns>An instance of DatabaseStatsResult.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.GridFS">
      <summary>
            Gets the default GridFS instance for this database. The default GridFS instance uses default GridFS
            settings. See also GetGridFS if you need to use GridFS with custom settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.IsCollectionNameValid(System.String,System.String@)">
      <summary>
            Checks whether a given collection name is valid in this database.
            </summary>
      <param name="collectionName">The collection name.</param>
      <param name="message">An error message if the collection name is not valid.</param>
      <returns>True if the collection name is valid; otherwise, false.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.Item(System.String)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.Item(System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
      <param name="collectionName">The name of the collection.</param>
      <param name="writeConcern">The write concern to use when accessing this collection.</param>
      <returns>An instance of MongoCollection.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.Name">
      <summary>
            Gets the name of this database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RemoveUser(MongoDB.Driver.MongoUser)">
      <summary>
            Removes a user from this database.
            </summary>
      <param name="user">The user to remove.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RemoveUser(System.String)">
      <summary>
            Removes a user from this database.
            </summary>
      <param name="username">The username to remove.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RenameCollection(System.String,System.String)">
      <summary>
            Renames a collection on this database.
            </summary>
      <param name="oldCollectionName">The old name for the collection.</param>
      <param name="newCollectionName">The new name for the collection.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RenameCollection(System.String,System.String,System.Boolean)">
      <summary>
            Renames a collection on this database.
            </summary>
      <param name="oldCollectionName">The old name for the collection.</param>
      <param name="newCollectionName">The new name for the collection.</param>
      <param name="dropTarget">Whether to drop the target collection first if it already exists.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommand(MongoDB.Driver.IMongoCommand)">
      <summary>
            Runs a command on this database.
            </summary>
      <param name="command">The command object.</param>
      <returns>A CommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommand(System.String)">
      <summary>
            Runs a command on this database.
            </summary>
      <param name="commandName">The name of the command.</param>
      <returns>A CommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs``1(MongoDB.Driver.IMongoCommand)">
      <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
      <param name="command">The command object.</param>
      <typeparam name="TCommandResult">The type of the returned command result.</typeparam>
      <returns>A TCommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs``1(MongoDB.Driver.IMongoCommand,MongoDB.Driver.ReadPreference)">
      <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
      <param name="command">The command object.</param>
      <param name="readPreference">The read preference.</param>
      <typeparam name="TCommandResult">The type of the returned command result.</typeparam>
      <returns>A TCommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs``1(System.String)">
      <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
      <param name="commandName">The name of the command.</param>
      <typeparam name="TCommandResult">The type of the returned command result.</typeparam>
      <returns>A TCommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs(System.Type,MongoDB.Driver.IMongoCommand)">
      <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
      <param name="commandResultType">The command result type.</param>
      <param name="command">The command object.</param>
      <returns>A TCommandResult</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs(System.Type,System.String)">
      <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
      <param name="commandResultType">The command result type.</param>
      <param name="commandName">The name of the command.</param>
      <returns>A TCommandResult</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.Server">
      <summary>
            Gets the server that contains this database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.SetProfilingLevel(MongoDB.Driver.ProfilingLevel)">
      <summary>
            Sets the level of profile information to write.
            </summary>
      <param name="level">The profiling level.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.SetProfilingLevel(MongoDB.Driver.ProfilingLevel,System.TimeSpan)">
      <summary>
            Sets the level of profile information to write.
            </summary>
      <param name="level">The profiling level.</param>
      <param name="slow">The threshold that defines a slow query.</param>
      <returns>A CommandResult.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoDatabase.Settings">
      <summary>
            Gets the settings being used to access this database.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoDatabase.ToString">
      <summary>
            Gets a canonical string representation for this database.
            </summary>
      <returns>A canonical string representation for this database.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoInsertOptions">
      <summary>
            Represents the options to use for an Insert or InsertBatch operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoInsertOptions.#ctor">
      <summary>
            Initializes a new instance of the MongoInsertOptions class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoInsertOptions.#ctor(MongoDB.Driver.MongoCollection)">
      <summary>
            Initializes a new instance of the MongoInsertOptions class.
            </summary>
      <param name="collection">The collection from which to get default settings for the options.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoInsertOptions.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoInsertOptions.Flags">
      <summary>
            Gets or sets the insert flags.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoInsertOptions.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use for the Insert.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoServer">
      <summary>
            Represents a MongoDB server (either a single instance or a replica set) and the settings used to access it. This class is thread-safe.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.#ctor(MongoDB.Driver.MongoServerSettings)">
      <summary>
            Creates a new instance of MongoServer. Normally you will use one of the Create methods instead
            of the constructor to create instances of this class.
            </summary>
      <param name="settings">The settings for this instance of MongoServer.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Arbiters">
      <summary>
            Gets the arbiter instances.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.BuildInfo">
      <summary>
            Gets the build info of the server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.Connect">
      <summary>
            Connects to the server. Normally there is no need to call this method as
            the driver will connect to the server automatically when needed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.Connect(System.TimeSpan)">
      <summary>
            Connects to the server. Normally there is no need to call this method as
            the driver will connect to the server automatically when needed.
            </summary>
      <param name="timeout">How long to wait before timing out.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.DatabaseExists(System.String)">
      <summary>
            Tests whether a database exists.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <returns>True if the database exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.Disconnect">
      <summary>
            Disconnects from the server. Normally there is no need to call this method so
            you should be sure to have a good reason to call it.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.DropDatabase(System.String)">
      <summary>
            Drops a database.
            </summary>
      <param name="databaseName">The name of the database to be dropped.</param>
      <returns>A <see cref="T:MongoDB.Driver.CommandResult" />.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.FetchDBRef(MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef.
            </summary>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <returns>A BsonDocument (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.FetchDBRefAs``1(MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef, deserialized as a <typeparamref name="TDocument" />.
            </summary>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <typeparam name="TDocument">The nominal type of the document to fetch.</typeparam>
      <returns>A <typeparamref name="TDocument" /> (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.FetchDBRefAs(System.Type,MongoDB.Driver.MongoDBRef)">
      <summary>
            Fetches the document referred to by the DBRef.
            </summary>
      <param name="documentType">The nominal type of the document to fetch.</param>
      <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef" /> to fetch.</param>
      <returns>The document (or null if the document was not found).</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetAllServers">
      <summary>
            Gets an array containing a snapshot of the set of all servers that have been created so far.
            </summary>
      <returns>An array containing a snapshot of the set of all servers that have been created so far.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String)">
      <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <returns>A new or existing instance of MongoDatabase.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
      <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <param name="databaseSettings">The settings to use with this database.</param>
      <returns>A new or existing instance of MongoDatabase.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <param name="writeConcern">The write concern to use with this database.</param>
      <returns>A new or existing instance of MongoDatabase.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetDatabaseNames">
      <summary>
            Gets the names of the databases on this server.
            </summary>
      <returns>A list of database names.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.GetServerInstance(MongoDB.Driver.MongoServerAddress)">
      <summary>
            Gets the server instance.
            </summary>
      <param name="address">The address.</param>
      <returns>The server instance.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Instance">
      <summary>
            Gets the one and only instance for this server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Instances">
      <summary>
            Gets the instances for this server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.IsDatabaseNameValid(System.String,System.String@)">
      <summary>
            Checks whether a given database name is valid on this server.
            </summary>
      <param name="databaseName">The database name.</param>
      <param name="message">An error message if the database name is not valid.</param>
      <returns>True if the database name is valid; otherwise, false.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Item(System.String)">
      <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <returns>A new or existing instance of MongoDatabase.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Item(System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
      <param name="databaseName">The name of the database.</param>
      <param name="writeConcern">The write concern to use with this database.</param>
      <returns>A new or existing instance of MongoDatabase.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.MaxServerCount">
      <summary>
            Gets or sets the maximum number of instances of MongoServer that will be allowed to be created.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Passives">
      <summary>
            Gets the passive instances.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.Ping">
      <summary>
            Checks whether the server is alive (throws an exception if not). If server is a replica set, pings all members one at a time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Primary">
      <summary>
            Gets the primary instance (null if there is no primary).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.Reconnect">
      <summary>
            Reconnects to the server. Normally there is no need to call this method. All connections
            are closed and new connections will be opened as needed. Calling
            this method frequently will result in connection thrashing.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.ReplicaSetName">
      <summary>
            Gets the name of the replica set (null if not connected to a replica set).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Secondaries">
      <summary>
            Gets the secondary instances.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.SequentialId">
      <summary>
            Gets the unique sequential Id for this server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.ServerCount">
      <summary>
            Gets the number of instances of MongoServer that have been created.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.Settings">
      <summary>
            Gets the settings for this server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServer.State">
      <summary>
            Gets the current state of this server (as of the last operation, not updated until another operation is performed).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.UnregisterAllServers">
      <summary>
            Unregisters all servers from the dictionary used by Create to remember which servers have already been created.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServer.UnregisterServer(MongoDB.Driver.MongoServer)">
      <summary>
            Unregisters a server from the dictionary used by Create to remember which servers have already been created.
            </summary>
      <param name="server">The server to unregister.</param>
    </member>
    <member name="T:MongoDB.Driver.MongoServerBuildInfo">
      <summary>
            Represents build info about a server instance.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerBuildInfo.#ctor(System.String)">
      <summary>
            Creates a new instance of MongoServerBuildInfo.
            </summary>
      <param name="versionString">The version string.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoServerBuildInfo.FromCommandResult(MongoDB.Driver.CommandResult)">
      <summary>
            Creates a new instance of MongoServerBuildInfo initialized from the result of a buildinfo command.
            </summary>
      <param name="result">A CommandResult.</param>
      <returns>A MongoServerBuildInfo.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerBuildInfo.Version">
      <summary>
            Gets the version.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerBuildInfo.VersionString">
      <summary>
            Gets the version string.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoServerInstance">
      <summary>
            Represents an instance of a MongoDB server host.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.Address">
      <summary>
            Gets the address of this server instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.BuildInfo">
      <summary>
            Gets the build info of this server instance.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerInstance.GetIPEndPoint">
      <summary>
            Gets the IP end point of this server instance.
            </summary>
      <returns>The IP end point of this server instance.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerInstance.GetServerDescription">
      <summary>
            Gets the server description.
            </summary>
      <returns>The server description.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.InstanceType">
      <summary>
            Gets the instance type.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.IsArbiter">
      <summary>
            Gets a value indicating whether this server instance is an arbiter instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.IsPassive">
      <summary>
            Gets a value indicating whether this server instance is a passive instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.IsPrimary">
      <summary>
            Gets a value indicating whether this server instance is a primary.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.IsSecondary">
      <summary>
            Gets a value indicating whether this server instance is a secondary.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.MaxBatchCount">
      <summary>
            Gets the maximum batch count for write operations.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.MaxDocumentSize">
      <summary>
            Gets the max document size for this server instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.MaxMessageLength">
      <summary>
            Gets the max message length for this server instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.MaxWireDocumentSize">
      <summary>
            Gets the maximum size of a wire document. Normally slightly larger than MaxDocumentSize.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerInstance.Ping">
      <summary>
            Checks whether the server is alive (throws an exception if not).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.SequentialId">
      <summary>
            Gets the unique sequential Id for this server instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.Settings">
      <summary>
            Gets the server for this server instance.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerInstance.State">
      <summary>
            Gets the state of this server instance.
            </summary>
    </member>
    <member name="E:MongoDB.Driver.MongoServerInstance.StateChanged">
      <summary>
            Occurs when the value of the State property changes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerInstance.Supports(MongoDB.Driver.FeatureId)">
      <summary>
            Checks whether this server instance supports a feature.
            </summary>
      <param name="featureId">The id of the feature.</param>
      <returns>True if this server instance supports the feature; otherwise, false.</returns>
    </member>
    <member name="T:MongoDB.Driver.MongoServerInstanceType">
      <summary>
            Represents an instance of a MongoDB server host (in the case of a replica set a MongoServer uses multiple MongoServerInstances).
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerInstanceType.Unknown">
      <summary>
            The server instance type is unknown.  This is the default.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerInstanceType.StandAlone">
      <summary>
            The server is a standalone instance.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerInstanceType.ReplicaSetMember">
      <summary>
            The server is a replica set member.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerInstanceType.ShardRouter">
      <summary>
            The server is a shard router (mongos).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoServerSettings">
      <summary>
            The settings used to access a MongoDB server.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.#ctor">
      <summary>
            Creates a new instance of MongoServerSettings. Usually you would use a connection string instead.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.AddressFamily">
      <summary>
            Gets the AddressFamily for the IPEndPoint (derived from the IPv6 setting).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.Clone">
      <summary>
            Creates a clone of the settings.
            </summary>
      <returns>A clone of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ClusterConfigurator">
      <summary>
            Gets or sets the cluster configurator.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ConnectionMode">
      <summary>
            Gets or sets the connection mode.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ConnectTimeout">
      <summary>
            Gets or sets the connect timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.Credentials">
      <summary>
            Gets or sets the credentials.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.Equals(MongoDB.Driver.MongoServerSettings)">
      <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoServerSettings" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:MongoDB.Driver.MongoServerSettings" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoServerSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.FromClientSettings(MongoDB.Driver.MongoClientSettings)">
      <summary>
            Creates a new MongoServerSettings object from a MongoClientSettings object.
            </summary>
      <param name="clientSettings">The MongoClientSettings.</param>
      <returns>A MongoServerSettings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.FromUrl(MongoDB.Driver.MongoUrl)">
      <summary>
            Gets a MongoServerSettings object intialized with values from a MongoUrl.
            </summary>
      <param name="url">The MongoUrl.</param>
      <returns>A MongoServerSettings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.FrozenCopy">
      <summary>
            Returns a frozen copy of the settings.
            </summary>
      <returns>A frozen copy of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.GuidRepresentation">
      <summary>
            Gets or sets the representation to use for Guids.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.IPv6">
      <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.IsFrozen">
      <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.LocalThreshold">
      <summary>
            Gets or sets the local threshold.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionIdleTime">
      <summary>
            Gets or sets the max connection idle time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionLifeTime">
      <summary>
            Gets or sets the max connection life time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionPoolSize">
      <summary>
            Gets or sets the max connection pool size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.MinConnectionPoolSize">
      <summary>
            Gets or sets the min connection pool size.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.op_Equality(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoServerSettings" /> instances are equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.op_Inequality(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerSettings)">
      <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoServerSettings" /> instances are not equal.
            </summary>
      <param name="lhs">The LHS.</param>
      <param name="rhs">The RHS.</param>
      <returns>
        <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.OperationTimeout">
      <summary>
            Gets or sets the operation timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ReadConcern">
      <summary>
            Gets or sets the read concern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ReadEncoding">
      <summary>
            Gets or sets the Read Encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ReadPreference">
      <summary>
            Gets or sets the read preferences.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ReplicaSetName">
      <summary>
            Gets or sets the name of the replica set.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.Server">
      <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.Servers">
      <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.ServerSelectionTimeout">
      <summary>
            Gets or sets the server selection timeout.
            </summary>
      <exception cref="T:System.InvalidOperationException">MongoServerSettings is frozen.</exception>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.SocketTimeout">
      <summary>
            Gets or sets the socket timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.SslSettings">
      <summary>
            Gets or sets the SSL settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoServerSettings.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.UseSsl">
      <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.VerifySslCertificate">
      <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.WaitQueueSize">
      <summary>
            Gets or sets the wait queue size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.WaitQueueTimeout">
      <summary>
            Gets or sets the wait queue timeout.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoServerSettings.WriteEncoding">
      <summary>
            Gets or sets the Write Encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoServerState">
      <summary>
            The state of a MongoServer instance.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerState.Disconnected">
      <summary>
            Disconnected from the server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerState.Connecting">
      <summary>
            Connecting to the server (in progress).
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerState.Connected">
      <summary>
            Connected to the server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerState.ConnectedToSubset">
      <summary>
            Connected to a subset of the replica set members.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.MongoServerState.Disconnecting">
      <summary>
            Disconnecting from the server (in progress).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoUpdateOptions">
      <summary>
            Represents the options to use for an Update operation.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUpdateOptions.#ctor">
      <summary>
            Initializes a new instance of the MongoUpdateOptions class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUpdateOptions.#ctor(MongoDB.Driver.MongoCollection)">
      <summary>
            Initializes a new instance of the MongoUpdateOptions class.
            </summary>
      <param name="collection">The collection from which to get default settings for the options.</param>
    </member>
    <member name="P:MongoDB.Driver.MongoUpdateOptions.BypassDocumentValidation">
      <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUpdateOptions.Flags">
      <summary>
            Gets or sets the update flags.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.MongoUpdateOptions.WriteConcern">
      <summary>
            Gets or sets the WriteConcern to use for the Update.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.MongoUser">
      <summary>
            Represents a MongoDB user.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.#ctor(System.String,MongoDB.Driver.PasswordEvidence,System.Boolean)">
      <summary>
            Creates a new instance of MongoUser.
            </summary>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <param name="isReadOnly">Whether the user has read-only access.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.#ctor(System.String,System.String,System.Boolean)">
      <summary>
            Creates a new instance of MongoUser.
            </summary>
      <param name="username">The username.</param>
      <param name="passwordHash">The password hash.</param>
      <param name="isReadOnly">Whether the user has read-only access.</param>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.Equals(MongoDB.Driver.MongoUser)">
      <summary>
            Determines whether this instance and another specified MongoUser object have the same value.
            </summary>
      <param name="rhs">The MongoUser object to compare to this instance.</param>
      <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.Equals(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
      <summary>
            Determines whether two specified MongoUser objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.Equals(System.Object)">
      <summary>
            Determines whether this instance and a specified object, which must also be a MongoUser object, have the same value.
            </summary>
      <param name="obj">The MongoUser object to compare to this instance.</param>
      <returns>True if obj is a MongoUser object and its value is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.GetHashCode">
      <summary>
            Returns the hash code for this Class1 object.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.HashPassword(System.String,MongoDB.Driver.PasswordEvidence)">
      <summary>
            Calculates the password hash.
            </summary>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>The password hash.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.HashPassword(System.String,System.String)">
      <summary>
            Calculates the password hash.
            </summary>
      <param name="username">The username.</param>
      <param name="password">The password.</param>
      <returns>The password hash.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUser.IsReadOnly">
      <summary>
            Gets or sets a value indicating whether the user is a read-only user.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.op_Equality(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
      <summary>
            Determines whether two specified MongoUser objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.op_Inequality(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
      <summary>
            Determines whether two specified MongoUser objects have different values.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUser.PasswordHash">
      <summary>
            Gets or sets the password hash.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.MongoUser.ToString">
      <summary>
            Returns a string representation of the user.
            </summary>
      <returns>A string representation of the user.</returns>
    </member>
    <member name="P:MongoDB.Driver.MongoUser.Username">
      <summary>
            Gets or sets the username.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ParallelScanArgs">
      <summary>
            Represents arguments for the ParallelScan command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ParallelScanArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.ParallelScanArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.ParallelScanArgs.BatchSize">
      <summary>
            Gets or sets the size of the batch.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ParallelScanArgs.NumberOfCursors">
      <summary>
            Gets or sets the desired number of cursors.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ParallelScanArgs.ReadPreference">
      <summary>
            Gets or sets the read preference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ParallelScanArgs.Serializer">
      <summary>
            Gets or sets the serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ParallelScanArgs`1">
      <summary>
            Represents arguments for the ParallelScan command helper method.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.ParallelScanArgs`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.ParallelScanArgs`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.ParallelScanArgs`1.Serializer">
      <summary>
            Gets or sets the serializer.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ProfilingLevel">
      <summary>
            Represents what level of profile information to write.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ProfilingLevel.None">
      <summary>
            Don't write profile information for any queries.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ProfilingLevel.Slow">
      <summary>
            Write profile information for slow queries.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.ProfilingLevel.All">
      <summary>
            Write profile information for all queries.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.QueryDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoQuery is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor">
      <summary>
            Initializes a new instance of the QueryDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the QueryDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the QueryDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the QueryDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the QueryDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.QueryFlags">
      <summary>
            Flags used with queries (see the SetQueryFlags method of MongoCursor).
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.TailableCursor">
      <summary>
            This cursor should be tailable.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.SlaveOk">
      <summary>
            It's OK for the query to be handled by a secondary server.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.NoCursorTimeout">
      <summary>
            Tell the server not to let the cursor timeout.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.AwaitData">
      <summary>
            Tell the server to wait for data to become available before returning (only used with TailableCursor).
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.Exhaust">
      <summary>
            Tell the server to send all the data at once (in multiple messages if necessary) without waiting for GetMore messages.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.QueryFlags.Partial">
      <summary>
            Allow partial results in a sharded system if some of the shards are down.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.RemoveFlags">
      <summary>
            Flags used with the Remove method of MongoCollection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.RemoveFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.RemoveFlags.Single">
      <summary>
            Remove only a single document.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ScopeDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoScope is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor">
      <summary>
            Initializes a new instance of the ScopeDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the ScopeDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the ScopeDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.SortByDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoSortBy is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor">
      <summary>
            Initializes a new instance of the SortByDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the SortByDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the SortByDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the SortByDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the SortByDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileInfo">
      <summary>
            Represents a document from the system.profile collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileInfo.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileInfo" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Abbreviated">
      <summary>
            Gets or sets the abbreviated profile info (only used when the profile info would have exceeded 100KB).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Client">
      <summary>
            Gets or sets the client.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Command">
      <summary>
            Gets or sets the command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.CursorId">
      <summary>
            Gets or sets the cursor Id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Duration">
      <summary>
            Gets or sets the duration.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Error">
      <summary>
            Gets or sets the error message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Exception">
      <summary>
            Gets or sets the exception message.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.ExceptionCode">
      <summary>
            Gets or sets the exception code.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Exhaust">
      <summary>
            Gets or sets a value indicating whether exhaust was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.FastMod">
      <summary>
            Gets or sets a value indicating whether fastMod was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.FastModInsert">
      <summary>
            Gets or sets a value indicating whether fastModInsert was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.IdHack">
      <summary>
            Gets or sets a value indicating whether idHack was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Info">
      <summary>
            Gets or sets the info string (only present with pre 2.0 servers).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.KeyUpdates">
      <summary>
            Gets or sets the number of key updates.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.LockStatistics">
      <summary>
            Gets or sets the lock statistics.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Moved">
      <summary>
            Gets or sets a value indicating whether moved was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Namespace">
      <summary>
            Gets or sets the namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberMoved">
      <summary>
            Gets or sets the number of documents moved.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberOfYields">
      <summary>
            Gets or sets the number of yields.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberReturned">
      <summary>
            Gets or sets the number of documents returned.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberScanned">
      <summary>
            Gets or sets the number of documents scanned.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberToReturn">
      <summary>
            Gets or sets the number of documents to return.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberToSkip">
      <summary>
            Gets or sets the number of documents to skip.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.NumberUpdated">
      <summary>
            Gets or sets the number of documents update by an update operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Op">
      <summary>
            Gets or sets the operation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Query">
      <summary>
            Gets or sets the query.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.RawDocument">
      <summary>
            Gets the raw document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.ResponseLength">
      <summary>
            Gets or sets the response length.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.ScanAndOrder">
      <summary>
            Gets or sets a value indicating whether scanAndOrder was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Timestamp">
      <summary>
            Gets or sets the timestamp.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.UpdateObject">
      <summary>
            Gets or sets the update object.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.Upsert">
      <summary>
            Gets or sets a value indicating whether upsert was true.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfo.User">
      <summary>
            Gets or sets the user.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileInfoSerializer">
      <summary>
            Represents a serializer for SystemProfileInfo.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileInfoSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileInfoSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileInfoSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates the instance.
            </summary>
      <param name="backingDocument">The backing document.</param>
      <returns>A SystemProfileInfo instance.</returns>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileInfoSerializer.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileLockStatistics">
      <summary>
            Statistics about locks for a system.profile document.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileLockStatistics.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileLockStatistics" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileLockStatistics.RawDocument">
      <summary>
            Gets the raw document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileLockStatistics.TimeAcquiring">
      <summary>
            Gets or sets the time acquiring.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileLockStatistics.TimeLocked">
      <summary>
            Gets or sets the time locked.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileLockStatisticsSerializer">
      <summary>
            Serializer for SystemProfileLockStatistics
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileLockStatisticsSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileLockStatisticsSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileLockStatisticsSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates the instance.
            </summary>
      <param name="backingDocument">The backing document.</param>
      <returns>A SystemProfileLockStatistics instance.</returns>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileLockStatisticsSerializer.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileReadWriteLockStatistics">
      <summary>
            Statistics about system.profile read and write time spent in locks.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatistics.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileReadWriteLockStatistics" /> class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.DatabaseReadLock">
      <summary>
            Gets or sets the time spent acquiring or holding the database read lock.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.DatabaseWriteLock">
      <summary>
            Gets or sets the time spent acquiring or holding the database write lock.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.GlobalReadLock">
      <summary>
            Gets or sets the time spent acquiring or holding the gobal read lock.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.GlobalWriteLock">
      <summary>
            Gets or sets the time spent acquiring or holding the global write lock.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.RawDocument">
      <summary>
            Gets the raw document.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.Read">
      <summary>
            Gets or sets the time spent acquiring or holding the read lock.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.Write">
      <summary>
            Gets or sets the time spent acquiring or holding the write lock.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer">
      <summary>
            Serializer for SystemProfileReadWriteLockStatistics
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates the instance.
            </summary>
      <param name="backingDocument">The backing document.</param>
      <returns>A SystemProfileReadWriteLockStatistics instance.</returns>
    </member>
    <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.Instance">
      <summary>
            Gets the instance.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.UpdateDocument">
      <summary>
            Represents a BSON document that can be used where an IMongoUpdate is expected.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor">
      <summary>
            Initializes a new instance of the UpdateDocument class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(MongoDB.Bson.BsonElement)">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds one element.
            </summary>
      <param name="element">An element to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(MongoDB.Bson.BsonElement[])">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds one or more elements.
            </summary>
      <param name="elements">One or more elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the UpdateDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
      <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a list of elements.
            </summary>
      <param name="elements">A list of elements to add to the document.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.IDictionary)">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
      <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
      <param name="dictionary">A dictionary to initialize the document from.</param>
      <param name="keys">A list of keys to select values from the dictionary.</param>
    </member>
    <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Initializes a new instance of the UpdateDocument class and creates and adds a new element.
            </summary>
      <param name="name">The name of the element to add to the document.</param>
      <param name="value">The value of the element to add to the document.</param>
    </member>
    <member name="T:MongoDB.Driver.UpdateFlags">
      <summary>
            Flags used with the Update method in MongoCollection.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.UpdateFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.UpdateFlags.Upsert">
      <summary>
            If document doesn't exist then do an Insert.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.UpdateFlags.Multi">
      <summary>
            Update all matching documents (instead of just one).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ValidateCollectionArgs">
      <summary>
            Represents arguments for the Validate collection command helper method.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ValidateCollectionArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.ValidateCollectionArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionArgs.Full">
      <summary>
            Gets or sets a value indicating whether to do a more thorough scan of the data.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionArgs.MaxTime">
      <summary>
            Gets or sets the max time.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionArgs.ScanData">
      <summary>
            Gets or sets a value indicating whether to scan the data.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ValidateCollectionResult">
      <summary>
            Represents the results of a validate collection command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.ValidateCollectionResult.#ctor(MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ValidateCollectionResult" /> class.
            </summary>
      <param name="response">The response.</param>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.DataSize">
      <summary>
            Gets the data size of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.DeletedCount">
      <summary>
            Gets the number of documents that have been deleted from the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.DeletedSize">
      <summary>
            Gets the number of documents that have been deleted from the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.Errors">
      <summary>
            Gets the errors returned by validate (or an empty array if there were no errors).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentCount">
      <summary>
            Gets the number of extents in the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.FirstExtent">
      <summary>
            Gets the first extent of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.FirstExtentDetails">
      <summary>
            Gets details of the first extent of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.IndexCount">
      <summary>
            Gets the number of indexes in the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.IsValid">
      <summary>
            Gets a value indicating whether the collection is valid.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.KeysPerIndex">
      <summary>
            Gets a dictionary containing the number of keys per index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.LastExtent">
      <summary>
            Gets the last extent of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.LastExtentSize">
      <summary>
            Gets the size of the last extent of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.Namespace">
      <summary>
            Gets the namespace.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.Padding">
      <summary>
            Gets the padding factor of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.RecordCount">
      <summary>
            Gets the number of records in the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ResultString">
      <summary>
            Gets the result string.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.Warning">
      <summary>
            Gets any warning returned by the validate command (or null if there is no warning).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.ValidateCollectionResult.ExtentDetails">
      <summary>
            Represents the details of the first extent of the collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.FirstRecord">
      <summary>
            Gets the location of the first record of the extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.LastRecord">
      <summary>
            Gets the location of the last record of the extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.Loc">
      <summary>
            Gets the location of the extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.NSDiag">
      <summary>
            Gets the nsdiag value of the extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.Size">
      <summary>
            Gets the size of the extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.XNext">
      <summary>
            Gets the next extent.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.XPrev">
      <summary>
            Gets the prev extent.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.XYPoint">
      <summary>
            Represents a 2D point represented using x, y coordinates.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.XYPoint.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.XYPoint" /> class.
            </summary>
      <param name="x">The x value.</param>
      <param name="y">The y value.</param>
    </member>
    <member name="P:MongoDB.Driver.XYPoint.X">
      <summary>
            Gets the X value.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.XYPoint.Y">
      <summary>
            Gets the Y value.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.BuilderBase">
      <summary>
            Abstract base class for the builders.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.#ctor">
      <summary>
            Initializes a new instance of the BuilderBase class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.BuilderBase.ToString">
      <summary>
            Returns a string representation of the settings.
            </summary>
      <returns>A string representation of the settings.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.CollectionOptions">
      <summary>
            A builder for the options used when creating a collection.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.CollectionOptions.Null">
      <summary>
            Gets a null value with a type of IMongoCollectionOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetAutoIndexId(System.Boolean)">
      <summary>
            Sets whether to automatically create an index on the _id element.
            </summary>
      <param name="value">Whether to automatically create an index on the _id element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetCapped(System.Boolean)">
      <summary>
            Sets whether the collection is capped.
            </summary>
      <param name="value">Whether the collection is capped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetIndexOptionDefaults(MongoDB.Driver.IndexOptionDefaults)">
      <summary>
            Sets the index options defaults.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetMaxDocuments(System.Int64)">
      <summary>
            Sets the max number of documents in a capped collection.
            </summary>
      <param name="value">The max number of documents.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetMaxSize(System.Int64)">
      <summary>
            Sets the max size of a capped collection.
            </summary>
      <param name="value">The max size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetValidationAction(MongoDB.Driver.DocumentValidationAction)">
      <summary>
            Sets the validation action.
            </summary>
      <param name="validationAction">The validation action.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetValidationLevel(MongoDB.Driver.DocumentValidationLevel)">
      <summary>
            Sets the validation level.
            </summary>
      <param name="validationLevel">The validation level.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetValidator(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the validator.
            </summary>
      <param name="validator">The validator.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.CollectionOptionsBuilder">
      <summary>
            A builder for the options used when creating a collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.#ctor">
      <summary>
            Initializes a new instance of the CollectionOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetAutoIndexId(System.Boolean)">
      <summary>
            Sets whether to automatically create an index on the _id element.
            </summary>
      <param name="value">Whether to automatically create an index on the _id element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetCapped(System.Boolean)">
      <summary>
            Sets whether the collection is capped.
            </summary>
      <param name="value">Whether the collection is capped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetIndexOptionDefaults(MongoDB.Driver.IndexOptionDefaults)">
      <summary>
            Sets the index options defaults.
            </summary>
      <param name="value">The index options defaults.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetMaxDocuments(System.Int64)">
      <summary>
            Sets the max number of documents in a capped collection.
            </summary>
      <param name="value">The max number of documents.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetMaxSize(System.Int64)">
      <summary>
            Sets the max size of a capped collection.
            </summary>
      <param name="value">The max size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetValidationAction(MongoDB.Driver.DocumentValidationAction)">
      <summary>
            Sets the validation action.
            </summary>
      <param name="validationAction">The validation action.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetValidationLevel(MongoDB.Driver.DocumentValidationLevel)">
      <summary>
            Sets the validation level.
            </summary>
      <param name="validationLevel">The validation level.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetValidator(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the validator.
            </summary>
      <param name="validator">The validator.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Fields">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="name">The name.</param>
      <param name="query">The query.</param>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Exclude(System.String[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Include(System.String[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.MetaTextScore(System.String)">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="name">The name of the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Fields.Null">
      <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Fields`1">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">The element query builder function.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Fields`1.Null">
      <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.FieldsBuilder">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.#ctor">
      <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="name">The name.</param>
      <param name="query">The query.</param>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Exclude(System.String[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Include(System.String[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="names">One or more field names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.MetaTextScore(System.String)">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="name">The name of the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="name">The name of the field to slice.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.FieldsBuilder`1">
      <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Returns the first matching element in the array specified by name.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">The element query builder function.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The build (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds one or more field names to be included in the results.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
      <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="size">The size of the slice (negative sizes are taken from the end).</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
      <summary>
            Adds a slice to be included in the results.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="skip">The number of values to skip.</param>
      <param name="limit">The number of values to extract.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptions">
      <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.GeoHaystackSearchOptions.Null">
      <summary>
            Gets a null value with a type of IMongoGeoHaystackSearchOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetLimit(System.Int32)">
      <summary>
            Sets the maximum number of results to return.
            </summary>
      <param name="value">The maximum number of results to return.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetQuery(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the query on the optional additional field.
            </summary>
      <param name="additionalFieldName">The name of the additional field.</param>
      <param name="value">The value fo the additional field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1">
      <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.Null">
      <summary>
            Gets a null value with a type of IMongoGeoHaystackSearchOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetLimit(System.Int32)">
      <summary>
            Sets the maximum number of results to return.
            </summary>
      <param name="value">The maximum number of results to return.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetQuery``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the query on the optional additional field.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value fo the additional field.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder">
      <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.#ctor">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetLimit(System.Int32)">
      <summary>
            Sets the maximum number of results to return.
            </summary>
      <param name="value">The maximum number of results to return.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetQuery(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the query on the optional additional field.
            </summary>
      <param name="additionalFieldName">The name of the additional field.</param>
      <param name="value">The value fo the additional field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1">
      <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetLimit(System.Int32)">
      <summary>
            Sets the maximum number of results to return.
            </summary>
      <param name="value">The maximum number of results to return.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetQuery``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the query on the optional additional field.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value fo the additional field.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoNearOptions">
      <summary>
            A builder for the options of the GeoNear command.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.GeoNearOptions.Null">
      <summary>
            Gets a null value with a type of IMongoGeoNearOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetDistanceMultiplier(System.Double)">
      <summary>
            Sets the distance multiplier.
            </summary>
      <param name="value">The distance multiplier.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetSpherical(System.Boolean)">
      <summary>
            Sets whether to use a spherical search.
            </summary>
      <param name="value">Whether to use a spherical search.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GeoNearOptionsBuilder">
      <summary>
            A builder for the options of the GeoNear command.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.#ctor">
      <summary>
            Initializes a new instance of the GeoNearOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetDistanceMultiplier(System.Double)">
      <summary>
            Sets the distance multiplier.
            </summary>
      <param name="value">The distance multiplier.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetMaxDistance(System.Double)">
      <summary>
            Sets the max distance.
            </summary>
      <param name="value">The max distance.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetSpherical(System.Boolean)">
      <summary>
            Sets whether to use a spherical search.
            </summary>
      <param name="value">Whether to use a spherical search.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GroupBy">
      <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupBy.Function(MongoDB.Bson.BsonJavaScript)">
      <summary>
            Sets a key function.
            </summary>
      <param name="keyFunction">The key function.</param>
      <returns>A BsonJavaScript.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupBy.Keys(System.String[])">
      <summary>
            Sets one or more key names.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GroupBy`1">
      <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupBy`1.Keys(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names.
            </summary>
      <param name="memberExpressions">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GroupByBuilder">
      <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.GroupByBuilder" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder.#ctor(System.String[])">
      <summary>
            Initializes a new instance of the GroupByBuilder class.
            </summary>
      <param name="names">One or more key names.</param>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder.Keys(System.String[])">
      <summary>
            Sets one or more key names.
            </summary>
      <param name="names">The names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.GroupByBuilder`1">
      <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.GroupByBuilder`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.Keys(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names.
            </summary>
      <param name="memberExpressions">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeys">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Ascending(System.String[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Descending(System.String[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatial(System.String)">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String)">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String,System.String)">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <param name="additionalName">The name of an additional field to index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialSpherical(System.String)">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Hashed(System.String)">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.Text(System.String[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="names">List of key names to include in the text index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeys`1">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="additionalMemberExpression">The additional member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeys`1.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.#ctor">
      <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Ascending(System.String[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Descending(System.String[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="names">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatial(System.String)">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String)">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String,System.String)">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="name">The key name.</param>
      <param name="additionalName">The name of an additional field to index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialSpherical(System.String)">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Hashed(System.String)">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="name">The key name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Text(System.String[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="names">List of key names to include in the text index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder`1">
      <summary>
            A builder for specifying the keys for an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in ascending order.
            </summary>
      <param name="memberExpressions">One or more key names.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sets one or more key names to index in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
      <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="additionalMemberExpression">The additional member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Sets the key name to create a hashed index on.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
      <summary>
            Sets one or more key names to include in the text index.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.TextAll">
      <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexOptions">
      <summary>
            A builder for the options used when creating an index.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.IndexOptions.Null">
      <summary>
            Gets a null value with a type of IMongoIndexOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBackground(System.Boolean)">
      <summary>
            Sets whether to build the index in the background.
            </summary>
      <param name="value">Whether to build the index in the background.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBits(System.Int32)">
      <summary>
            Sets the location precision bits.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBucketSize(System.Double)">
      <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
      <param name="value">The bucket size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetDropDups(System.Boolean)">
      <summary>
            Sets whether duplicates should be dropped.
            </summary>
      <param name="value">Whether duplicates should be dropped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetGeoSpatialRange(System.Double,System.Double)">
      <summary>
            Sets the geospatial range.
            </summary>
      <param name="min">The min value of the range.</param>
      <param name="max">The max value of the range.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetName(System.String)">
      <summary>
            Sets the name of the index.
            </summary>
      <param name="value">The name of the index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetPartialFilterExpression(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the partial filter expression.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetSparse(System.Boolean)">
      <summary>
            Sets whether the index is a sparse index.
            </summary>
      <param name="value">Whether the index is a sparse index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTextDefaultLanguage(System.String)">
      <summary>
            Sets the default language for the text index.
            </summary>
      <param name="language">The default language.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTextLanguageOverride(System.String)">
      <summary>
            Specifies the field name containing the language for the text index.
            </summary>
      <param name="fieldName">The field name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTimeToLive(System.TimeSpan)">
      <summary>
            Sets the time to live value.
            </summary>
      <param name="timeToLive">The time to live.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetUnique(System.Boolean)">
      <summary>
            Sets whether the index enforces unique values.
            </summary>
      <param name="value">Whether the index enforces unique values.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions.SetWeight(System.String,System.Int32)">
      <summary>
            Sets the weight of a field for the text index.
            </summary>
      <param name="name">The name of the field.</param>
      <param name="value">The weight.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexOptions`1">
      <summary>
            A builder for the options used when creating an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="P:MongoDB.Driver.Builders.IndexOptions`1.Null">
      <summary>
            Gets a null value with a type of IMongoIndexOptions.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBackground(System.Boolean)">
      <summary>
            Sets whether to build the index in the background.
            </summary>
      <param name="value">Whether to build the index in the background.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBits(System.Int32)">
      <summary>
            Sets the location precision bits.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBucketSize(System.Double)">
      <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
      <param name="value">The bucket size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetDropDups(System.Boolean)">
      <summary>
            Sets whether duplicates should be dropped.
            </summary>
      <param name="value">Whether duplicates should be dropped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetGeoSpatialRange(System.Double,System.Double)">
      <summary>
            Sets the geospatial range.
            </summary>
      <param name="min">The min value of the range.</param>
      <param name="max">The max value of the range.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetName(System.String)">
      <summary>
            Sets the name of the index.
            </summary>
      <param name="value">The name of the index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetPartialFilterExpression(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the partial filter expression.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetSparse(System.Boolean)">
      <summary>
            Sets whether the index is a sparse index.
            </summary>
      <param name="value">Whether the index is a sparse index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTextDefaultLanguage(System.String)">
      <summary>
            Sets the default language for the text index.
            </summary>
      <param name="language">The default language.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTextLanguageOverride(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>
            Specifies a member expression for the field name containing the language for the text index.
            </summary>
      <param name="memberExpression">The member expression indicating the language field name.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTimeToLive(System.TimeSpan)">
      <summary>
            Sets the time to live value.
            </summary>
      <param name="timeToLive">The time to live.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetUnique(System.Boolean)">
      <summary>
            Sets whether the index enforces unique values.
            </summary>
      <param name="value">Whether the index enforces unique values.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetWeight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32)">
      <summary>
            Sets the weight of a field for the text index.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexOptionsBuilder">
      <summary>
            A builder for the options used when creating an index.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.#ctor">
      <summary>
            Initializes a new instance of the IndexOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBackground(System.Boolean)">
      <summary>
            Sets whether to build the index in the background.
            </summary>
      <param name="value">Whether to build the index in the background.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBits(System.Int32)">
      <summary>
            Sets the location precision bits.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBucketSize(System.Double)">
      <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
      <param name="value">The bucket size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetDropDups(System.Boolean)">
      <summary>
            Sets whether duplicates should be dropped.
            </summary>
      <param name="value">Whether duplicates should be dropped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetGeoSpatialRange(System.Double,System.Double)">
      <summary>
            Sets the geospatial range.
            </summary>
      <param name="min">The min value of the range.</param>
      <param name="max">The max value of the range.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetName(System.String)">
      <summary>
            Sets the name of the index.
            </summary>
      <param name="value">The name of the index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetPartialFilterExpression(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the partial filter expression.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetSparse(System.Boolean)">
      <summary>
            Sets whether the index is a sparse index.
            </summary>
      <param name="value">Whether the index is a sparse index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTextDefaultLanguage(System.String)">
      <summary>
            Sets the default language for the text index.
            </summary>
      <param name="language">The default language.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTextLanguageOverride(System.String)">
      <summary>
            Specifies the field name containing the language for the text index.
            </summary>
      <param name="fieldName">The field name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTimeToLive(System.TimeSpan)">
      <summary>
            Sets the time to live value.
            </summary>
      <param name="timeToLive">The time to live.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetUnique(System.Boolean)">
      <summary>
            Sets whether the index enforces unique values.
            </summary>
      <param name="value">Whether the index enforces unique values.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetWeight(System.String,System.Int32)">
      <summary>
            Sets the weight of a field for the text index.
            </summary>
      <param name="name">The field name.</param>
      <param name="value">The weight.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.IndexOptionsBuilder`1">
      <summary>
            A builder for the options used when creating an index.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the IndexOptionsBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBackground(System.Boolean)">
      <summary>
            Sets whether to build the index in the background.
            </summary>
      <param name="value">Whether to build the index in the background.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBits(System.Int32)">
      <summary>
            Sets the location precision bits.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBucketSize(System.Double)">
      <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
      <param name="value">The bucket size.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetDropDups(System.Boolean)">
      <summary>
            Sets whether duplicates should be dropped.
            </summary>
      <param name="value">Whether duplicates should be dropped.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetGeoSpatialRange(System.Double,System.Double)">
      <summary>
            Sets the geospatial range.
            </summary>
      <param name="min">The min value of the range.</param>
      <param name="max">The max value of the range.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetName(System.String)">
      <summary>
            Sets the name of the index.
            </summary>
      <param name="value">The name of the index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetPartialFilterExpression(MongoDB.Driver.IMongoQuery)">
      <summary>
            Sets the partial filter expression.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetSparse(System.Boolean)">
      <summary>
            Sets whether the index is a sparse index.
            </summary>
      <param name="value">Whether the index is a sparse index.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetStorageEngineOptions(MongoDB.Bson.BsonDocument)">
      <summary>
            Sets the storage engine options.
            </summary>
      <param name="value">The value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTextDefaultLanguage(System.String)">
      <summary>
            Sets the default language for the text index.
            </summary>
      <param name="language">The default language.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTextLanguageOverride(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>
            Specifies a member expression for the field name containing the language for the text index.
            </summary>
      <param name="memberExpression">The member expression indicating the language field name.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTimeToLive(System.TimeSpan)">
      <summary>
            Sets the time to live value.
            </summary>
      <param name="timeToLive">The time to live.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetUnique(System.Boolean)">
      <summary>
            Sets whether the index enforces unique values.
            </summary>
      <param name="value">Whether the index enforces unique values.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetWeight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32)">
      <summary>
            Sets the weight of a field for the text index.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.PushEachOptions">
      <summary>
            Arguments for $push with an $each clause.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>MongoDB.Driver.Builders.PushEachOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Position">
      <summary>
            Gets or sets the position (see $position).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Slice">
      <summary>
            Gets or sets the slice (see $slice).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Builders.PushEachOptions.Sort">
      <summary>
            Gets or sets the sort (see $sort).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.PushEachOptionsBuilder`1">
      <summary>
            A fluent builder for PushEachOptions.
            </summary>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Build">
      <summary>
            Builds the PushEachArgs.
            </summary>
      <returns>A built PushEachOptions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Position(System.Int32)">
      <summary>
            Specifies the position for the array.
            </summary>
      <param name="position">The position.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Slice(System.Int32)">
      <summary>
            Specifies a slice for the array.
            </summary>
      <param name="slice">The slice.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortAscending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sorts the array in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Sorts the array in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>The builder.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Query">
      <summary>
            A builder for creating queries.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.All(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.And(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.BitsAllClear(System.String,System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits clear.
            </summary>
      <param name="name">The name.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.BitsAllSet(System.String,System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits set.
            </summary>
      <param name="name">The name.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.BitsAnyClear(System.String,System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits clear.
            </summary>
      <param name="name">The name.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.BitsAnySet(System.String,System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits set.
            </summary>
      <param name="name">The name.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Create(MongoDB.Bson.BsonDocument)">
      <summary>
            Creates a query manually.
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Create(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Creates a query manually.
            </summary>
      <param name="name">The element name.</param>
      <param name="condition">The condition.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="query">The query to match elements with.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Query.Empty">
      <summary>
            Gets an empty query.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.EQ(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Exists(System.String)">
      <summary>
            Tests that an element of that name exists (see $exists).
            </summary>
      <param name="name">The name of the element to test.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GeoIntersects``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="name">The name.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GT(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.GTE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.In(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.LT(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.LTE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Matches(System.String,MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Mod(System.String,System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NE(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Not(MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NotExists(System.String)">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="name">The name of the element to test.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.NotIn(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="values">The values to compare.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.Query.Null">
      <summary>
            Gets a null value with a type of IMongoQuery.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Or(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Size(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThan(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is greater than some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThanOrEqual(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is greater than or equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeLessThan(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is less than some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.SizeLessThanOrEqual(System.String,System.Int32)">
      <summary>
            Tests that the size of the named array is less than or equal to some value.
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="size">The size to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Text(System.String)">
      <summary>
            Generate a text search query that tests whether the given search string is present.
            </summary>
      <param name="searchString">The search string.</param>
      <returns>An IMongoQuery that represents the text search.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Text(System.String,MongoDB.Driver.TextSearchOptions)">
      <summary>
            Generate a text search query that tests whether the given search string is present using the specified language's rules. 
            Specifies use of language appropriate stop words, stemming rules etc.
            </summary>
      <param name="searchString">The search string.</param>
      <param name="options">The text search options.</param>
      <returns>An IMongoQuery that represents the text search for the particular language.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Text(System.String,System.String)">
      <summary>
            Generate a text search query that tests whether the given search string is present using the specified language's rules. 
            Specifies use of language appropriate stop words, stemming rules etc.
            </summary>
      <param name="searchString">The search string.</param>
      <param name="language">The language to restrict the search by.</param>
      <returns>An IMongoQuery that represents the text search for the particular language.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Type(System.String,MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="type">The type to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Type(System.String,System.String)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="type">The type to compare to.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Where(MongoDB.Bson.BsonJavaScript)">
      <summary>
            Tests that a JavaScript expression is true (see $where).
            </summary>
      <param name="javascript">The javascript.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.Within``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``0})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinPolygon(System.String,System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query.WithinRectangle(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="name">The name of the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Query`1">
      <summary>
            Aids in building mongo queries based on type information.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.BitsAllClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits clear.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.BitsAllSet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits set.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.BitsAnyClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits clear.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.BitsAnySet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits set.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
      <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to compare.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="size">The size to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            Builds a query from an expression.
            </summary>
      <param name="expression">The expression.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Query`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.QueryBuilder`1">
      <summary>
            Aids in building mongo queries based on type information.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.QueryBuilder`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
      <param name="queries">A list of subqueries.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.BitsAllClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits clear.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.BitsAllSet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has all of the specified bits set.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.BitsAnyClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits clear.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.BitsAnySet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
      <summary>
            Tests that the value of the named element has any of the specified bits set.
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="bitmask">The bitmask.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
      <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="geometry">The geometry.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
      <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="regex">The regex.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
      <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
      <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="modulus">The modulus.</param>
      <param name="value">The value.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="value">The value to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
      <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="point">The point.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="x">The x value of the origin.</param>
      <param name="y">The y value of the origin.</param>
      <param name="maxDistance">The max distance.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Not(MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
      <param name="query">The query.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to compare.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="values">The values to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(MongoDB.Driver.IMongoQuery[])">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
      <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
      <param name="queries">The subqueries.</param>
      <returns>
            A query.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
      <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="size">The size to compare to.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="type">The type to compare to.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            Builds a query from an expression.
            </summary>
      <param name="expression">The expression.</param>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
      <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="polygon">The polygon.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="centerX">The x coordinate of the origin.</param>
      <param name="centerY">The y coordinate of the origin.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="spherical">if set to <c>true</c> [spherical].</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
      <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
      <param name="memberExpression">The member expression representing the element to test.</param>
      <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
      <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
      <param name="upperRightX">The x coordinate of the upper right corner.</param>
      <param name="upperRightY">The y coordinate of the upper right corner.</param>
      <typeparam name="TMember">The member type.</typeparam>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortBy">
      <summary>
            A builder for specifying a sort order.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.Ascending(System.String[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.Descending(System.String[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy.MetaTextScore(System.String)">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="key">The name of the computed relevance score field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="P:MongoDB.Driver.Builders.SortBy.Null">
      <summary>
            Gets a null value with a type of IMongoSortBy.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortBy`1">
      <summary>
            A builder for specifying a sort order.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="memberExpressions">The member expressions.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortBy`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="memberExpression">The member expression specifying the projected field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortByBuilder">
      <summary>
            A builder for specifying a sort order.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.#ctor">
      <summary>
            Initializes a new instance of the SortByBuider class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.Ascending(System.String[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.Descending(System.String[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="keys">One or more key names.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.MetaTextScore(System.String)">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="key">The name of the computed relevance score field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.SortByBuilder`1">
      <summary>
            A builder for specifying a sort order.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.SortByBuilder`1" /> class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
      <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
      <summary>
            Adds keys to be sorted by in descending order.
            </summary>
      <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
      <param name="memberExpression">The member expression specifying the projected field.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Update">
      <summary>
            A builder for creating update modifiers.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSet(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.AddToSetWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the set.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Combine(MongoDB.Driver.IMongoUpdate[])">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <param name="type">The type to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Max(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Min(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PopFirst(System.String)">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PopLast(System.String)">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="query">A query that specifies which elements to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,``0[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PullWrapped``1(System.String,``0)">
      <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to remove.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Push(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.PushWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Rename(System.String,System.String)">
      <summary>
            Renames an element (see $rename).
            </summary>
      <param name="oldElementName">The name of the element to be renamed.</param>
      <param name="newElementName">The new name of the element.</param>
      <returns>An UpdateDocuemnt.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Replace(System.Type,System.Object)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="nominalType">The nominal type of the replacement document</param>
      <param name="document">The replacement document.</param>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Replace``1(``0)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="document">The replacement document.</param>
      <typeparam name="TNominalType">The nominal type of the replacement document</typeparam>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Set(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.SetWrapped``1(System.String,``0)">
      <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new wrapped value.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update.Unset(System.String)">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="name">The name of the element to be removed.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.Update`1">
      <summary>
            A builder for creating update modifiers.
            </summary>
      <typeparam name="TDocument">The document type.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Combine(MongoDB.Driver.IMongoUpdate[])">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The updates to combine.</param>
      <returns>
            A combined UpdateBuilder.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
      <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
      <param name="updates">The UpdateBuilders to combine.</param>
      <returns>
            A combined UpdateBuilder.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Replace(`0)">
      <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
      <param name="document">The replacement document.</param>
      <returns>An UpdateWrapper.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.Update`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateBuilder">
      <summary>
            A builder for creating update modifiers.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.#ctor">
      <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSet(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the set.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the set.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the set.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="name">The name of the element to be modified.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Combine(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Combines another UpdateBuilder into this one.
            </summary>
      <param name="other">The IMongoUpdate to combine into this one.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="name">The name of the element.</param>
      <param name="type">The type to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="name">The name of the element to be incremented.</param>
      <param name="value">The value to increment by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Max(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Min(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="name">The name of the element to be updated.</param>
      <param name="value">The value to use.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="name">The name of the element to be multiplied.</param>
      <param name="value">The value to multiply by.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopFirst(System.String)">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopLast(System.String)">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="name">The name of the array element.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="query">A query that specifies which elements to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to remove.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,``0[])">
      <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to remove.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullWrapped``1(System.String,``0)">
      <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to remove.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Push(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The value to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The wrapped values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped values.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="args">The args.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="args">The args.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,``0[])">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushWrapped``1(System.String,``0)">
      <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
      <param name="name">The name of the array element.</param>
      <param name="value">The wrapped value to add to the end of the array.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Rename(System.String,System.String)">
      <summary>
            Renames an element (see $rename).
            </summary>
      <param name="oldElementName">The old element name.</param>
      <param name="newElementName">The new element name.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Set(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new value.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetWrapped``1(System.String,``0)">
      <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
      <param name="name">The name of the element to be set.</param>
      <param name="value">The new wrapped value.</param>
      <typeparam name="T">The type of wrapped value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.ToBsonDocument">
      <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
      <returns>A BsonDocument.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Unset(System.String)">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="name">The name of the element to be removed.</param>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateBuilder`1">
      <summary>
            A builder for creating update modifiers.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.#ctor">
      <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the set.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be and-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be or-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to be xor-ed with the current value.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Combine(MongoDB.Driver.IMongoUpdate)">
      <summary>
            Combines another UpdateBuilder into this one.
            </summary>
      <param name="other">The UpdateBuilder to combine into this one.</param>
      <returns>A combined UpdateBuilder.</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Increments the named element by a value (see $inc).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to increment by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to use.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
      <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to multiply by.</param>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
      <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to remove.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
      <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The value to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the enumerable member values.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="options">The options.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
      <param name="memberExpression">The name of the array element.</param>
      <param name="values">The values to add to the end of the array.</param>
      <typeparam name="TValue">The type of the value.</typeparam>
      <returns>The builder (so method calls can be chained).</returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
      <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <param name="value">The new value.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.ToBsonDocument">
      <summary>
            Converts this object to a BsonDocument.
            </summary>
      <returns>
            A BsonDocument.
            </returns>
    </member>
    <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>
            Removes the named element from the document (see $unset).
            </summary>
      <param name="memberExpression">The member expression.</param>
      <typeparam name="TMember">The type of the member.</typeparam>
      <returns>
            The builder (so method calls can be chained).
            </returns>
    </member>
    <member name="T:MongoDB.Driver.Builders.UpdateCurrentDateType">
      <summary>
            The type to use for the $currentDate type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Date">
      <summary>
            The date type.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Timestamp">
      <summary>
            The timestamp type.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFS">
      <summary>
            Represents a GridFS file system.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoDatabase)">
      <summary>
            Initializes a new instance of the MongoGridFS class.
            </summary>
      <param name="database">The database containing the GridFS collections.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoDatabase,MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Initializes a new instance of the MongoGridFS class.
            </summary>
      <param name="database">The database containing the GridFS collections.</param>
      <param name="settings">The GridFS settings.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoServer,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFS" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="databaseName">The name of the database.</param>
      <param name="settings">The settings.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.AppendText(System.String)">
      <summary>
            Appends UTF-8 encoded text to an existing GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A StreamWriter.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Chunks">
      <summary>
            Gets the chunks collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CopyTo(System.String,System.String)">
      <summary>
            Copies a GridFS file.
            </summary>
      <param name="sourceFileName">The source file name.</param>
      <param name="destFileName">The destination file name.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CopyTo(System.String,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Copies a GridFS file.
            </summary>
      <param name="sourceFileName">The source file name.</param>
      <param name="destFileName">The destination file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Create(System.String)">
      <summary>
            Creates or overwrites a GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Create(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Creates or overwrites a GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CreateText(System.String)">
      <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A stream writer.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CreateText(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>A stream writer.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Database">
      <summary>
            Gets the database containing the GridFS collections.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.DatabaseName">
      <summary>
            Gets the database containing the GridFS collections.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Delete(MongoDB.Driver.IMongoQuery)">
      <summary>
            Deletes GridFS files.
            </summary>
      <param name="query">A query that specifies the GridFS files to delete.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Delete(System.String)">
      <summary>
            Deletes all versions of a GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.DeleteById(MongoDB.Bson.BsonValue)">
      <summary>
            Deletes a GridFS file.
            </summary>
      <param name="id">The GridFS file Id.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Downloads a GridFS file.
            </summary>
      <param name="stream">The destination stream.</param>
      <param name="fileInfo">The GridFS file.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.IMongoQuery)">
      <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
      <param name="stream">The destination stream.</param>
      <param name="query">The GridFS file.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.IMongoQuery,System.Int32)">
      <summary>
            Downloads a specific version of a GridFS file.
            </summary>
      <param name="stream">The destination stream.</param>
      <param name="query">The GridFS file.</param>
      <param name="version">The version to download.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,System.String)">
      <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
      <param name="stream">The destination stream.</param>
      <param name="remoteFileName">The remote file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,System.String,System.Int32)">
      <summary>
            Downloads a specific version of a GridFS file.
            </summary>
      <param name="stream">The destination stream.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="version">The version to download.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String)">
      <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
      <param name="fileName">The file name (same local and remote names).</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Downloads a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="fileInfo">The GridFS file.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.IMongoQuery)">
      <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="query">The GridFS file.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.IMongoQuery,System.Int32)">
      <summary>
            Downloads a specific version of a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="query">The GridFS file.</param>
      <param name="version">The version to download.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.Int32)">
      <summary>
            Downloads a specific version of a GridFS file.
            </summary>
      <param name="fileName">The file name (same local and remote names).</param>
      <param name="version">The version to download.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.String)">
      <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="remoteFileName">The remote file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.String,System.Int32)">
      <summary>
            Downloads a specific version of a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="version">The version to download.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.EnsureIndexes">
      <summary>
            Ensures that the proper indexes for GridFS exist (only creates the new indexes if there are fewer than 1000 GridFS files).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.EnsureIndexes(System.Int32)">
      <summary>
            Ensures that the proper indexes for GridFS exist.
            </summary>
      <param name="maxFiles">Only create new indexes if there are fewer than this number of GridFS files).</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Exists(MongoDB.Driver.IMongoQuery)">
      <summary>
            Tests whether a GridFS file exists.
            </summary>
      <param name="query">The GridFS file.</param>
      <returns>True if the GridFS file exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Exists(System.String)">
      <summary>
            Tests whether a GridFS file exists.
            </summary>
      <param name="remoteFileName">The GridFS file.</param>
      <returns>True if the GridFS file exists.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.ExistsById(MongoDB.Bson.BsonValue)">
      <summary>
            Tests whether a GridFS file exists.
            </summary>
      <param name="id">The GridFS file.</param>
      <returns>True if the GridFS file exists.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Files">
      <summary>
            Gets the files collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Find(MongoDB.Driver.IMongoQuery)">
      <summary>
            Finds matching GridFS files.
            </summary>
      <param name="query">A query.</param>
      <returns>The matching GridFS files.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Find(System.String)">
      <summary>
            Finds matching GridFS files.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>The matching GridFS files.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindAll">
      <summary>
            Finds all GridFS files.
            </summary>
      <returns>The matching GridFS files.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(MongoDB.Driver.IMongoQuery)">
      <summary>
            Finds the most recent version of a GridFS file.
            </summary>
      <param name="query">The GridFS file.</param>
      <returns>The matching GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(MongoDB.Driver.IMongoQuery,System.Int32)">
      <summary>
            Finds a specific version of a GridFS file.
            </summary>
      <param name="query">The GridFS file.</param>
      <param name="version">The version to find (1 is oldest, -1 is newest, 0 is no sort).</param>
      <returns>The matching GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(System.String)">
      <summary>
            Finds the most recent version of a GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>The matching GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(System.String,System.Int32)">
      <summary>
            Finds a specific version of a GridFS file.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="version">The version to find.</param>
      <returns>The matching GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOneById(MongoDB.Bson.BsonValue)">
      <summary>
            Finds a GridFS file.
            </summary>
      <param name="id">The GridFS file Id.</param>
      <returns>The GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.MoveTo(System.String,System.String)">
      <summary>
            Moves the most recent version of a GridFS file.
            </summary>
      <param name="sourceFileName">The source file name.</param>
      <param name="destFileName">The destination file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode)">
      <summary>
            Opens a GridFS file with the specified mode.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="mode">The mode.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Opens a GridFS file with the specified mode and access.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="mode">The mode.</param>
      <param name="access">The access.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode,System.IO.FileAccess,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Opens a GridFS file with the specified mode, access and create options.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="mode">The mode.</param>
      <param name="access">The access.</param>
      <param name="createOptions">The create options.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenRead(System.String)">
      <summary>
            Opens an existing GridFS file for reading.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenText(System.String)">
      <summary>
            Opens an existing UTF-8 encoded text GridFS file for reading.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A stream reader.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenWrite(System.String)">
      <summary>
            Opens an existing GridFS file for writing.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenWrite(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Opens an existing GridFS file for writing.
            </summary>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>A stream.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Server">
      <summary>
            Gets the server containing the GridFS collections.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetAliases(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.String[])">
      <summary>
            Sets the aliases for an existing GridFS file.
            </summary>
      <param name="fileInfo">The GridFS file.</param>
      <param name="aliases">The aliases.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetContentType(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.String)">
      <summary>
            Sets the content type for an existing GridFS file.
            </summary>
      <param name="fileInfo">The GridFS file.</param>
      <param name="contentType">The content type.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetMetadata(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Bson.BsonValue)">
      <summary>
            Sets the metadata for an existing GridFS file.
            </summary>
      <param name="fileInfo">The GridFS file.</param>
      <param name="metadata">The metadata.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Settings">
      <summary>
            Gets the GridFS settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.IO.Stream,System.String)">
      <summary>
            Uploads a GridFS file.
            </summary>
      <param name="stream">The source stream.</param>
      <param name="remoteFileName">The remote file name.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.IO.Stream,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Uploads a GridFS file.
            </summary>
      <param name="stream">The source stream.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.String)">
      <summary>
            Uploads a GridFS file.
            </summary>
      <param name="fileName">The file name (same local and remote names).</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.String,System.String)">
      <summary>
            Uploads a GridFS file.
            </summary>
      <param name="localFileName">The local file name.</param>
      <param name="remoteFileName">The remote file name.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFSCreateOptions">
      <summary>
            Represents options used when creating a GridFS file.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.#ctor">
      <summary>
            Initializes a new instance of the MongoGridFSCreateOptions class.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Aliases">
      <summary>
            Gets or sets the aliases.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.ChunkSize">
      <summary>
            Gets or sets the chunk size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.ContentType">
      <summary>
            Gets or sets the content type.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Id">
      <summary>
            Gets or sets the file Id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Metadata">
      <summary>
            Gets or sets the metadata.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.UploadDate">
      <summary>
            Gets or sets the upload date.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFSException">
      <summary>
            Represents a MongoDB GridFS exception.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String)">
      <summary>
            Initializes a new instance of the MongoGridFSException class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the MongoGridFSException class.
            </summary>
      <param name="connectionId">The connection identifier.</param>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the MongoGridFSException class (this overload supports deserialization).
            </summary>
      <param name="info">The SerializationInfo.</param>
      <param name="context">The StreamingContext.</param>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo">
      <summary>
            Represents information about a GridFS file (patterned after .NET's FileInfo class).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String)">
      <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
      <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
      <param name="remoteFileName">The remote file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
      <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
      <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="chunkSize">The chunk size.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Bson.BsonDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="serverInstance">The server instance.</param>
      <param name="databaseName">Name of the database.</param>
      <param name="gridFSSettings">The GridFS settings.</param>
      <param name="fileInfo">The fileInfo.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="serverInstance">The server instance.</param>
      <param name="databaseName">Name of the database.</param>
      <param name="gridFSSettings">The GridFS settings.</param>
      <param name="remoteFileName">The remote file name.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo" /> class.
            </summary>
      <param name="server">The server.</param>
      <param name="serverInstance">The server instance.</param>
      <param name="databaseName">Name of the database.</param>
      <param name="gridFSSettings">The GridFS settings.</param>
      <param name="remoteFileName">The remote file name.</param>
      <param name="createOptions">The create options.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Aliases">
      <summary>
            Gets the aliases.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.AppendText">
      <summary>
            Appends UTF-8 encoded text to an existing GridFS file.
            </summary>
      <returns>A StreamWriter.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ChunkSize">
      <summary>
            Gets the chunk size.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ContentType">
      <summary>
            Gets the content type.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CopyTo(System.String)">
      <summary>
            Copies a GridFS file.
            </summary>
      <param name="destFileName">The destination file name.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CopyTo(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
      <summary>
            Copies a GridFS file.
            </summary>
      <param name="destFileName">The destination file name.</param>
      <param name="createOptions">The create options.</param>
      <returns>The file info of the new GridFS file.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Create">
      <summary>
            Creates or overwrites a GridFS file.
            </summary>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CreateText">
      <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
      <returns>A stream.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.DatabaseName">
      <summary>
            Gets the database name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Delete">
      <summary>
            Deletes a GridFS file.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Determines whether this instance and another specified MongoGridFSFileInfo object have the same value.
            </summary>
      <param name="rhs">The MongoGridFSFileInfo object to compare to this instance.</param>
      <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Determines whether two specified MongoGridFSFileInfo objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(System.Object)">
      <summary>
            Determines whether this instance and a specified object, which must also be a MongoGridFSFileInfo object, have the same value.
            </summary>
      <param name="obj">The MongoGridFSFileInfo object to compare to this instance.</param>
      <returns>True if obj is a MongoGridFSFileInfo object and its value is the same as this instance; otherwise, false.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Exists">
      <summary>
            Gets a value indicating whether the GridFS file exists.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GetHashCode">
      <summary>
            Returns the hash code for this MongoGridFSFileInfo object.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GridFS">
      <summary>
            Gets the GridFS file system that contains this GridFS file.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GridFSSettings">
      <summary>
            Gets the GridFS settings.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Id">
      <summary>
            Gets the GridFS file Id.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Length">
      <summary>
            Gets the file lenth.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.MD5">
      <summary>
            Gets the MD5 hash of the file contents.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Metadata">
      <summary>
            Gets the metadata.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.MoveTo(System.String)">
      <summary>
            Moves the most recent version of a GridFS file.
            </summary>
      <param name="destFileName">The destination file name.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Name">
      <summary>
            Gets the remote file name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.op_Equality(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Determines whether two specified MongoGridFSFileInfo objects have the same value.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.op_Inequality(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
      <summary>
            Determines whether two specified MongoGridFSFileInfo objects have different values.
            </summary>
      <param name="lhs">The first value to compare, or null.</param>
      <param name="rhs">The second value to compare, or null.</param>
      <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Open(System.IO.FileMode)">
      <summary>
            Opens a GridFS file with the specified mode.
            </summary>
      <param name="mode">The mode.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Opens a GridFS file with the specified mode and access.
            </summary>
      <param name="mode">The mode.</param>
      <param name="access">The access.</param>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenRead">
      <summary>
            Opens an existing GridFS file for reading.
            </summary>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenText">
      <summary>
            Opens an existing UTF-8 encoded text GridFS file for reading.
            </summary>
      <returns>A stream reader.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenWrite">
      <summary>
            Opens an existing GridFS file for writing.
            </summary>
      <returns>A stream.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Refresh">
      <summary>
            Refreshes the GridFS file info from the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Server">
      <summary>
            Gets the server.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ServerInstance">
      <summary>
            Gets the server instance;
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.UploadDate">
      <summary>
            Gets the upload date.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFSSettings">
      <summary>
            Represents setting for GridFS.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor">
      <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor(MongoDB.Driver.MongoDatabase)">
      <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
      <param name="database">The database from which to inherit some of the settings.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor(System.Int32,System.String,MongoDB.Driver.WriteConcern)">
      <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
      <param name="chunkSize">The chunk size.</param>
      <param name="root">The root collection name.</param>
      <param name="writeConcern">The write concern.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ChunksCollectionName">
      <summary>
            Gets the chunks collection name.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ChunkSize">
      <summary>
            Gets or sets the chunk size.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Clone">
      <summary>
            Creates a clone of the settings.
            </summary>
      <returns>A clone of the settings.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.Defaults">
      <summary>
            Gets or sets the default GridFS settings.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Equals(MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Compares this MongoGridFSSettings to another one.
            </summary>
      <param name="rhs">The other MongoGridFSSettings.</param>
      <returns>True if the two settings are equal.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Equals(System.Object)">
      <summary>
            Compares this MongoGridFSSettings to another object.
            </summary>
      <param name="obj">The other object.</param>
      <returns>True if the other objects is a MongoGridFSSettings and is equal to this one.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.FilesCollectionName">
      <summary>
            Gets the files collection name.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Freeze">
      <summary>
            Freezes the settings.
            </summary>
      <returns>The frozen settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.FrozenCopy">
      <summary>
            Returns a frozen copy of the settings.
            </summary>
      <returns>A frozen copy of the settings.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.GetHashCode">
      <summary>
            Gets the hash code.
            </summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.GuidRepresentation">
      <summary>
            Gets or sets the GuidRepresentation.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.IsFrozen">
      <summary>
            Gets a value indicating whether the settings are frozen.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.op_Equality(MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Compares two MongoGridFSSettings.
            </summary>
      <param name="lhs">The first MongoGridFSSettings.</param>
      <param name="rhs">The other MongoGridFSSettings.</param>
      <returns>True if the two MongoGridFSSettings are equal (or both null).</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.op_Inequality(MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Driver.GridFS.MongoGridFSSettings)">
      <summary>
            Compares two MongoGridFSSettings.
            </summary>
      <param name="lhs">The first MongoGridFSSettings.</param>
      <param name="rhs">The other MongoGridFSSettings.</param>
      <returns>True if the two MongoGridFSSettings are not equal (or one is null and the other is not).</returns>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ReadEncoding">
      <summary>
            Gets or sets the read encoding.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ReadPreference">
      <summary>
            Gets or sets the ReadPreference.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.Root">
      <summary>
            Gets or sets the root collection name (the files and chunks collection names are derived from the root).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.UpdateMD5">
      <summary>
            Gets or sets a value indicating whether to udpate the MD5 hash on the server when a file is uploaded or modified.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.VerifyMD5">
      <summary>
            Gets or sets a value indicating whether to verify the MD5 hash when a file is uploaded or downloaded.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.WriteConcern">
      <summary>
            Gets or sets the WriteConcern.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.WriteEncoding">
      <summary>
            Gets or sets the write encoding.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.GridFS.MongoGridFSStream">
      <summary>
            Represents a stream interface to a GridFS file (patterned after .NET's Stream class).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.#ctor(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.IO.FileMode)">
      <summary>
            Initializes a new instance of the MongoGridFSStream class.
            </summary>
      <param name="fileInfo">The GridFS file info.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.#ctor(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Initializes a new instance of the MongoGridFSStream class.
            </summary>
      <param name="fileInfo">The GridFS file info.</param>
      <param name="mode">The mode.</param>
      <param name="access">The acess.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanRead">
      <summary>
            Gets whether the GridFS stream supports reading.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanSeek">
      <summary>
            Gets whether the GridFS stream supports seeking.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanWrite">
      <summary>
            Gets whether the GridFS stream supports writing.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Dispose(System.Boolean)">
      <summary>
            Disposes of any resources used by the stream.
            </summary>
      <param name="disposing">True if called from Dispose.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Flush">
      <summary>
            Flushes any unsaved data in the buffers to the GridFS file.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.Length">
      <summary>
            Gets the current length (use SetLength to change the length).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.Position">
      <summary>
            Gets or sets the current position.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads bytes from the GridFS stream.
            </summary>
      <param name="buffer">The destination buffer.</param>
      <param name="offset">The offset in the destination buffer at which to place the read bytes.</param>
      <param name="count">The number of bytes to read.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.ReadByte">
      <summary>
            Reads one byte from the GridFS stream.
            </summary>
      <returns>The byte (-1 if at the end of the GridFS stream).</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
            Seeks to a new position.
            </summary>
      <param name="offset">The seek offset.</param>
      <param name="origin">The seek origin.</param>
      <returns>The new position.</returns>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.SetLength(System.Int64)">
      <summary>
            Sets the length of the GridFS file.
            </summary>
      <param name="value">The length.</param>
    </member>
    <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.UpdateMD5">
      <summary>
            Gets or sets a value indicating whether to compute and update the MD5 hash for the file when the stream is closed.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Writes bytes to the GridFS stream.
            </summary>
      <param name="buffer">The source buffer.</param>
      <param name="offset">The offset in the source buffer to the bytes.</param>
      <param name="count">The number of bytes to write.</param>
    </member>
    <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.WriteByte(System.Byte)">
      <summary>
            Writes one byte to the GridFS stream.
            </summary>
      <param name="value">The byte.</param>
    </member>
    <member name="T:MongoDB.Driver.Linq.DeserializationProjector`1">
      <summary>
            Represents a projection that deserializes BsonValues.
            </summary>
      <typeparam name="TResult">The type of the result objects.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue},MongoDB.Bson.Serialization.BsonSerializationInfo)">
      <summary>
            Initializes a new instance of the DeserializationProjector class.
            </summary>
      <param name="source">The enumerable object that supplies the source objects.</param>
      <param name="serializationInfo">Serialization info for deserializing source objects into result objects.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.GetEnumerator">
      <summary>
            Gets an enumerator for the result objects.
            </summary>
      <returns>An enumerator for the result objects.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionFormatter">
      <summary>
            A class that formats an Expression as a string.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.#ctor">
      <summary>
            Initializes a new instance of the ExpressionFormatter class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString">
      <summary>
            Returns a string that represents the Expression.
            </summary>
      <returns>A string that represents the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString(System.Linq.Expressions.Expression)">
      <summary>
            Returns a string that represents the Expression.
            </summary>
      <param name="node">The Expression to format.</param>
      <returns>A string that represents the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit node.
            </summary>
      <param name="node">The ElementInit node.</param>
      <returns>The ElementInit node.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionParameterReplacer">
      <summary>
            A class that replaces all occurences of one parameter with a different parameter.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
      <summary>
            Initializes a new instance of the ExpressionParameterReplacer class.
            </summary>
      <param name="fromParameter">The parameter to be replaced.</param>
      <param name="toExpression">The expression that replaces the parameter.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.ReplaceParameter(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
      <summary>
            Replaces all occurences of one parameter with a different parameter.
            </summary>
      <param name="node">The expression containing the parameter that should be replaced.</param>
      <param name="fromParameter">The from parameter.</param>
      <param name="toExpression">The expression that replaces the parameter.</param>
      <returns>The expression with all occurrences of the parameter replaced.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Replaces the from parameter with the two parameter if it maches.
            </summary>
      <param name="node">The node.</param>
      <returns>The parameter (replaced if it matched).</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionPrettyPrinter">
      <summary>
            A class that pretty prints an Expression.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.#ctor">
      <summary>
            Initializes a new instance of the ExpressionPrettyPrinter class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.PrettyPrint(System.Linq.Expressions.Expression)">
      <summary>
            Pretty prints an Expression.
            </summary>
      <param name="node">The Expression to pretty print.</param>
      <returns>A string containing the pretty printed Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.ToString">
      <summary>
            Returns the pretty printed string representation of the Expression.
            </summary>
      <returns>The pretty printed string representation of the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit node.
            </summary>
      <param name="node">The ElementInit node.</param>
      <returns>The ElementInit node.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionVisitor">
      <summary>
            An abstract base class for an Expression visitor.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.#ctor">
      <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
      <summary>
            Visits an Expression list.
            </summary>
      <param name="nodes">The Expression list.</param>
      <returns>The Expression list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
      <summary>
            Visits an Expression.
            </summary>
      <param name="node">The Expression.</param>
      <returns>The Expression (posibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The BinaryExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The ConditionalExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The ConstantExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit.
            </summary>
      <param name="node">The ElementInit.</param>
      <returns>The ElementInit (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The ElementInit list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The InvocationExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The LambdaExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The ListInitExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The MemberExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The MemberAssignment (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The MemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The MemberBinding list (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The MemberInitExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The MemberListBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The MemberMemberBinding (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The MethodCallExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The NewExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The NewArrayExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The ParameterExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The TypeBinaryExpression (possibly modified).</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The UnaryExpression (possibly modified).</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.ExpressionVisitor`1">
      <summary>
            An abstract base class for an Expression visitor that returns a value of type T.
            </summary>
      <typeparam name="T">The type of the return value.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.#ctor">
      <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
      <summary>
            Visits an Expression list.
            </summary>
      <param name="nodes">The Expression list.</param>
      <returns>The result of visiting the Expressions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Linq.Expressions.Expression)">
      <summary>
            Visits an Expression.
            </summary>
      <param name="node">The Expression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <summary>
            Visits a BinaryExpression.
            </summary>
      <param name="node">The BinaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <summary>
            Visits a ConditionalExpression.
            </summary>
      <param name="node">The ConditionalExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <summary>
            Visits a ConstantExpression.
            </summary>
      <param name="node">The ConstantExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <summary>
            Visits an ElementInit.
            </summary>
      <param name="node">The ElementInit.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
      <summary>
            Visits an ElementInit list.
            </summary>
      <param name="nodes">The ElementInit list.</param>
      <returns>The result of visiting the Expressions.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <summary>
            Visits an InvocationExpression.
            </summary>
      <param name="node">The InvocationExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
      <summary>
            Visits a LambdaExpression.
            </summary>
      <param name="node">The LambdaExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <summary>
            Visits a ListInitExpression.
            </summary>
      <param name="node">The ListInitExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMember(System.Linq.Expressions.MemberExpression)">
      <summary>
            Visits a MemberExpression.
            </summary>
      <param name="node">The MemberExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <summary>
            Visits a MemberAssignment.
            </summary>
      <param name="node">The MemberAssignment.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <summary>
            Visits a MemberBinding.
            </summary>
      <param name="node">The MemberBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
      <summary>
            Visits a MemberBinding list.
            </summary>
      <param name="nodes">The MemberBinding list.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <summary>
            Visits a MemberInitExpression.
            </summary>
      <param name="node">The MemberInitExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <summary>
            Visits a MemberListBinding.
            </summary>
      <param name="node">The MemberListBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <summary>
            Visits a MemberMemberBinding.
            </summary>
      <param name="node">The MemberMemberBinding.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <summary>
            Visits a MethodCallExpression.
            </summary>
      <param name="node">The MethodCallExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNew(System.Linq.Expressions.NewExpression)">
      <summary>
            Visits a NewExpression.
            </summary>
      <param name="node">The NewExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <summary>
            Visits a NewArrayExpression.
            </summary>
      <param name="node">The NewArrayExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <summary>
            Visits a ParameterExpression.
            </summary>
      <param name="node">The ParameterExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <summary>
            Visits a TypeBinaryExpression.
            </summary>
      <param name="node">The TypeBinaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <summary>
            Visits a UnaryExpression.
            </summary>
      <param name="node">The UnaryExpression.</param>
      <returns>The result of visiting the Expression.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.LinqExtensionMethods">
      <summary>
            Static class that contains the Mongo Linq extension methods.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.AsQueryable``1(MongoDB.Driver.MongoCollection)">
      <summary>
            Returns an instance of IQueryable{{T}} for a MongoCollection.
            </summary>
      <param name="collection">The name of the collection.</param>
      <typeparam name="T">The type of the returned documents.</typeparam>
      <returns>An instance of IQueryable{{T}} for a MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.AsQueryable``1(MongoDB.Driver.MongoCollection{``0})">
      <summary>
            Returns an instance of IQueryable{{T}} for a MongoCollection.
            </summary>
      <param name="collection">The name of the collection.</param>
      <typeparam name="T">The type of the returned documents.</typeparam>
      <returns>An instance of IQueryable{{T}} for a MongoCollection.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.Explain``1(System.Linq.IQueryable{``0})">
      <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
      <param name="source">The LINQ query to explain.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>An explanation of thow the query was executed.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.Explain``1(System.Linq.IQueryable{``0},System.Boolean)">
      <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
      <param name="source">The LINQ query to explain</param>
      <param name="verbose">Whether the explanation should contain more details.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>An explanation of thow the query was executed.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.LinqToMongo">
      <summary>
            This static class holds methods that can be used to express MongoDB specific query operations in LINQ queries.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a sequence contains all of the specified values.
            </summary>
      <param name="source">A sequence in which to locate the values.</param>
      <param name="values">The values to locate in the sequence.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the sequence contains all of the specified values.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a sequence contains any of the specified values.
            </summary>
      <param name="source">A sequence in which to locate the values.</param>
      <param name="values">The values to locate in the sequence.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the sequence contains any of the specified values.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Determines whether a specified value is contained in a sequence.
            </summary>
      <param name="value">The value to locate in the sequence.</param>
      <param name="source">A sequence in which to locate the values.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>True if the value is contained in the sequence.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.Inject(MongoDB.Driver.IMongoQuery)">
      <summary>
            Injects a low level IMongoQuery into a LINQ where clause. Can only be used in LINQ queries.
            </summary>
      <param name="query">The low level query.</param>
      <returns>Throws an InvalidOperationException if called.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},MongoDB.Bson.BsonDocument)">
      <summary>
            Sets an index hint on the query that's being built.
            </summary>
      <param name="source">The query being built.</param>
      <param name="indexHint">Hint for what index to use.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>New query where the expression includes a WithIndex method call.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},System.String)">
      <summary>
            Sets an index hint on the query that's being built.
            </summary>
      <param name="source">The query being built.</param>
      <param name="indexName">The name of the index to use.</param>
      <typeparam name="TSource">The type of the elements of source.</typeparam>
      <returns>New query where the expression includes a WithIndex method call.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.MongoQueryable`1">
      <summary>
            An implementation of IQueryable{{T}} for querying a MongoDB collection.
            This class has been named MongoQueryable instead of MongoQuery to avoid confusion with IMongoQuery.
            </summary>
      <typeparam name="T">The type of the documents being queried.</typeparam>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.#ctor(MongoDB.Driver.Linq.MongoQueryProvider)">
      <summary>
            Initializes a new instance of the MongoQueryable class.
            </summary>
      <param name="provider">The query provider.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.#ctor(MongoDB.Driver.Linq.MongoQueryProvider,System.Linq.Expressions.Expression)">
      <summary>
            Initializes a new instance of the MongoQueryable class.
            </summary>
      <param name="provider">The query provider.</param>
      <param name="expression">The expression.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.GetEnumerator">
      <summary>
            Gets an enumerator for the results of a MongoDB LINQ query.
            </summary>
      <returns>An enumerator for the results of a MongoDB LINQ query.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.GetMongoQuery">
      <summary>
            Gets the MongoDB query that will be sent to the server when this LINQ query is executed.
            </summary>
      <returns>The MongoDB query.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.MongoQueryProvider">
      <summary>
            An implementation of IQueryProvider for querying a MongoDB collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.#ctor(MongoDB.Driver.MongoCollection)">
      <summary>
            Initializes a new instance of the MongoQueryProvider class.
            </summary>
      <param name="collection">The collection being queried.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.BuildMongoQuery``1(MongoDB.Driver.Linq.MongoQueryable{``0})">
      <summary>
            Builds the MongoDB query that will be sent to the server when the LINQ query is executed.
            </summary>
      <param name="query">The LINQ query.</param>
      <typeparam name="T">The type of the documents being queried.</typeparam>
      <returns>The MongoDB query.</returns>
    </member>
    <member name="P:MongoDB.Driver.Linq.MongoQueryProvider.Collection">
      <summary>
            Gets the Collection.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
      <summary>
            Creates a new instance of MongoQueryable{{T}} for this provider.
            </summary>
      <param name="expression">The query expression.</param>
      <typeparam name="T">The type of the returned elements.</typeparam>
      <returns>A new instance of MongoQueryable{{T}}.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
      <summary>
            Creates a new instance MongoQueryable{{T}} for this provider. Calls the generic CreateQuery{{T}} 
            to actually create the new MongoQueryable{{T}} instance.
            </summary>
      <param name="expression">The query expression.</param>
      <returns>A new instance of MongoQueryable{{T}}.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
      <summary>
            Executes a query.
            </summary>
      <param name="expression">The query expression.</param>
      <typeparam name="TResult">The type of the result.</typeparam>
      <returns>The result of the query.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.Execute(System.Linq.Expressions.Expression)">
      <summary>
            Executes a query. Calls the generic method Execute{{T}} to actually execute the query.
            </summary>
      <param name="expression">The query expression.</param>
      <returns>The result of the query.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.MongoQueryTranslator">
      <summary>
            A translator from LINQ expression queries to Mongo queries.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryTranslator.Translate(MongoDB.Driver.Linq.MongoQueryProvider,System.Linq.Expressions.Expression)">
      <summary>
            Translate a MongoDB LINQ query.
            </summary>
      <param name="provider">The MongoDB query provider.</param>
      <param name="expression">The LINQ query expression.</param>
      <returns>A TranslatedQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.MongoQueryTranslator.Translate(System.Linq.IQueryable)">
      <summary>
            Translate a MongoDB LINQ query.
            </summary>
      <param name="query">The MongoDB LINQ query.</param>
      <returns>A TranslatedQuery.</returns>
    </member>
    <member name="T:MongoDB.Driver.Linq.OrderByClause">
      <summary>
            Represents an order by clause.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.OrderByClause.#ctor(System.Linq.Expressions.LambdaExpression,MongoDB.Driver.Linq.OrderByDirection)">
      <summary>
            Initializes an instance of the OrderByClause class.
            </summary>
      <param name="key">An expression identifying the key of the order by clause.</param>
      <param name="direction">The direction of the order by clause.</param>
    </member>
    <member name="P:MongoDB.Driver.Linq.OrderByClause.Direction">
      <summary>
            Gets the direction of the order by clause.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.OrderByClause.Key">
      <summary>
            Gets the lambda expression identifying the key of the order by clause.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Linq.OrderByDirection">
      <summary>
            Represents the direction of an order by clause.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Linq.OrderByDirection.Ascending">
      <summary>
            Ascending order.
            </summary>
    </member>
    <member name="F:MongoDB.Driver.Linq.OrderByDirection.Descending">
      <summary>
            Descending order.
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Linq.SelectQuery">
      <summary>
            Represents a LINQ query that has been translated to an equivalent MongoDB Find query.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.SelectQuery.#ctor(MongoDB.Driver.MongoCollection,System.Type)">
      <summary>
            Initializes a new instance of the MongoLinqFindQuery class.
            </summary>
      <param name="collection">The collection being queried.</param>
      <param name="documentType">The document type.</param>
    </member>
    <member name="M:MongoDB.Driver.Linq.SelectQuery.BuildQuery">
      <summary>
            Creates an IMongoQuery from the where clause (returns null if no where clause was specified).
            </summary>
      <returns>An IMongoQuery.</returns>
    </member>
    <member name="M:MongoDB.Driver.Linq.SelectQuery.Execute">
      <summary>
            Executes the translated Find query.
            </summary>
      <returns>The result of executing the translated Find query.</returns>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.IndexHint">
      <summary>
            Gets the BsonValue (string or document) that defines which index to use (or null if not specified);
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.OfType">
      <summary>
            Gets the final result type if an OfType query operator was used (otherwise null).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.OrderBy">
      <summary>
            Gets a list of Expressions that defines the sort order (or null if not specified).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.Projection">
      <summary>
            Gets the Expression that defines the projection (or null if not specified).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.Skip">
      <summary>
            Gets the Expression that defines how many documents to skip (or null if not specified).
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.Take">
      <summary>
            Gets the Expression that defines how many documents to take (or null if not specified);
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.SelectQuery.Translate(System.Linq.Expressions.Expression)">
      <summary>
            Translates a LINQ query expression tree.
            </summary>
      <param name="expression">The LINQ query expression tree.</param>
    </member>
    <member name="P:MongoDB.Driver.Linq.SelectQuery.Where">
      <summary>
            Gets the LambdaExpression that defines the where clause (or null if not specified).
            </summary>
    </member>
    <member name="T:MongoDB.Driver.Linq.TranslatedQuery">
      <summary>
            Represents a LINQ query that has been translated to a MongoDB query.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.TranslatedQuery.#ctor(MongoDB.Driver.MongoCollection,System.Type)">
      <summary>
            Initializes a new instance of the MongoLinqQuery class.
            </summary>
      <param name="collection">The collection being queried.</param>
      <param name="documentType">The document type being queried.</param>
    </member>
    <member name="P:MongoDB.Driver.Linq.TranslatedQuery.Collection">
      <summary>
            Gets the collection being queried.
            </summary>
    </member>
    <member name="P:MongoDB.Driver.Linq.TranslatedQuery.DocumentType">
      <summary>
            Get the document type being queried.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Linq.TranslatedQuery.Execute">
      <summary>
            Executes a query that returns a single result (overridden by subclasses).
            </summary>
      <returns>The result of executing the query.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.BaseWrapper">
      <summary>
            Abstract base class for wrapper classes.
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the BaseWrapper class.
            </summary>
      <param name="wrapped">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.#ctor(System.Type,System.Object)">
      <summary>
            Initializes a new instance of the BaseWrapper class.
            </summary>
      <param name="nominalType">The nominal type of the wrapped object.</param>
      <param name="wrapped">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.SerializeWrappedObject(MongoDB.Bson.Serialization.BsonSerializationContext)">
      <summary>
            Serializes the wrapped value.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.CollectionOptionsWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoCollectionOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.CollectionOptionsWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the CollectionOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.CollectionOptionsWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the CollectionOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
      <returns>A new instance of CollectionOptionsWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.CommandWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoCommand is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.CommandWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the CommandWrapper class.
            </summary>
      <param name="command">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.CommandWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the CommandWrapper class.
            </summary>
      <param name="command">The wrapped object.</param>
      <returns>A new instance of CommandWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.FieldsWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoFields is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.FieldsWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the FieldsWrapper class.
            </summary>
      <param name="fields">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.FieldsWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the FieldsWrapper class.
            </summary>
      <param name="fields">The wrapped object.</param>
      <returns>A new instance of FieldsWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoGeoHaystackSearchOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the GeoHaystackSearchOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
      <returns>A new instance of GeoHaystackSearchOptionsWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoGeoNearOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the GeoNearOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the GeoNearOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
      <returns>A new instance of GeoNearOptionsWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.GroupByWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoGroupBy is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GroupByWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the GroupByWrapper class.
            </summary>
      <param name="groupBy">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.GroupByWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the GroupByWrapper class.
            </summary>
      <param name="groupBy">The wrapped object.</param>
      <returns>A new instance of GroupByWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.IndexKeysWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoIndexKeys is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.IndexKeysWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the IndexKeysWrapper class.
            </summary>
      <param name="keys">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.IndexKeysWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the IndexKeysWrapper class.
            </summary>
      <param name="keys">The wrapped object.</param>
      <returns>A new instance of IndexKeysWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.IndexOptionsWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoIndexOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.IndexOptionsWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the IndexOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.IndexOptionsWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the IndexOptionsWrapper class.
            </summary>
      <param name="options">The wrapped object.</param>
      <returns>A new instance of IndexOptionsWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.QueryWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoQuery is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.QueryWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the QueryWrapper class.
            </summary>
      <param name="query">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.QueryWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the QueryWrapper class.
            </summary>
      <param name="query">The wrapped object.</param>
      <returns>A new instance of QueryWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.ScopeWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoScope is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.ScopeWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the ScopeWrapper class.
            </summary>
      <param name="scope">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.ScopeWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the ScopeWrapper class.
            </summary>
      <param name="scope">The wrapped object.</param>
      <returns>A new instance of ScopeWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.SortByWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoSortBy is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.SortByWrapper.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the SortByWrapper class.
            </summary>
      <param name="sortBy">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.SortByWrapper.Create(System.Object)">
      <summary>
            Creates a new instance of the SortByWrapper class.
            </summary>
      <param name="sortBy">The wrapped object.</param>
      <returns>A new instance of SortByWrapper or null.</returns>
    </member>
    <member name="T:MongoDB.Driver.Wrappers.UpdateWrapper">
      <summary>
            Represents a wrapped object that can be used where an IMongoUpdate is expected (the wrapped object is expected to serialize properly).
            </summary>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.#ctor(System.Type,System.Object)">
      <summary>
            Initializes a new instance of the UpdateWrapper class.
            </summary>
      <param name="nominalType">The nominal type of the wrapped object.</param>
      <param name="update">The wrapped object.</param>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.Create(System.Type,System.Object)">
      <summary>
            Creates a new instance of the UpdateWrapper class.
            </summary>
      <param name="nominalType">The nominal type of the wrapped object.</param>
      <param name="update">The wrapped object.</param>
      <returns>A new instance of UpdateWrapper or null.</returns>
    </member>
    <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.Create``1(``0)">
      <summary>
            Creates a new instance of the UpdateWrapper class (this overload is used when the update
            modifier is a replacement document).
            </summary>
      <param name="update">The wrapped object.</param>
      <typeparam name="T">The nominal type of the wrapped object.</typeparam>
      <returns>A new instance of UpdateWrapper or null.</returns>
    </member>
  </members>
</doc>