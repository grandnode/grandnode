<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebMarkupMin.Core</name>
    </assembly>
    <members>
        <member name="T:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase">
            <summary>
            Advanced HTML minification settings
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.RemoveCdataSectionsFromScriptsAndStyles">
            <summary>
            Gets or sets a flag for whether to remove CDATA sections from scripts and styles
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.PreserveCase">
            <summary>
            Gets or sets a flag for whether to preserve case of tag and attribute names
            (useful for Angular 2 templates)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.EmptyTagRenderMode">
            <summary>
            Gets or sets a render mode of HTML empty tag
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.RemoveOptionalEndTags">
            <summary>
            Gets or sets a flag for whether to remove optional end tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase._preservableOptionalTags">
            <summary>
            Collection of optional tags, which should not be removed
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.PreservableOptionalTagCollection">
            <summary>
            Gets a collection of optional tags, which should not be removed
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.SetPreservableOptionalTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a preservable optional tags
            </summary>
            <param name="optionalTags">Collection of preservable optional tags</param>
        </member>
        <member name="M:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.AddPreservableOptionalTag(System.String)">
            <summary>
            Adds a preservable optional tag to the list
            </summary>
            <param name="optionalTag">Preservable optional tag</param>
            <returns>true - valid optional tag; false - invalid optional tag</returns>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.PreservableOptionalTagList">
            <summary>
            Gets or sets a comma-separated list of names of optional tags, which should not be removed
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.CollapseBooleanAttributes">
            <summary>
            Gets or sets a flag for whether to remove values from boolean attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.AttributeQuotesRemovalMode">
            <summary>
            Gets or sets a removal mode of HTML attribute quotes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.RemoveJsTypeAttributes">
            <summary>
            Gets or sets a flag for whether to remove <code>type="text/javascript"</code> from <code>script</code> tags
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.RemoveCssTypeAttributes">
            <summary>
            Gets or sets a flag for whether to remove <code>type="text/css"</code> from
            <code>style</code> and <code>link</code> tags
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.AdvancedHtmlMinificationSettingsBase.#ctor(System.Boolean)">
            <summary>
            Constructs instance of advanced HTML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of
            empty advanced HTML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.CodeMinificationResult">
            <summary>
            Code minification result
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CodeMinificationResult.#ctor(System.String)">
            <summary>
            Constructs instance of code minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of code minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of code minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
            <param name="warnings">List of the warnings</param>
        </member>
        <member name="T:WebMarkupMin.Core.CodeProcessingException">
            <summary>
            The exception that is thrown when a processing of code is failed
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CodeProcessingException.LineNumber">
            <summary>
            Gets or sets a line number
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CodeProcessingException.ColumnNumber">
            <summary>
            Gets or sets a column number
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CodeProcessingException.SourceFragment">
            <summary>
            Gets or sets a source fragment
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message and reference to the inner exception that is
            the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message, node coordinates and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message, line number, column number and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">SourceFragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message, node coordinates, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.CodeProcessingException.#ctor(System.String,System.Int32,System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.CodeProcessingException"/> class
            with a specified error message, line number, column number, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase">
            <summary>
            Common HTML minification settings
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.WhitespaceMinificationMode">
            <summary>
            Gets or sets a whitespace minification mode
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveHtmlComments">
            <summary>
            Gets or sets a flag for whether to remove all HTML comments
            except conditional, noindex, KnockoutJS containerless comments
            and AngularJS 1.X comment directives
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveHtmlCommentsFromScriptsAndStyles">
            <summary>
            Gets or sets a flag for whether to remove HTML comments from scripts and styles
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.UseShortDoctype">
            <summary>
            Gets or sets a flag for whether to use short DOCTYPE
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.UseMetaCharsetTag">
            <summary>
            Gets or sets a flag for whether to use META charset tag
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveTagsWithoutContent">
            <summary>
            Gets or sets a flag for whether to remove tags without content
            (except for <code>textarea</code>, <code>tr</code>, <code>th</code> and <code>td</code> tags,
            and tags with <code>class</code>, <code>id</code>, <code>name</code>, <code>role</code>,
            <code>src</code> and custom attributes)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveEmptyAttributes">
            <summary>
            Gets or sets a flag for whether to remove attributes, that has empty value
            (valid attributes are: <code>class</code>, <code>id</code>, <code>name</code>,
            <code>style</code>, <code>title</code>, <code>lang</code>, <code>dir</code>, event attributes,
            <code>action</code> of <code>form</code> tag and <code>value</code> of <code>input</code> tag)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveRedundantAttributes">
            <summary>
            Gets or sets a flag for whether to remove redundant attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveHttpProtocolFromAttributes">
            <summary>
            Gets or sets a flag for whether to remove the HTTP protocol portion
            (<code>http:</code>) from URI-based attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveHttpsProtocolFromAttributes">
            <summary>
            Gets or sets a flag for whether to remove the HTTPS protocol portion
            (<code>https:</code>) from URI-based attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.RemoveJsProtocolFromAttributes">
            <summary>
            Gets or sets a flag for whether to remove the <code>javascript:</code>
            pseudo-protocol portion from event attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyEmbeddedCssCode">
            <summary>
            Gets or sets a flag for whether to minify CSS code in <code>style</code> tags
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyInlineCssCode">
            <summary>
            Gets or sets a flag for whether to minify CSS code in <code>style</code> attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyEmbeddedJsCode">
            <summary>
            Gets or sets a flag for whether to minify JavaScript code in <code>script</code> tags
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyInlineJsCode">
            <summary>
            Gets or sets a flag for whether to minify JS code in event attributes
            and hyperlinks with <code>javascript:</code> pseudo-protocol
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase._processableScriptTypes">
            <summary>
            Collection of types of <code>script</code> tags, that are processed by minifier
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.ProcessableScriptTypeCollection">
            <summary>
            Gets a collection of types of <code>script</code> tags, that are processed by minifier
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.SetProcessableScriptTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a processable script types
            </summary>
            <param name="scriptTypes">Collection of processable script types</param>
        </member>
        <member name="M:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.AddProcessableScriptType(System.String)">
            <summary>
            Adds a processable script type to the list
            </summary>
            <param name="scriptType">Processable script type</param>
            <returns>true - valid script type; false - invalid script type</returns>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.ProcessableScriptTypeList">
            <summary>
            Gets or sets a comma-separated list of types of <code>script</code> tags, that are processed by minifier
            (e.g. <code>"text/html, text/ng-template"</code>)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyKnockoutBindingExpressions">
            <summary>
            Gets or sets a flag for whether to minify the KnockoutJS binding expressions
            in <code>data-bind</code> attributes and containerless comments
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.MinifyAngularBindingExpressions">
            <summary>
            Gets or sets a flag for whether to minify the AngularJS 1.X binding expressions
            in Mustache-style tags (<code>{{}}</code>) and directives
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase._customAngularDirectives">
            <summary>
            Collection of names of custom AngularJS 1.X directives, that contain expressions
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.CustomAngularDirectiveCollection">
            <summary>
            Gets a collection of names of custom AngularJS 1.X directives, that contain expressions
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.SetCustomAngularDirectives(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a names of custom AngularJS 1.X directives
            </summary>
            <param name="directiveNames">Collection of names of custom AngularJS 1.X directives</param>
        </member>
        <member name="M:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.AddCustomAngularDirective(System.String)">
            <summary>
            Adds a name of custom AngularJS 1.X directive to the list
            </summary>
            <param name="directiveName">Name of custom AngularJS 1.X directive</param>
            <returns>true - valid directive name; false - invalid directive name</returns>
        </member>
        <member name="P:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.CustomAngularDirectiveList">
            <summary>
            Gets or sets a comma-separated list of names of custom AngularJS 1.X
            directives (e.g. <code>"myDir, btfCarousel"</code>), that contain expressions
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CommonHtmlMinificationSettingsBase.#ctor(System.Boolean)">
            <summary>
            Constructs instance of common HTML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of
            empty common HTML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.CrockfordJsMinifier">
            <summary>
            Minifier, which produces minifiction of JS-code
            by using C# port of Douglas Crockford's JSMin (version of March 29, 2013)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.CrockfordJsMinifier.IsInlineCodeMinificationSupported">
            <summary>
            Gets a value indicating the minifier supports inline code minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CrockfordJsMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Produces code minifiction of JS content by using C# port of
            Douglas Crockford's JSMin
            </summary>
            <param name="content">JS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.CrockfordJsMinifier.Minify(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Produces code minifiction of JS content by using C# port of
            Douglas Crockford's JSMin
            </summary>
            <param name="content">JS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.CrockfordJsMinifierFactory">
            <summary>
            Douglas Crockford's JS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.CrockfordJsMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of Douglas Crockford's JS minifier
            </summary>
            <returns>Instance of Douglas Crockford's JS minifier</returns>
        </member>
        <member name="T:WebMarkupMin.Core.EmptyValueException">
            <summary>
            The exception that is thrown when a specified value is null or empty
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.EmptyValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.EmptyValueException"/> class
            with a specified error message
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:WebMarkupMin.Core.EmptyValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.EmptyValueException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.GenericHtmlMinificationSettings">
            <summary>
            Generic HTML minification settings
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.GenericHtmlMinificationSettings.UseXhtmlSyntax">
            <summary>
            Gets or sets a flag for whether to use XHTML syntax
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinificationSettings.#ctor">
            <summary>
            Constructs instance of generic HTML minification settings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinificationSettings.#ctor(System.Boolean)">
            <summary>
            Constructs instance of generic HTML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of
            empty generic HTML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.GenericHtmlMinifier">
            <summary>
            Generic HTML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.AVERAGE_COMPRESSION_RATIO">
            <summary>
            Average compression ratio
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.EMBEDDED_CODE_PLACEHOLDER">
            <summary>
            Placeholder for embedded code
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._jsContentTypes">
            <summary>
            List of JavaScript content types
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._builtinAngularDirectivesWithExpressions">
            <summary>
            List of names of built-in Angular directives, that contain expressions
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._settings">
            <summary>
            Generic HTML minification settings
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._cssMinifier">
            <summary>
            CSS minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._jsMinifier">
            <summary>
            JS minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._htmlParser">
            <summary>
            HTML parser
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._innerHtmlMinifier">
            <summary>
            Inner HTML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._innerHtmlMinifierInstanceSynchronizer">
            <summary>
            Synchronizer of inner HTML minifier instance
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._innerXmlMinifier">
            <summary>
            Inner XML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._innerXmlMinifierInstanceSynchronizer">
            <summary>
            Synchronizer of inner XML minifier instance
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._innerCrockfordJsMinifier">
            <summary>
            Inner Douglas Crockford's JS minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._fileContext">
            <summary>
            File context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._encoding">
            <summary>
            Text encoding
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._result">
            <summary>
            Result of HTML minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._buffer">
            <summary>
            HTML minification buffer
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._currentNodeType">
            <summary>
            Current node type
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._currentTag">
            <summary>
            Current tag
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._currentText">
            <summary>
            Current text
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._errors">
            <summary>
            List of the errors
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._warnings">
            <summary>
            List of the warnings
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._minificationSynchronizer">
            <summary>
            Synchronizer of minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._preservableOptionalTags">
            <summary>
            List of names of optional tags, which should not be removed
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._processableScriptTypes">
            <summary>
            List of types of <code>script</code> tags, that are processed by minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier._angularDirectivesWithExpressions">
            <summary>
            List of names of Angular directives, that contain expressions
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.#ctor(WebMarkupMin.Core.GenericHtmlMinificationSettings,WebMarkupMin.Core.ICssMinifier,WebMarkupMin.Core.IJsMinifier,WebMarkupMin.Core.Loggers.ILogger)">
            <summary>
            Constructs instance of generic HTML minifier
            </summary>
            <param name="settings">Generic HTML minification settings</param>
            <param name="cssMinifier">CSS minifier</param>
            <param name="jsMinifier">JS minifier</param>
            <param name="logger">Logger</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.GetInnerHtmlMinifierInstance">
            <summary>
            Gets a instance of inner HTML minifier
            </summary>
            <returns>Instance of inner HTML minifier</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.GetInnerXmlMinifierInstance">
            <summary>
            Gets a instance of inner XML minifier
            </summary>
            <returns>Instance of inner XML minifier</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.GetInnerCrockfordJsMinifierInstance">
            <summary>
            Gets a instance of inner Douglas Crockford's JS minifier
            </summary>
            <returns>Instance of inner Douglas Crockford's JS minifier</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.Minify(System.String)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.Minify(System.String,System.String)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="fileContext">File context</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.Minify(System.String,System.Text.Encoding)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.Minify(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="fileContext">File context</param>
            <param name="encoding">Text encoding</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.XmlDeclarationHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            XML declaration handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="xmlDeclaration">XML declaration</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.DoctypeHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Document type declaration handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="doctype">Document type declaration</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CommentHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Comments handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="commentText">Comment text</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IfConditionalCommentHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlConditionalComment)">
            <summary>
            If conditional comments handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="htmlConditionalComment">Conditional comment</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.EndIfConditionalCommentHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlConditionalCommentType)">
            <summary>
            End If conditional comments handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="type">End If conditional comment type</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.StartTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Start tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">HTML tag</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.EndTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            End tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">HTML tag</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.TextHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Text handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="text">Text</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.EmbeddedCodeHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Embedded code handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="code">Code</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.TemplateTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.String,System.String)">
            <summary>
            Template tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expression">Expression</param>
            <param name="startDelimiter">Start delimiter</param>
            <param name="endDelimiter">End delimiter</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.FlushBuffer">
            <summary>
            Flush a HTML minification buffer
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.TrimEndLastBufferItem">
            <summary>
            Removes all ending spaces in the last item of the HTML minification buffer
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.RemoveLastEndTagFromBuffer(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Removes a last end tag from the HTML minification buffer
            </summary>
            <param name="endTag">End tag</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.RemoveLastStartTagFromBuffer(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Removes a last start tag from the HTML minification buffer
            </summary>
            <param name="startTag">Start tag</param>
            <returns>Result of removing (true - has removed; false - has not removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.BuildAttributeViewModel(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Builds a attribute view model
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>String representation of the attribute</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ContainsRelExternalAttribute(System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.HtmlAttribute})">
            <summary>
            Determines whether a list of attributes contains the <code>rel</code> attribute with
            value, that equals to "external" or "alternate external"
            </summary>
            <param name="attributes">List of attributes</param>
            <returns>Result of check (true - contains; false - does not contain)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveAttributeQuotes(WebMarkupMin.Core.Parsers.HtmlAttribute,WebMarkupMin.Core.HtmlAttributeQuotesRemovalMode)">
            <summary>
            Checks whether it is possible to remove the attribute quotes
            </summary>
            <param name="attribute">Attribute</param>
            <param name="attributeQuotesRemovalMode">Removal mode of HTML attribute quotes</param>
            <returns>Result of check (true - can remove; false - cannot remove)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IsAttributeRedundant(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether the attribute is redundant
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check (true - is redundant; false - is not redundant)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IsJavaScriptTypeAttribute(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether attribute is the attribute <code>type</code> of
            tag <code>script</code>, that containing JavaScript code
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IsCssTypeAttribute(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether attribute is the attribute <code>type</code> of tag <code>link</code>
            or <code>style</code>, that containing CSS code
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IsCustomAttribute(WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether the attribute is custom
            </summary>
            <param name="attribute">Attribute</param>
            <returns>Result of check</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CleanAttributeValue(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Cleans a attribute value
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Processed attribute value</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanPreserveCase">
            <summary>
            Checks whether preserve case of tag and attribute names
            </summary>
            <returns>Result of check (true - can be preserved; false - can not be preserved)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveEmptyAttribute(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether remove an the attribute, that has empty value
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveXmlNamespaceAttribute(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether remove an the <code>xmlns</code> attribute
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.IsMetaContentTypeTag(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether the tag is a META content-type tag
            </summary>
            <param name="tag">Tag</param>
            <returns>Result of check (true - is META content-type tag; false - is not META content-type tag)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.UpgradeToMetaCharsetTag(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Upgrades a META content-type tag to the META charset tag
            </summary>
            <param name="tag">META content-type tag</param>
            <returns>META charset tag</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveWhitespaceBetweenNonIndependentTags(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove whitespace between non-independent tags
            </summary>
            <param name="firstTag">First tag</param>
            <param name="secondTag">Second tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveWhitespaceAfterEndNonIndependentTag(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove whitespace after end non-independent tag
            </summary>
            <param name="endTag">End tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveWhitespaceAfterEndNonIndependentTagByParentTag(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove whitespace after end non-independent tag by parent tag
            </summary>
            <param name="endTag">End tag</param>
            <param name="parentTag">Parent tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveSafeOptionalEndTag(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove an the safe optional end tag
            </summary>
            <param name="optionalEndTag">Optional end tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveOptionalEndTagByNextTag(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove an the optional end tag
            </summary>
            <param name="optionalEndTag">Optional end tag</param>
            <param name="nextTag">Next tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveOptionalEndTagByParentTag(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove an the optional end tag
            </summary>
            <param name="optionalEndTag">Optional end tag</param>
            <param name="parentTag">Parent tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanRemoveTagWithoutContent(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether remove an the tag, that has empty content
            </summary>
            <param name="tag">Tag</param>
            <returns>Result of check (true - can be removed; false - can not be removed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanMinifyWhitespace(WebMarkupMin.Core.Parsers.HtmlTag)">
            <summary>
            Checks whether to minify whitespaces in text content of tag
            </summary>
            <param name="tag">Tag</param>
            <returns>Result of check (true - can minify whitespaces; false - can not minify whitespaces)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ProcessEmbeddedScriptContent(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.String)">
            <summary>
            Processes a embedded script content
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="content">Embedded script content</param>
            <param name="contentType">Content type (MIME type) of the script</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ProcessEmbeddedStyleContent(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.String)">
            <summary>
            Processes a embedded style content
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="content">Embedded style content</param>
            <param name="contentType">Content type (MIME type) of the style</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ProcessInlineScriptContent(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Processes a inline script content
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attribute">Attribute</param>
            <returns>Processed inline script content</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ProcessInlineStyleContent(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Processes a inline style content
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attribute">Attribute</param>
            <returns>Processed inline style content</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyKnockoutBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Minify a Knockout binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attribute">Attribute</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyKnockoutBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Minify a Knockout binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expressionCoordinates">Coordinates of expression</param>
            <param name="expression">Binding expression</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyKnockoutBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Minify a Knockout binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attributeCoordinates">Coordinates of attribute value</param>
            <param name="expressionCoordinates">Coordinates of expression</param>
            <param name="expression">Binding expression</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.ContainsAngularBindingExpression(System.String)">
            <summary>
            Determines whether a directive contains the Angular binding expression
            </summary>
            <param name="directiveName">Directive name</param>
            <returns>Result of check (true - contains; false - not contains)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.CanMinifyAngularBindingExpressionInAttribute(WebMarkupMin.Core.Parsers.HtmlTag,WebMarkupMin.Core.Parsers.HtmlAttribute)">
            <summary>
            Checks whether to minify the Angular binding expression in attribute
            </summary>
            <param name="tag">Tag</param>
            <param name="attribute">Attribute</param>
            <returns>Result of check (true - can minify expression; false - can not minify expression)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyAngularBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Minify a Angular binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expression">Binding expression</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyAngularBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Minify a Angular binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attributeCoordinates">Coordinates of attribute value</param>
            <param name="expression">Binding expression</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.MinifyAngularBindingExpression(WebMarkupMin.Core.Parsers.MarkupParsingContext,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Minify a Angular binding expression
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attributeCoordinates">Coordinates of attribute value</param>
            <param name="expressionCoordinates">Coordinates of expression</param>
            <param name="expression">Binding expression</param>
            <returns>Minified binding expression</returns>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.WriteError(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Writes a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source svgContent</param>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.WriteWarning(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Writes a information about the warning
            </summary>
            <param name="category">Warning category</param>
            <param name="message">Warning message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the warning occurred</param>
            <param name="columnNumber">Column number on which the warning occurred</param>
            <param name="sourceFragment">Fragment of source svgContent</param>
        </member>
        <member name="T:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel">
            <summary>
            HTML attribute view model
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.HasValue">
            <summary>
            Flag indicating whether the attribute has a value
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.HasQuotes">
            <summary>
            Flag indicating whether the attribute value enclosed in quotes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.IsEmpty">
            <summary>
            Flag indicating whether the attribute is empty
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.Empty">
            <summary>
            Represents a empty HTML attribute view model
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.GenericHtmlMinifier.HtmlAttributeViewModel.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs instance of HTML attribute view model
            </summary>
            <param name="name">Name</param>
            <param name="value">Value</param>
            <param name="hasQuotes">Flag indicating whether the attribute value enclosed in quotes</param>
        </member>
        <member name="T:WebMarkupMin.Core.HtmlAttributeQuotesRemovalMode">
            <summary>
            Removal mode of HTML attribute quotes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlAttributeQuotesRemovalMode.KeepQuotes">
            <summary>
            Keep quotes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlAttributeQuotesRemovalMode.Html4">
            <summary>
            Removes a quotes in accordance with standard HTML 4.X
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlAttributeQuotesRemovalMode.Html5">
            <summary>
            Removes a quotes in accordance with standard HTML5
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.HtmlEmptyTagRenderMode">
            <summary>
            Render mode of HTML empty tag
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlEmptyTagRenderMode.NoSlash">
            <summary>
            Without slash
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlEmptyTagRenderMode.Slash">
            <summary>
            With slash
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlEmptyTagRenderMode.SpaceAndSlash">
            <summary>
            With space and slash
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.HtmlMinificationSettings">
            <summary>
            HTML minification settings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinificationSettings.#ctor">
            <summary>
            Constructs instance of HTML minification settings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinificationSettings.#ctor(System.Boolean)">
            <summary>
            Constructs instance of HTML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of
            empty HTML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.HtmlMinifier">
            <summary>
            HTML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.HtmlMinifier._genericHtmlMinifier">
            <summary>
            Generic HTML minifier
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.#ctor(WebMarkupMin.Core.HtmlMinificationSettings,WebMarkupMin.Core.ICssMinifier,WebMarkupMin.Core.IJsMinifier,WebMarkupMin.Core.Loggers.ILogger)">
            <summary>
            Constructs instance of HTML minifier
            </summary>
            <param name="settings">HTML minification settings</param>
            <param name="cssMinifier">CSS minifier</param>
            <param name="jsMinifier">JS minifier</param>
            <param name="logger">Logger</param>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.Minify(System.String)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.Minify(System.String,System.String)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="fileContext">File context</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.Minify(System.String,System.Text.Encoding)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.HtmlMinifier.Minify(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Minify HTML content
            </summary>
            <param name="content">HTML content</param>
            <param name="fileContext">File context</param>
            <param name="encoding">Text encoding</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.ICodeMinifier">
            <summary>
            Defines interface of code minifier
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.ICodeMinifier.IsInlineCodeMinificationSupported">
            <summary>
            Gets a value indicating the minifier supports inline code minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.ICodeMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify CSS content
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.ICodeMinifier.Minify(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Minify CSS content
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.ICssMinifier">
            <summary>
            Defines interface of JS minifier
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.ICssMinifierFactory">
            <summary>
            Defines a interface of CSS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.ICssMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of CSS minifier
            </summary>
            <returns>Instance of CSS minifier</returns>
        </member>
        <member name="T:WebMarkupMin.Core.IJsMinifier">
            <summary>
            Defines interface of JS minifier
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.IJsMinifierFactory">
            <summary>
            Defines a interface of JS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.IJsMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of JS minifier
            </summary>
            <returns>Instance of JS minifier</returns>
        </member>
        <member name="M:WebMarkupMin.Core.IMarkupMinifier.Minify(System.String)">
            <summary>
            Minify markup
            </summary>
            <param name="content">Text content</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.IMarkupMinifier.Minify(System.String,System.String)">
            <summary>
            Minify markup
            </summary>
            <param name="content">Text content</param>
            <param name="fileContext">File context</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.IMarkupMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify markup
            </summary>
            <param name="content">Text content</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.IMarkupMinifier.Minify(System.String,System.Text.Encoding)">
            <summary>
            Minify markup
            </summary>
            <param name="content">Text content</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.IMarkupMinifier.Minify(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Minify markup
            </summary>
            <param name="content">Text content</param>
            <param name="fileContext">File context</param>
            <param name="encoding">Text encoding</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.KristensenCssMinifier">
            <summary>
            Minifier, which produces minifiction of CSS-code
            by using Mads Kristensen's CSS minifier
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.KristensenCssMinifier.IsInlineCodeMinificationSupported">
            <summary>
            Gets a value indicating the minifier supports inline code minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.KristensenCssMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Produces code minifiction of CSS content by using
            Mads Kristensen's CSS minifier
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.KristensenCssMinifier.Minify(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Produces code minifiction of CSS content by using
            Mads Kristensen's CSS minifier
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.KristensenCssMinifierFactory">
            <summary>
            Mads Kristensen's CSS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.KristensenCssMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of Mads Kristensen's CSS minifier
            </summary>
            <returns>Instance of Mads Kristensen's CSS minifier</returns>
        </member>
        <member name="T:WebMarkupMin.Core.MarkupMinificationException">
            <summary>
            The exception that is thrown when a markup minification is failed
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.MarkupMinificationException"/> class
            with a specified error message
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.MarkupMinificationException"/> class
            with a specified error message and reference to the inner exception that is
            the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.MarkupMinificationResult">
            <summary>
            Markup minification result
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MarkupMinificationResult.Statistics">
            <summary>
            Gets a minification statistics
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String)">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String,WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="statistics">Minification statistics</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
            <param name="statistics">Minification statistics</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
            <param name="warnings">List of the warnings</param>
        </member>
        <member name="M:WebMarkupMin.Core.MarkupMinificationResult.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Constructs instance of markup minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
            <param name="warnings">List of the warnings</param>
            <param name="statistics">Minification statistics</param>
        </member>
        <member name="T:WebMarkupMin.Core.MinificationErrorInfo">
            <summary>
            Minification error information
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationErrorInfo.Category">
            <summary>
            Gets a category name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationErrorInfo.Message">
            <summary>
            Gets a message
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationErrorInfo.LineNumber">
            <summary>
            Gets a line number on which the error occurred
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationErrorInfo.ColumnNumber">
            <summary>
            Gets a column number on which the error occurred
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationErrorInfo.SourceFragment">
            <summary>
            Gets a source fragment
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationErrorInfo.#ctor(System.String)">
            <summary>
            Constructs instance of error details
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationErrorInfo.#ctor(System.String,System.String)">
            <summary>
            Constructs instance of error details
            </summary>
            <param name="category">Category name</param>
            <param name="message">Message</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationErrorInfo.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Constructs instance of error details
            </summary>
            <param name="message">Message</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationErrorInfo.#ctor(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Constructs instance of error details
            </summary>
            <param name="category">Category name</param>
            <param name="message">Message</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="T:WebMarkupMin.Core.MinificationResultBase">
            <summary>
            Base class for the minification results
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationResultBase.MinifiedContent">
            <summary>
            Gets or sets a minified content
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationResultBase.Errors">
            <summary>
            Gets or sets a list of the errors
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationResultBase.Warnings">
            <summary>
            Gets or sets a list of the warnings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationResultBase.#ctor(System.String)">
            <summary>
            Constructs instance of minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationResultBase.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationResultBase.#ctor(System.String,System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo},System.Collections.Generic.IList{WebMarkupMin.Core.MinificationErrorInfo})">
            <summary>
            Constructs instance of minification result
            </summary>
            <param name="minifiedContent">Minified content</param>
            <param name="errors">List of the errors</param>
            <param name="warnings">List of the warnings</param>
        </member>
        <member name="T:WebMarkupMin.Core.MinificationStatistics">
            <summary>
            Minification statistics
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.MinificationStatistics._encoding">
            <summary>
            Type of text encoding
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.MinificationStatistics._startTime">
            <summary>
            Start time of minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.MinificationStatistics._endTime">
            <summary>
            End time of minification
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.OriginalSize">
            <summary>
            Gets a size of original code in bytes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.OriginalGzipSize">
            <summary>
            Gets a size of gzipped original code in bytes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.MinifiedSize">
            <summary>
            Gets a size of minified code in bytes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.MinifiedGzipSize">
            <summary>
            Gets a size of gzipped minified code in bytes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.CompressionRatio">
            <summary>
            Gets a compression ratio in percent
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.CompressionGzipRatio">
            <summary>
            Gets a compression ratio with additional GZip-compression in percent
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.SavedInBytes">
            <summary>
            Gets a number of bytes which has been saved off the original size
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.SavedGzipInBytes">
            <summary>
            Gets a number of bytes which has been saved off the gzipped size
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.SavedInPercent">
            <summary>
            Gets a percent of bytes which has been saved off the original size
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.SavedGzipInPercent">
            <summary>
            Gets a percent of bytes which has been saved off the gzipped size
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.MinificationStatistics.MinificationDuration">
            <summary>
            Gets a duration of minification in milliseconds
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.#ctor">
            <summary>
            Constructs instance of minification statistics
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.#ctor(System.Text.Encoding)">
            <summary>
            Constructs instance of minification statistics
            </summary>
            <param name="encoding">Type of text encoding</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.Init(System.String)">
            <summary>
            Initializes a minification statistics
            </summary>
            <param name="originalContent">Original content</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.End(System.String)">
            <summary>
            Finalizes a minification statistics
            </summary>
            <param name="minifiedContent">Minified content</param>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.CalculateCompressionRatio(System.Int64,System.Int64)">
            <summary>
            Calculatea a compression ratio
            </summary>
            <param name="originalSize">Original size</param>
            <param name="minifiedSize">Minified size</param>
            <returns>Compression ratio</returns>
        </member>
        <member name="M:WebMarkupMin.Core.MinificationStatistics.CalculateGzipSize(System.Byte[])">
            <summary>
            Calculatea a size of gzipped code
            </summary>
            <param name="bytes">Array of bytes</param>
            <returns>Size of gzipped code in bytes</returns>
        </member>
        <member name="T:WebMarkupMin.Core.NullCssMinifier">
            <summary>
            CSS null minifier (used as a placeholder)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.NullCssMinifier.IsInlineCodeMinificationSupported">
            <summary>
            Gets a value indicating the minifier supports inline code minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.NullCssMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Do not performs operations with CSS content
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.NullCssMinifier.Minify(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Do not performs operations with CSS content
            </summary>
            <param name="content">CSS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.NullCssMinifierFactory">
            <summary>
            Null CSS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.NullCssMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of Null CSS minifier
            </summary>
            <returns>Instance of Null CSS minifier</returns>
        </member>
        <member name="T:WebMarkupMin.Core.NullJsMinifier">
            <summary>
            JS null minifier (used as a placeholder)
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.NullJsMinifier.IsInlineCodeMinificationSupported">
            <summary>
            Gets a value indicating the minifier supports inline code minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.NullJsMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Do not performs operations with JS content
            </summary>
            <param name="content">JS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.NullJsMinifier.Minify(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Do not performs operations with JS content
            </summary>
            <param name="content">JS content</param>
            <param name="isInlineCode">Flag whether the content is inline code</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.NullJsMinifierFactory">
            <summary>
            Null JS minifier factory
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.NullJsMinifierFactory.CreateMinifier">
            <summary>
            Creates a instance of Null JS minifier
            </summary>
            <returns>Instance of Null JS minifier</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ResourceManager">
            <summary>
            Returns a cached ResourceManager instance used by this class
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.Culture">
            <summary>
            Overrides a current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.Common_EnumValueConversionFailed">
            <summary>
            Looks up a localized string similar to "Can not convert value '{0}' of enumeration type '{1}' to value of enumeration type '{2}'."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.Common_ValueIsEmpty">
            <summary>
            Looks up a localized string similar to "Value cannot be empty."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.Common_ValueIsNull">
            <summary>
            Looks up a localized string similar to "Value cannot be null."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_Category">
            <summary>
            Looks up a localized string similar to "Category"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_ColumnNumber">
            <summary>
            Looks up a localized string similar to "Column number"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_File">
            <summary>
            Looks up a localized string similar to "File"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_LineNumber">
            <summary>
            Looks up a localized string similar to "Line number"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_Message">
            <summary>
            Looks up a localized string similar to "Message"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorDetails_SourceFragment">
            <summary>
            Looks up a localized string similar to "Source fragment"
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_BindingExpressionMinificationFailed">
            <summary>
            Looks up a localized string similar to "During minification of {0} binding expression error has occurred: {1}."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_IfConditionalCommentNotDeclared">
            <summary>
            Looks up a localized string similar to "It is impossible to parse a &quot;End If conditional comment&quot;, because not declared &quot;If conditional..."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_InvalidCharactersInStartTag">
            <summary>
            Looks up a localized string similar to "In the start tag &lt;{0}&gt; found invalid characters."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_InvalidEndIfConditionalComment">
            <summary>
            Looks up a localized string similar to "Type of &quot;End If conditional comment&quot; does not match to the type of openened &quot;If conditional..."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_MarkupMinificationFailed">
            <summary>
            Looks up a localized string similar to "During minification of {0}-code error has occurred: &quot;{1}&quot;."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_MarkupParsingFailed">
            <summary>
            Looks up a localized string similar to "During parsing of {0}-code error has occurred."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_NotClosedConditionalComment">
            <summary>
            Looks up a localized string similar to "Remain not closed conditional comment."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_NotClosedTag">
            <summary>
            Looks up a localized string similar to "Tag &lt;{0}&gt; was not closed."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_StartTagNotDeclared">
            <summary>
            Looks up a localized string similar to "It is impossible to render a end tag &lt;/{0}&gt;, because  start tag &lt;{0}&gt; not declared."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_UnknownError">
            <summary>
            Looks up a localized string similar to "An unknown error has occurred."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.ErrorMessage_XmlDeclarationMinificationFailed">
            <summary>
            Looks up a localized string similar to "During minification of the XML declaration error has occurred."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.SuccesMessage_MarkupMinificationComplete">
            <summary>
            Looks up a localized string similar to "Minification of the {0} code has been completed successfully."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.WarningMessage_XmlBasedAttributeNotAllowed">
            <summary>
            Looks up a localized string similar to "XML-based attribute {0} not allowed here. If you want to use the XHTML syntax, it is better to use..."
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Resources.WarningMessage_XmlDeclarationNotAllowed">
            <summary>
            Looks up a localized string similar to "XML declaration not allowed here. If you want to use XHTML syntax, it is better to use the XHTML..."
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.WhitespaceMinificationMode">
            <summary>
            Mode of whitespace minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.WhitespaceMinificationMode.None">
            <summary>
            Keep whitespace
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.WhitespaceMinificationMode.Safe">
            <summary>
            Safe whitespace minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.WhitespaceMinificationMode.Medium">
            <summary>
            Medium whitespace minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.WhitespaceMinificationMode.Aggressive">
            <summary>
            Aggressive whitespace minification
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.XhtmlMinificationSettings">
            <summary>
            XHTML minification settings
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.XhtmlMinificationSettings.RenderEmptyTagsWithSpace">
            <summary>
            Gets or sets a Flag for whether to allow the inserting space
            before slash in empty tag
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinificationSettings.#ctor">
            <summary>
            Constructs instance of XHTML minification settings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinificationSettings.#ctor(System.Boolean)">
            <summary>
            Constructs instance of XHTML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of
            empty XHTML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.XhtmlMinifier">
            <summary>
            XHTML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XhtmlMinifier._genericHtmlMinifier">
            <summary>
            Generic HTML minifier
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.#ctor(WebMarkupMin.Core.XhtmlMinificationSettings,WebMarkupMin.Core.ICssMinifier,WebMarkupMin.Core.IJsMinifier,WebMarkupMin.Core.Loggers.ILogger)">
            <summary>
            Constructs instance of XHTML minifier
            </summary>
            <param name="cssMinifier">CSS minifier</param>
            <param name="jsMinifier">JS minifier</param>
            <param name="settings">XHTML minification settings</param>
            <param name="logger">Logger</param>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.Minify(System.String)">
            <summary>
            Minify XHTML content
            </summary>
            <param name="content">XHTML content</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.Minify(System.String,System.String)">
            <summary>
            Minify XHTML content
            </summary>
            <param name="content">XHTML content</param>
            <param name="fileContext">File context</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.Minify(System.String,System.Text.Encoding)">
            <summary>
            Minify XHTML content
            </summary>
            <param name="content">XHTML content</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify XHTML content
            </summary>
            <param name="content">XHTML content</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XhtmlMinifier.Minify(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Minify XHTML content
            </summary>
            <param name="content">XHTML content</param>
            <param name="fileContext">File context</param>
            <param name="encoding">Text encoding</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="T:WebMarkupMin.Core.XmlMinificationSettings">
            <summary>
            XML minification settings
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.XmlMinificationSettings.MinifyWhitespace">
            <summary>
            Gets or sets a flag for whether to minify whitespace
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.XmlMinificationSettings.RemoveXmlComments">
            <summary>
            Gets or sets a flag for whether to remove all XML comments
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.XmlMinificationSettings.RenderEmptyTagsWithSpace">
            <summary>
            Gets or sets a flag for whether to allow the inserting space
            before slash in empty tag
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.XmlMinificationSettings.CollapseTagsWithoutContent">
            <summary>
            Gets or sets a flag for whether to collapse tags without content
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinificationSettings.#ctor">
            <summary>
            Constructs instance of XML minification settings
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinificationSettings.#ctor(System.Boolean)">
            <summary>
            Constructs instance of XML minification settings
            </summary>
            <param name="useEmptyMinificationSettings">Initiates the creation of empty XML minification settings</param>
        </member>
        <member name="T:WebMarkupMin.Core.XmlMinifier">
            <summary>
            XML minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier.AVERAGE_COMPRESSION_RATIO">
            <summary>
            Average compression ratio
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._settings">
            <summary>
            XML minification settings
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._xmlParser">
            <summary>
            XML parser
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._result">
            <summary>
            Result of HTML minification
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._buffer">
            <summary>
            HTML minification buffer
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._currentNodeType">
            <summary>
            Current node type
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._currentText">
            <summary>
            Current text
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._xmlDeclarationBeforeText">
            <summary>
            Flag indicating, that before the text node was located the XML declaration
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._processingInstructionBeforeText">
            <summary>
            Flag indicating, that before the text node was located the processing instruction
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._doctypeBeforeText">
            <summary>
            Flag indicating, that before the text node was located the document type
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._startTagBeforeText">
            <summary>
            Flag indicating, that before the text node was located the start tag
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._endTagBeforeText">
            <summary>
            Flag indicating, that before the text node was located the end tag
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._emptyTagBeforeText">
            <summary>
            Flag indicating, that before the text node was located the empty tag
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._errors">
            <summary>
            List of the errors
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.XmlMinifier._minificationSynchronizer">
            <summary>
            Synchronizer of minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.#ctor(WebMarkupMin.Core.XmlMinificationSettings,WebMarkupMin.Core.Loggers.ILogger)">
            <summary>
            Constructs instance of XML minifier
            </summary>
            <param name="settings">XML minification settings</param>
            <param name="logger">Logger</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.Minify(System.String)">
            <summary>
            Minify XML content
            </summary>
            <param name="content">Text content</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.Minify(System.String,System.String)">
            <summary>
            Minify XML content
            </summary>
            <param name="content">Text content</param>
            <param name="fileContext">File context</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.Minify(System.String,System.Text.Encoding)">
            <summary>
            Minify XML content
            </summary>
            <param name="content">Text content</param>
            <param name="encoding">Text encoding</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.Minify(System.String,System.Boolean)">
            <summary>
            Minify XML content
            </summary>
            <param name="content">Text content</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.Minify(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Minify XML content
            </summary>
            <param name="content">XML content</param>
            <param name="fileContext">File context</param>
            <param name="encoding">Text encoding</param>
            <param name="generateStatistics">Flag for whether to allow generate minification statistics</param>
            <returns>Minification result</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.XmlDeclarationHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.XmlAttribute})">
            <summary>
            XML declaration handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.ProcessingInstructionHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.XmlAttribute})">
            <summary>
            Processing instruction handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="instructionName">Instruction name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.DoctypeDelegateHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Document type declaration handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="doctype">Document type declaration</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.CommentHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Comments handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="commentText">Comment text</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.CdataSectionHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            CDATA sections handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="cdataText">CDATA text</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.StartTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.XmlAttribute})">
            <summary>
            Start tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.EndTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            End tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.EmptyTagHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.XmlAttribute})">
            <summary>
            Empty tags handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.TextHandler(WebMarkupMin.Core.Parsers.MarkupParsingContext,System.String)">
            <summary>
            Text handler
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="text">Text</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.TransformLastStartTagToEmptyTag">
            <summary>
            Transform a last start tag to empty tag
            </summary>
            <returns>Result of transforming (true - has transformed; false - has not transformed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.RemoveLastWhitespaceBufferItems">
            <summary>
            Removes a last whitespace items from buffer
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.FlushBuffer">
            <summary>
            Flush a HTML minification buffer
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.RenderAttributes(System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.XmlAttribute})">
            <summary>
            Renders a list of attributes
            </summary>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.BuildAttributeString(WebMarkupMin.Core.Parsers.XmlAttribute)">
            <summary>
            Builds a string representation of the attribute
            </summary>
            <param name="attribute">XML attribute</param>
            <returns>String representation of the XML attribute</returns>
        </member>
        <member name="M:WebMarkupMin.Core.XmlMinifier.WriteError(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Writes a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="T:WebMarkupMin.Core.DouglasCrockford.JsMinificationException">
            <summary>
            The exception that is thrown when a minification of asset code by JSMin is failed
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.DouglasCrockford.JsMinificationException"/> class
            with a specified error message
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinificationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.DouglasCrockford.JsMinificationException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception</param>
            <param name="innerException">The exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.DouglasCrockford.JsMinifier">
            <summary>
            The JavaScript Minifier
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.DouglasCrockford.JsMinifier._minificationSynchronizer">
            <summary>
            Synchronizer of minification
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Minify(System.String)">
            <summary>
            Removes a comments and unnecessary whitespace from JavaScript code
            </summary>
            <param name="content">JavaScript content</param>
            <returns>Minified JavaScript content</returns>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.IsAlphanum(System.Int32)">
            <summary>
            Returns a true if the character is a letter, digit, underscore, dollar sign, or non-ASCII character
            </summary>
            <param name="c">The character</param>
            <returns>Result of check</returns>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Get">
            <summary>
            Returns a next character from input stream. Watch out for lookahead.
            If the character is a control character, translate it to a space or linefeed.
            </summary>
            <returns>The character</returns>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Peek">
            <summary>
            Gets a next character without getting it
            </summary>
            <returns>The character</returns>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Next">
            <summary>
            Gets a next character, excluding comments.
            <code>Peek()</code> is used to see if a '/' is followed by a '/' or '*'.
            </summary>
            <returns>The character</returns>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Action(System.Int32)">
            <summary>
            Do something! What you do is determined by the argument:
            	1 - Output A. Copy B to A. Get the next B.
            	2 - Copy B to A. Get the next B. (Delete A).
            	3 - Get the next B. (Delete B).
            <code>Action</code> treats a string as a single character.
            Wow! <code>Action</code> recognizes a regular expression
            if it is preceded by <code>(</code> or , or <code>=</code>.
            </summary>
            <param name="d">Action type</param>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.InnerMinify">
            <summary>
            Copies a input to the output, deleting the characters which are insignificant to JavaScript.
            Comments will be removed. Tabs will be replaced with spaces.
            Carriage returns will be replaced with linefeeds. Most spaces and linefeeds will be removed.
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.DouglasCrockford.JsMinifier.Put(System.Int32)">
            <summary>
            Puts a character to output stream
            </summary>
            <param name="c">The character</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.AngularHelpers">
            <summary>
            Angular helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.AngularHelpers._prefixRegex">
            <summary>
            Regular expression for working with the Angular directive prefixes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.AngularHelpers._ngClassDirectiveRegex">
            <summary>
            Regular expression for working with the Angular class directive
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.AngularHelpers._ngCommentDirectiveRegex">
            <summary>
            Regular expression for working with the Angular comment directive
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.AngularHelpers._specialCharsRegex">
            <summary>
            Regular expression for working with special characters
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.NormalizeDirectiveName(System.String)">
            <summary>
            Normalizes a directive name
            </summary>
            <param name="directiveName">Directive name</param>
            <returns>Normalized directive name</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.ToCamelCase(System.String)">
            <summary>
            Converts a string value to camel case
            </summary>
            <param name="value">String value</param>
            <returns>Processed string value</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.IsClassDirective(System.String)">
            <summary>
            Checks whether the class is the Angular class directive
            </summary>
            <param name="className">Class name</param>
            <returns>Result of check (true - is class directive; false - is not class directive)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.ParseClassDirective(System.String,WebMarkupMin.Core.Helpers.AngularHelpers.DirectiveNameDelegate,WebMarkupMin.Core.Helpers.AngularHelpers.ExpressionDelegate,WebMarkupMin.Core.Helpers.AngularHelpers.SemicolonDelegate)">
            <summary>
            Parses a Angular class directive
            </summary>
            <param name="className">Class name</param>
            <param name="directiveNameHandler">Directive name handler</param>
            <param name="expressionHandler">Binding expression handler</param>
            <param name="semicolonHandler">Semicolon handler</param>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.IsCommentDirective(System.String)">
            <summary>
            Checks whether the comment is the Angular comment directive
            </summary>
            <param name="commentText">Comment text</param>
            <returns>Result of check (true - is comment directive; false - is not comment directive)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.AngularHelpers.ParseCommentDirective(System.String,WebMarkupMin.Core.Helpers.AngularHelpers.DirectiveNameDelegate,WebMarkupMin.Core.Helpers.AngularHelpers.ExpressionDelegate)">
            <summary>
            Parses a Angular comment directive
            </summary>
            <param name="commentText">Comment text</param>
            <param name="directiveNameHandler">Directive name handler</param>
            <param name="expressionHandler">Binding expression handler</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.AngularHelpers.DirectiveNameDelegate">
            <summary>
            Angular directive name delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="originalDirectiveName">Original directive name</param>
            <param name="normalizedDirectiveName">Normalized directive name</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.AngularHelpers.ExpressionDelegate">
            <summary>
            Angular binding expression delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expression">Binding expression</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.AngularHelpers.SemicolonDelegate">
            <summary>
            Semicolon delegate
            </summary>
            <param name="context">Markup parsing context</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers">
            <summary>
            HTML attribute type helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._booleanAttributes">
            <summary>
            List of boolean attributes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithHrefAttribute">
            <summary>
            List of tags with href attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithSrcAttribute">
            <summary>
            List of tags with src attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithCiteAttribute">
            <summary>
            List of tags with cite attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithLongdescAttribute">
            <summary>
            List of tags with longdesc attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._uriBasedParams">
            <summary>
            URI based params
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithWidthAttribute">
            <summary>
            List of tags with width attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithHeightAttribute">
            <summary>
            List of tags with height attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithBorderAttribute">
            <summary>
            List of tags with border attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithSizeAttribute">
            <summary>
            List of tags with size attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithMaxAttribute">
            <summary>
            List of tags with max attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithMinAttribute">
            <summary>
            List of tags with min attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithValueAttribute">
            <summary>
            List of tags with value attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers._tagsWithCharoffAttribute">
            <summary>
            List of tags with charoff attribute
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers.IsBooleanAttribute(System.String)">
            <summary>
            Checks whether the attribute is boolean
            </summary>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <returns>Result of check (true - boolean; false - not boolean)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers.IsNumericAttribute(System.String,System.String)">
            <summary>
            Checks whether the attribute is numeric
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <returns>Result of check (true - numeric; false - not numeric)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers.IsUriBasedAttribute(System.String,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.HtmlAttribute})">
            <summary>
            Checks whether the attribute is URI-based
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <param name="attributes">List of attributes</param>
            <returns>Result of check (true - URI-based; false - not URI-based)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers.IsEventAttribute(System.String)">
            <summary>
            Checks whether the attribute is event
            </summary>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <returns>Result of check (true - event; false - not event)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlAttributeTypeHelpers.IsXmlBasedAttribute(System.String)">
            <summary>
            Checks whether the attribute is XML-based
            </summary>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <returns>Result of check (true - XML-based; false - not XML-based)</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers">
            <summary>
            HTML tag flags helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._htmlTags">
            <summary>
            List of HTML tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._invisibleTags">
            <summary>
            List of invisible tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._emptyTags">
            <summary>
            List of empty tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._blockTags">
            <summary>
            List of block tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._inlineTags">
            <summary>
            List of inline tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._inlineBlockTags">
            <summary>
            List of inline-block tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._nonIndependentTags">
            <summary>
            List of non-independent tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._optionalTags">
            <summary>
            List of tags, that can be omitted
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._tagsWithEmbeddedCode">
            <summary>
            List of the tags, that can contain embedded code
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers._xmlBasedTags">
            <summary>
            List of the XML-based tags
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsHtmlTag(System.String)">
            <summary>
            Checks whether the tag is HTML
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - HTML; false - not HTML)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsInvisibleTag(System.String)">
            <summary>
            Checks whether the tag is invisible
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - invisible; false - not invisible)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsEmptyTag(System.String)">
            <summary>
            Checks whether the tag is empty
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - empty; false - not empty)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsBlockTag(System.String)">
            <summary>
            Checks whether the tag is block
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - block; false - not block)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsInlineTag(System.String)">
            <summary>
            Checks whether the tag is inline
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - inline; false - not inline)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsInlineBlockTag(System.String)">
            <summary>
            Checks whether the tag is inline-block
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - inline-block; false - not inline-block)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsNonIndependentTag(System.String)">
            <summary>
            Checks whether the tag is non-independent
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - non-independent; false - independent)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsOptionalTag(System.String)">
            <summary>
            Checks whether the tag, that can be omitted
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - tag is optional; false - tag is required)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsTagWithEmbeddedCode(System.String)">
            <summary>
            Checks whether the tag can contain embedded code
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - can contain embedded code; false - cannot contain embedded code)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.HtmlTagFlagsHelpers.IsXmlBasedTag(System.String)">
            <summary>
            Checks whether the tag is XML-based
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Result of check (true - is XML-based; false - is not XML-based)</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.JsonHelpers">
            <summary>
            JSON helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.JsonHelpers._valueInCurlyBracesRegex">
            <summary>
            Regular expression for working with curly braces
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.JsonHelpers.WrapStringInCurlyBraces(System.String)">
            <summary>
            Wraps a string value in curly braces
            </summary>
            <param name="value">String value</param>
            <returns>Wrapped value</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.JsonHelpers.UnwrapStringInCurlyBraces(System.String)">
            <summary>
            Unwraps a string value in curly braces
            </summary>
            <param name="value">String value</param>
            <returns>Unwrapped value</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.KnockoutHelpers">
            <summary>
            Knockout helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.KnockoutHelpers._koBeginContainerlessCommentRegex">
            <summary>
            Regular expression for working with the Knockout begin containerless comment
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.KnockoutHelpers._koEndContainerlessCommentRegex">
            <summary>
            Regular expression for working with the Knockout end containerless comment
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.KnockoutHelpers.IsBeginContainerlessComment(System.String)">
            <summary>
            Checks whether the comment is the Knockout begin containerless comment
            </summary>
            <param name="commentText">Comment text</param>
            <returns>Result of check (true - is begin containerless comment; false - is not begin containerless comment)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.KnockoutHelpers.ParseBeginContainerlessComment(System.String,WebMarkupMin.Core.Helpers.KnockoutHelpers.ExpressionDelegate)">
            <summary>
            Parses a Knockout begin containerless comment
            </summary>
            <param name="commentText">Comment text</param>
            <param name="expressionHandler">Binding expression handler</param>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.KnockoutHelpers.IsEndContainerlessComment(System.String)">
            <summary>
            Checks whether the comment is the Knockout end containerless comment
            </summary>
            <param name="commentText">Comment text</param>
            <returns>Result of check (true - is end containerless comment; false - is not end containerless comment)</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.KnockoutHelpers.ExpressionDelegate">
            <summary>
            Knockout binding expression delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expression">Binding expression</param>
        </member>
        <member name="T:WebMarkupMin.Core.Helpers.TemplateTagHelpers">
            <summary>
            Template tag helpers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.TemplateTagHelpers.CURLY_BRACKET_TAG_PATTERN">
            <summary>
            Curly bracket tag pattern
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.TemplateTagHelpers.SQUARE_BRACKET_TAG_PATTERN">
            <summary>
            Square bracket tag pattern
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.TemplateTagHelpers.ES6_STRING_INTERPOLATION_PATTERN">
            <summary>
            ES6 string interpolation pattern
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.TemplateTagHelpers._templateTagFirstChars">
            <summary>
            Array of template tag first characters
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Helpers.TemplateTagHelpers._templateTagRegex">
            <summary>
            Regular expression for working with the template tags
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.TemplateTagHelpers.ContainsTag(System.String)">
            <summary>
            Determines whether a markup contains the template tags
            </summary>
            <param name="content">Content</param>
            <returns>Result of check (true - contains; false - not contains)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Helpers.TemplateTagHelpers.ParseMarkup(System.String,WebMarkupMin.Core.Parsers.HtmlParsingHandlers.TemplateTagDelegate,WebMarkupMin.Core.Parsers.HtmlParsingHandlers.TextDelegate)">
            <summary>
            Parses a markup of template
            </summary>
            <param name="content">Markup of template</param>
            <param name="templateTagHandler">Template tags delegate</param>
            <param name="textHandler">Text delegate</param>
        </member>
        <member name="T:WebMarkupMin.Core.Loggers.ILogger">
            <summary>
            Interface of logger
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.ILogger.Error(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.ILogger.Warn(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the warning
            </summary>
            <param name="category">Warning category</param>
            <param name="message">Warning message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the warning occurred</param>
            <param name="columnNumber">Column number on which the warning occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.ILogger.Debug(System.String,System.String,System.String)">
            <summary>
            Logs a debug information
            </summary>
            <param name="category">Debug category</param>
            <param name="message">Debug message</param>
            <param name="filePath">File path</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.ILogger.Info(System.String,System.String,System.String,WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Logs a information
            </summary>
            <param name="category">Information category</param>
            <param name="message">Information message</param>
            <param name="filePath">File path</param>
            <param name="statistics">Minification statistics</param>
        </member>
        <member name="T:WebMarkupMin.Core.Loggers.LogCategoryConstants">
            <summary>
            Log category constants
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Loggers.LoggerBase">
            <summary>
            Base class for the loggers
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.LoggerBase.Error(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.LoggerBase.Warn(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the warning
            </summary>
            <param name="category">Warning category</param>
            <param name="message">Warning message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the warning occurred</param>
            <param name="columnNumber">Column number on which the warning occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.LoggerBase.Debug(System.String,System.String,System.String)">
            <summary>
            Logs a debug information
            </summary>
            <param name="category">Debug category</param>
            <param name="message">Debug message</param>
            <param name="filePath">File path</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.LoggerBase.Info(System.String,System.String,System.String,WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Logs a information
            </summary>
            <param name="category">Information category</param>
            <param name="message">Information message</param>
            <param name="statistics">Minification statistics</param>
            <param name="filePath">File path</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.NullLogger.Error(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.NullLogger.Warn(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the warning
            </summary>
            <param name="category">Warning category</param>
            <param name="message">Warning message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the warning occurred</param>
            <param name="columnNumber">Column number on which the warning occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.NullLogger.Debug(System.String,System.String,System.String)">
            <summary>
            Logs a debug information
            </summary>
            <param name="category">Debug category</param>
            <param name="message">Debug message</param>
            <param name="filePath">File path</param>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.NullLogger.Info(System.String,System.String,System.String,WebMarkupMin.Core.MinificationStatistics)">
            <summary>
            Logs a information
            </summary>
            <param name="category">Information category</param>
            <param name="message">Information message</param>
            <param name="filePath">File path</param>
            <param name="statistics">Minification statistics</param>
        </member>
        <member name="T:WebMarkupMin.Core.Loggers.ThrowExceptionLogger">
            <summary>
            Logger, which throws exceptions when errors found
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Loggers.ThrowExceptionLogger.Error(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Logs a information about the error
            </summary>
            <param name="category">Error category</param>
            <param name="message">Error message</param>
            <param name="filePath">File path</param>
            <param name="lineNumber">Line number on which the error occurred</param>
            <param name="columnNumber">Column number on which the error occurred</param>
            <param name="sourceFragment">Fragment of source code</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlAttribute">
            <summary>
            HTML attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttribute._encodingCharsWithDoubleQuote">
            <summary>
            Array of encoding chars with double quote
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttribute._encodingCharsWithSingleQuote">
            <summary>
            Array of encoding chars with single quote
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttribute._value">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttribute._hasValue">
            <summary>
            Flag indicating whether the HTML attribute has a value
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.Name">
            <summary>
            Gets a name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.NameInLowercase">
            <summary>
            Gets a name in lowercase
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.Value">
            <summary>
            Gets or sets a value
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.HasValue">
            <summary>
            Gets a flag indicating whether the HTML attribute has a value
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.Type">
            <summary>
            Gets a type
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.NameCoordinates">
            <summary>
            Gets a coordinates of name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlAttribute.ValueCoordinates">
            <summary>
            Gets a coordinates of value
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlAttribute.#ctor(System.String,System.String,System.String,WebMarkupMin.Core.Parsers.HtmlAttributeType)">
            <summary>
            Constructs instance of HTML attribute
            </summary>
            <param name="name">Name</param>
            <param name="nameInLowercase">Name in lowercase</param>
            <param name="value">Value</param>
            <param name="type">Type</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlAttribute.#ctor(System.String,System.String,System.String,WebMarkupMin.Core.Parsers.HtmlAttributeType,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates)">
            <summary>
            Constructs instance of HTML attribute
            </summary>
            <param name="name">Name</param>
            <param name="nameInLowercase">Name in lowercase</param>
            <param name="value">Value</param>
            <param name="type">Type</param>
            <param name="nameCoordinates">Coordinates of name</param>
            <param name="valueCoordinates">Coordinates of value</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlAttribute.HtmlAttributeDecode(System.String)">
            <summary>
            Converts a string that has been HTML-encoded into a decoded string
            </summary>
            <param name="value">The string to decode</param>
            <returns>The decoded string</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlAttribute.HtmlAttributeEncode(System.String,WebMarkupMin.Core.Parsers.HtmlAttributeQuotesType)">
            <summary>
            Converts a string to an HTML-encoded string
            </summary>
            <param name="value">The string to encode</param>
            <param name="attributeQuotesType">HTML attribute quotes type</param>
            <returns>The encoded string</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlAttributeQuotesType">
            <summary>
            HTML attribute quotes types
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttributeQuotesType.Double">
            <summary>
            Double quotes
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlAttributeQuotesType.Single">
            <summary>
            Single quotes
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlAttributeType">
            <summary>
            HTML attribute types
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlConditionalComment">
            <summary>
            HTML conditional comment
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlConditionalComment.Expression">
            <summary>
            Conditional expression
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlConditionalComment.Type">
            <summary>
            Conditional comment type
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlConditionalComment.#ctor(System.String,WebMarkupMin.Core.Parsers.HtmlConditionalCommentType)">
            <summary>
            Constructs instance of HTML conditional comment
            </summary>
            <param name="expression">Conditional expression</param>
            <param name="type">Conditional comment type</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlConditionalCommentType">
            <summary>
            HTML conditional comment types
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlNodeType">
            <summary>
            HTML node types
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParser">
            <summary>
            HTML parser
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._innerContext">
            <summary>
            Inner markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._context">
            <summary>
            Markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._handlers">
            <summary>
            HTML parsing handlers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._tagStack">
            <summary>
            Stack of tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._htmlTagFlagsCache">
            <summary>
            Cache of the flags of HTML tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._customHtmlTagFlagsCache">
            <summary>
            Cache of the flags of custom HTML tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._tagWithEmbeddedRegexCache">
            <summary>
            Cache of the tag with embedded code regular expressions
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._conditionalCommentStack">
            <summary>
            Stack of conditional comments
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._conditionalCommentOpened">
            <summary>
            Flag for whether the conditional comment is open
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._xmlTagStack">
            <summary>
            Stack of XML-based tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlParser._parsingSynchronizer">
            <summary>
            Synchronizer of parsing
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.#ctor(WebMarkupMin.Core.Parsers.HtmlParsingHandlers)">
            <summary>
            Constructs instance of HTML parser
            </summary>
            <param name="handlers">HTML parsing handlers</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.Parse(System.String)">
            <summary>
            Parses HTML content
            </summary>
            <param name="content">HTML content</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessXmlDeclaration">
            <summary>
            Process a XML declaration
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessDoctype">
            <summary>
            Process a doctype declaration
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessComment">
            <summary>
            Process a HTML comments
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessHiddenIfComment">
            <summary>
            Process a hidden If conditional comments
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessHiddenEndIfComment">
            <summary>
            Process a hidden End If conditional comment
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessRevealedIfComment">
            <summary>
            Process a revealed If conditional comment
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessRevealedEndIfComment">
            <summary>
            Process a revealed End If conditional comment
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessRevealedValidatingIfComment">
            <summary>
            Process a revealed validating If conditional comments
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessRevealedValidatingEndIfComment">
            <summary>
            Process a revealed validating End If conditional comments
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessStartTag">
            <summary>
            Process a start tag
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessEndTag">
            <summary>
            Process a end tag
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessEmbeddedCode">
            <summary>
            Process a embedded code
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ProcessText">
            <summary>
            Process a text
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseIfConditionalComment(System.String,WebMarkupMin.Core.Parsers.HtmlConditionalCommentType)">
            <summary>
            Parses a If conditional comment
            </summary>
            <param name="expression">Conditional expression</param>
            <param name="type">Conditional comment type</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseEndIfConditionalComment(WebMarkupMin.Core.Parsers.HtmlConditionalCommentType)">
            <summary>
            Parses a End If conditional comment
            </summary>
            <param name="type">Conditional comment type</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseStartTag(System.String,System.String,System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.Boolean)">
            <summary>
            Parses a start tag
            </summary>
            <param name="tagName">Tag name</param>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <param name="attributesString">String representation of the attribute list</param>
            <param name="attributesCoordinates">Attributes coordinates</param>
            <param name="isEmptyTag">Flag that tag is empty</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseAttributes(System.String,System.String,WebMarkupMin.Core.Parsers.HtmlTagFlags,System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates)">
            <summary>
            Parses a attributes
            </summary>
            <param name="tagName">Tag name</param>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <param name="tagFlags">Tag flags</param>
            <param name="attributesString">String representation of the attribute list</param>
            <param name="attributesCoordinates">Attributes coordinates</param>
            <returns>List of attributes</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseEndTag">
            <summary>
            Parses a end tag
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.ParseEndTag(System.String,System.String)">
            <summary>
            Parses a end tag
            </summary>
            <param name="tagName">Tag name</param>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.GetTagFlagsByName(System.String)">
            <summary>
            Gets a HTML tag flags by tag name
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <returns>Tag flags</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParser.GetAttributeType(System.String,WebMarkupMin.Core.Parsers.HtmlTagFlags,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.HtmlAttribute})">
            <summary>
            Gets a HTML attribute type
            </summary>
            <param name="tagNameInLowercase">Tag name in lowercase</param>
            <param name="tagFlags">Tag flags</param>
            <param name="attributeNameInLowercase">Attribute name in lowercase</param>
            <param name="attributes">List of attributes</param>
            <returns>Attribute type</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingException">
            <summary>
            The exception that is thrown when a parsing of HTML content is failed
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message and reference to the inner exception that is
            the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message, node coordinates and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message, line number, column number and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">SourceFragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message, node coordinates, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlParsingException.#ctor(System.String,System.Int32,System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.HtmlParsingException"/> class
            with a specified error message, line number, column number, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers">
            <summary>
            HTML parsing handlers
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.XmlDeclaration">
            <summary>
            XML declaration
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.Doctype">
            <summary>
            Document type declaration handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.Comment">
            <summary>
            Comments handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.IfConditionalComment">
            <summary>
            If conditional comments handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EndIfConditionalComment">
            <summary>
            End If conditional comments handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.StartTag">
            <summary>
            Start tags handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EndTag">
            <summary>
            End tags handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.Text">
            <summary>
            Text handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EmbeddedCode">
            <summary>
            Embedded code handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.TemplateTag">
            <summary>
            Template tags handler
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.XmlDeclarationDelegate">
            <summary>
            XML declaration delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="xmlDeclaration">XML declaration</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.DoctypeDelegate">
            <summary>
            Document type declaration delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="doctype">Document type declaration</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.CommentDelegate">
            <summary>
            Comments delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="comment">Comment text</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.IfConditionalCommentDelegate">
            <summary>
            If conditional comments delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="htmlConditionalComment">Conditional comment</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EndIfConditionalCommentDelegate">
            <summary>
            End If conditional comments delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="type">Conditional comment type</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.StartTagDelegate">
            <summary>
            Start tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">HTML tag</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EndTagDelegate">
            <summary>
            End tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tag">HTML tag</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.TextDelegate">
            <summary>
            Text delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="text">Text</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.EmbeddedCodeDelegate">
            <summary>
            Embedded code delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="code">Code</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlParsingHandlers.TemplateTagDelegate">
            <summary>
            Template tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="expression">Expression</param>
            <param name="startDelimiter">Start delimiter</param>
            <param name="endDelimiter">End delimiter</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlTag">
            <summary>
            HTML tag
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlTag.Name">
            <summary>
            Gets a name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlTag.NameInLowercase">
            <summary>
            Gets a name in lowercase
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlTag.Attributes">
            <summary>
            Gets a list of attributes
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.HtmlTag.Flags">
            <summary>
            Gets a flags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTag.Empty">
            <summary>
            Represents a empty HTML tag
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlTag.#ctor(System.String,System.String,WebMarkupMin.Core.Parsers.HtmlTagFlags)">
            <summary>
            Constructs instance of HTML tag
            </summary>
            <param name="name">Name</param>
            <param name="nameInLowercase">Name in lowercase</param>
            <param name="flags">Flags</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.HtmlTag.#ctor(System.String,System.String,System.Collections.Generic.IList{WebMarkupMin.Core.Parsers.HtmlAttribute},WebMarkupMin.Core.Parsers.HtmlTagFlags)">
            <summary>
            Constructs instance of HTML tag
            </summary>
            <param name="name">Name</param>
            <param name="nameInLowercase">Name in lowercase</param>
            <param name="attributes">List of attributes</param>
            <param name="flags">Flags</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.HtmlTagFlags">
            <summary>
            HTML tag flags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.None">
            <summary>
            No flags are set
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Invisible">
            <summary>
            Tag is invisible
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Empty">
            <summary>
            Tag is empty
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Block">
            <summary>
            Tag is block
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Inline">
            <summary>
            Tag is inline
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.InlineBlock">
            <summary>
            Tag is inline-block
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.NonIndependent">
            <summary>
            Tag is non-independent
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Optional">
            <summary>
            Tag, that can be omitted
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.EmbeddedCode">
            <summary>
            Tag can contain embedded code
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Xml">
            <summary>
            Tag is XML-based
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.HtmlTagFlags.Custom">
            <summary>
            Tag is custom
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext">
            <summary>
            Inner markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext._sourceCode">
            <summary>
            Source code
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext._position">
            <summary>
            Current parsing position
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext._nodeCoordinates">
            <summary>
            Node coordinates
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.SourceCode">
            <summary>
            Gets a source code
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.Position">
            <summary>
            Gets or sets a current parsing position
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.Length">
            <summary>
            Gets a length of the source code
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.RemainderLength">
            <summary>
            Gets a length of the source code remainder
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.NodeCoordinates">
            <summary>
            Gets a node coordinates
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.#ctor(System.String)">
            <summary>
            Constructs instance of inner markup parsing context
            </summary>
            <param name="sourceCode">Source code</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.IncreasePosition(System.Int32)">
            <summary>
            Increases a current parsing position
            </summary>
            <param name="increment">Increment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.InnerMarkupParsingContext.GetSourceFragment">
            <summary>
            Gets a source fragment
            </summary>
            <returns>Source fragment</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.MarkupParsingContext">
            <summary>
            Markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.MarkupParsingContext._innerContext">
            <summary>
            Inner markup parsing context
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.MarkupParsingContext.SourceCode">
            <summary>
            Gets a source code
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.MarkupParsingContext.Position">
            <summary>
            Gets a current parsing position
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.MarkupParsingContext.Length">
            <summary>
            Gets a length of the source code
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.MarkupParsingContext.NodeCoordinates">
            <summary>
            Gets a node coordinates
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.MarkupParsingContext.#ctor(WebMarkupMin.Core.Parsers.InnerMarkupParsingContext)">
            <summary>
            Constructs instance of markup parsing context
            </summary>
            <param name="innerContext">Inner markup parsing context</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlAttribute">
            <summary>
            XML attribute
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlAttribute._encodingChars">
            <summary>
            Array of encoding chars
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlAttribute.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlAttribute.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructs instance of XML attribute
            </summary>
            <param name="name">Name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlAttribute.XmlAttributeDecode(System.String)">
            <summary>
            Converts a string that has been XML-encoded into a decoded string
            </summary>
            <param name="value">The string to decode</param>
            <returns>The decoded string</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlAttribute.XmlAttributeEncode(System.String)">
            <summary>
            Converts a string to an XML-encoded string
            </summary>
            <param name="value">The string to encode</param>
            <returns>The encoded string</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlNodeType">
            <summary>
            XML node types
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParser">
            <summary>
            XML parser
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlParser._innerContext">
            <summary>
            Inner markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlParser._context">
            <summary>
            Markup parsing context
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlParser._handlers">
            <summary>
            XML parsing handlers
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlParser._tagStack">
            <summary>
            Stack of tags
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Parsers.XmlParser._parsingSynchronizer">
            <summary>
            Synchronizer of parsing
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.#ctor(WebMarkupMin.Core.Parsers.XmlParsingHandlers)">
            <summary>
            Constructs instance of XML parser
            </summary>
            <param name="handlers">XML parsing handlers</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.Parse(System.String)">
            <summary>
            Parses XML content
            </summary>
            <param name="content">XML content</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessProcessingInstruction">
            <summary>
            Process a XML declaration and processing instructions
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessDoctype">
            <summary>
            Process a doctype declaration
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessComment">
            <summary>
            Process a XML comments
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessCdataSection">
            <summary>
            Process a CDATA sections
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessStartTag">
            <summary>
            Process a start tag
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessEndTag">
            <summary>
            Process a end tag
            </summary>
            <returns>Result of processing (true - is processed; false - is not processed)</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ProcessText">
            <summary>
            Process a text
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.ParseAttributes(System.String)">
            <summary>
            Parses a attributes
            </summary>
            <param name="attributesString">String representation of the attribute list</param>
            <returns>List of attributes</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.IsTagFirstChar(System.Char)">
            <summary>
            Checks whether the character is valid first character of XML tag name
            </summary>
            <param name="value">Character value</param>
            <returns>Result of check (true - valid; false - not valid)</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParser.StackedXmlTag">
            <summary>
            Stacked XML tag
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParser.StackedXmlTag.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParser.StackedXmlTag.Coordinates">
            <summary>
            Coordinates of tag
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParser.StackedXmlTag.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates)">
            <summary>
            Constructs instance of stacked XML tag
            </summary>
            <param name="name">Name</param>
            <param name="coordinates">Coordinates of tag</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingException">
            <summary>
            The exception that is thrown when a parsing of XML content is failed
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message and reference to the inner exception that is
            the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message, node coordinates and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message, line number, column number and source fragment
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">SourceFragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message, node coordinates, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="M:WebMarkupMin.Core.Parsers.XmlParsingException.#ctor(System.String,System.Int32,System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WebMarkupMin.Core.Parsers.XmlParsingException"/> class
            with a specified error message, line number, column number, source fragment
            and reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">Error message that explains the reason for the exception</param>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
            <param name="sourceFragment">Source fragment</param>
            <param name="innerException">Exception that is the cause of the current exception</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers">
            <summary>
            XML parsing handlers
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.XmlDeclaration">
            <summary>
            XML declaration handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.ProcessingInstruction">
            <summary>
            Processing instruction handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.Doctype">
            <summary>
            Document type declaration handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.Comment">
            <summary>
            Comments handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.CdataSection">
            <summary>
            CDATA sections handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.StartTag">
            <summary>
            Start tags handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.EndTag">
            <summary>
            End tags handler
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.EmptyTag">
            <summary>
            Empty tags delegate
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Parsers.XmlParsingHandlers.Text">
            <summary>
            Text handler
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.XmlDeclarationDelegate">
            <summary>
            XML declaration delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.ProcessingInstructionDelegate">
            <summary>
            Processing instruction delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="instructionName">Instruction name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.DoctypeDelegate">
            <summary>
            Document type declaration delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="doctype">Document type declaration</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.CommentDelegate">
            <summary>
            Comments delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="comment">Comment text</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.CdataSectionDelegate">
            <summary>
            CDATA sections delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="cdataText">CDATA text</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.StartTagDelegate">
            <summary>
            Start tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.EndTagDelegate">
            <summary>
            End tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.EmptyTagDelegate">
            <summary>
            Empty tags delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="tagName">Tag name</param>
            <param name="attributes">List of attributes</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.XmlParsingHandlers.TextDelegate">
            <summary>
            Text delegate
            </summary>
            <param name="context">Markup parsing context</param>
            <param name="text">Text</param>
        </member>
        <member name="T:WebMarkupMin.Core.Parsers.CommonRegExps">
            <summary>
            Common regular expressions
            </summary>
        </member>
        <member name="T:WebMarkupMin.Core.Utilities.CharExtensions">
            <summary>
            Extensions for Char
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.SourceCodeNavigator._nextLineBreakRegex">
            <summary>
            Regular expression for working with a next line break
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.SourceCodeNavigator._previousLineBreakRegex">
            <summary>
            Regular expression for working with a previous line break
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.FindNextLineBreak(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds a next line break
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="startPosition">Position in the input string that defines the leftmost
            position to be searched</param>
            <param name="lineBreakPosition">Position of line break</param>
            <param name="lineBreakLength">Length of line break</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.FindNextLineBreak(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds a next line break
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="startPosition">Position in the input string that defines the leftmost
            position to be searched</param>
            <param name="length">Number of characters in the substring to include in the search</param>
            <param name="lineBreakPosition">Position of line break</param>
            <param name="lineBreakLength">Length of line break</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.FindPreviousLineBreak(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds a previous line break
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="startPosition">Position in the input string that defines the leftmost
            position to be searched</param>
            <param name="lineBreakPosition">Position of line break</param>
            <param name="lineBreakLength">Length of line break</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateLineBreakCount(System.String,System.Int32@,System.Int32@)">
            <summary>
            Calculates a line break count
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="lineBreakCount">Number of line breaks</param>
            <param name="charRemainderCount">Number of characters left</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateLineBreakCount(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculates a line break count
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="fragmentStartPosition">Start position of fragment</param>
            <param name="lineBreakCount">Number of line breaks</param>
            <param name="charRemainderCount">Number of characters left</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateLineBreakCount(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculates a line break count
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="fragmentStartPosition">Start position of fragment</param>
            <param name="fragmentLength">Length of fragment</param>
            <param name="lineBreakCount">Number of line breaks</param>
            <param name="charRemainderCount">Number of characters left</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateNodeCoordinates(System.String,System.Int32)">
            <summary>
            Calculates a node coordinates
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="nodePosition">Current node position</param>
            <returns>Node coordinates</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.GetSourceFragment(System.String,System.Int32,System.Byte,System.Int32)">
            <summary>
            Gets a source fragment
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="nodePosition">Current node position</param>
            <param name="tabSize">Number of spaces in the tab</param>
            <param name="maxFragmentLength">Maximum length of the source fragment</param>
            <returns>Source fragment</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.GetSourceFragment(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.Byte,System.Int32)">
            <summary>
            Gets a source fragment
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="tabSize">Number of spaces in the tab</param>
            <param name="maxFragmentLength">Maximum length of the source fragment</param>
            <returns>Source fragment</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateCutPositions(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculates a cut positions
            </summary>
            <param name="line">Line content</param>
            <param name="columnNumber">Column number</param>
            <param name="maxFragmentLength">Maximum length of the source fragment</param>
            <param name="fragmentStartPosition">Start position of source fragment</param>
            <param name="fragmentLength">Length of source fragment</param>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.FormatSourceCodeLine(System.String,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.Int32,System.Int32,System.Int32,System.Byte)">
            <summary>
            Formats a line of source code
            </summary>
            <param name="line">Line content</param>
            <param name="nodeCoordinates">Node coordinates</param>
            <param name="lineNumberSize">Number of symbols in the line number caption</param>
            <param name="fragmentStartPosition">Start position of source fragment</param>
            <param name="fragmentLength">Length of source fragment</param>
            <param name="tabSize">Number of spaces in the tab</param>
            <returns>Formatted line</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateAbsoluteNodeCoordinates(WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates)">
            <summary>
            Calculates a absolute node coordinates
            </summary>
            <param name="baseNodeCoordinates">Base node coordinates</param>
            <param name="relativeNodeCoordinates">Relative node coordinates</param>
            <returns>Absolute node coordinates</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateAbsoluteNodeCoordinates(WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.String)">
            <summary>
            Calculates a absolute node coordinates
            </summary>
            <param name="baseNodeCoordinates">Base node coordinates</param>
            <param name="additionalContent">Additional content</param>
            <returns>Absolute node coordinates</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.CalculateAbsoluteNodeCoordinates(WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates,System.Int32,System.Int32)">
            <summary>
            Calculates a absolute node coordinates
            </summary>
            <param name="baseNodeCoordinates">Base node coordinates</param>
            <param name="lineBreakCount">Number of line breaks</param>
            <param name="charRemainderCount">Number of characters left</param>
            <returns>Absolute node coordinates</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNavigator.GetCurrentLine(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets a current line content
            </summary>
            <param name="sourceCode">Source code</param>
            <param name="currentPosition">Current position</param>
            <param name="startLinePosition">Start position of line</param>
            <param name="endLinePosition">End position of line</param>
            <returns>Line content</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates">
            <summary>
            Source code node coordinates
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates._lineNumber">
            <summary>
            Line number
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates._columnNumber">
            <summary>
            Column number
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates.LineNumber">
            <summary>
            Gets or sets a line number
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates.ColumnNumber">
            <summary>
            Gets or sets a column number
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates.Empty">
            <summary>
            Represents a node coordinates that has line number and column number values set to zero.
            </summary>
        </member>
        <member name="P:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates.IsEmpty">
            <summary>
            Gets a value indicating whether this node coordinates is empty
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.SourceCodeNodeCoordinates.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs instance of source code node coordinates
            </summary>
            <param name="lineNumber">Line number</param>
            <param name="columnNumber">Column number</param>
        </member>
        <member name="T:WebMarkupMin.Core.Utilities.StringBuilderExtensions">
            <summary>
            Extensions for StringBuilder
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.StringBuilderExtensions._formatPlaceholderRegExp">
            <summary>
            Regular expression for format placeholder
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder)">
            <summary>
            Appends the default line terminator to the end of the current System.Text.StringBuilder object
            </summary>
            <param name="source">Object StringBuilder</param>
            <returns>Object StringBuilder</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderExtensions.AppendFormatLine(System.Text.StringBuilder,System.String,System.Object[])">
            <summary>
            Appends the string returned by processing a composite format string, which
            contains zero or more format items, with default line terminator to this instance.
            Each format item is replaced by the string representation of a corresponding
            argument in a parameter array.
            </summary>
            <param name="source">Object StringBuilder</param>
            <param name="format">A composite format string</param>
            <param name="args">An array of objects to format</param>
            <returns>Object StringBuilder</returns>
        </member>
        <member name="T:WebMarkupMin.Core.Utilities.StringBuilderPool">
            <summary>
            Pool of string builders
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.StringBuilderPool.MAX_BUILDER_CAPACITY">
            <summary>
            Maximum capacity of builder
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.StringBuilderPool.BUILDER_COUNT_PER_PROCESSOR">
            <summary>
            Number of builders per processor
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.StringBuilderPool._firstBuilder">
            <summary>
            First builder
            </summary>
            <remarks>The first builder is stored in a dedicated field, because we expect
            to be able to satisfy most requests from it.</remarks>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.StringBuilderPool._builders">
            <summary>
            List of the remaining builders
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderPool.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderPool.GetBuilder">
            <summary>
            Gets a instance of string builder from the pool
            </summary>
            <returns>Instance of string builder</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderPool.GetBuilder(System.Int32)">
            <summary>
            Gets a instance of string builder with at least the given capacity from the pool
            </summary>
            <remarks>If the capacity is less than or equal to our maximum capacity, then return builder from the pool.
            Otherwise create a new string builder, that will just get discarded when released.</remarks>
            <param name="capacity">Capacity of string builder</param>
            <returns>Instance of string builder</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringBuilderPool.ReleaseBuilder(System.Text.StringBuilder)">
            <summary>
            Returns a instance of string builder to the pool
            </summary>
            <param name="builder">Instance of string builder</param>
        </member>
        <member name="T:WebMarkupMin.Core.Utilities.StringExtensions">
            <summary>
            Extensions for String
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringExtensions.TabsToSpaces(System.String,System.Int32)">
            <summary>
            Replaces tabs by specified number of spaces
            </summary>
            <param name="source">String value</param>
            <param name="tabSize">Number of spaces in tab</param>
            <returns>Processed string value</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringExtensions.CustomStartsWith(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Determines whether the beginning of this string instance matches the specified string
            when compared using the specified comparison option
            </summary>
            <param name="source">The source string</param>
            <param name="value">The string to compare</param>
            <param name="startIndex">The search starting position</param>
            <param name="comparisonType">One of the enumeration values that determines how
            this string and value are compared</param>
            <returns>true if the value parameter matches the beginning of this string; otherwise, false</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringExtensions.IgnoreCaseEquals(System.String,System.String)">
            <summary>
            Determines a equality of two strings with ignoring case
            </summary>
            <param name="source">The source string</param>
            <param name="value">The string to compare</param>
            <returns>true if the value of the value parameter is the same as this string; otherwise, false</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.StringExtensions.TryGetChar(System.String,System.Int32,System.Char@)">
            <summary>
            Gets a character at the specified index from the string.
            A return value indicates whether the receiving succeeded.
            </summary>
            <param name="source">The source string</param>
            <param name="index">The zero-based index of the character</param>
            <param name="result">When this method returns, contains the character from the string,
            if the receiving succeeded, or null character if the receiving failed.
            The receiving fails if the index out of bounds.</param>
            <returns>true if the character was received successfully; otherwise, false</returns>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.Utils._otherWhitespaceChars">
            <summary>
            Array of other whitespace characters
            </summary>
        </member>
        <member name="F:WebMarkupMin.Core.Utilities.Utils._endingSemicolonWithSpacesRegex">
            <summary>
            Regular expression for working with ending semicolons
            </summary>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.GetEnumFromOtherEnum``2(``0)">
            <summary>
            Converts value of source enumeration type to value of destination enumeration type
            </summary>
            <typeparam name="TSource">Source enumeration type</typeparam>
            <typeparam name="TDest">Destination enumeration type</typeparam>
            <param name="value">Value of source enumeration type</param>
            <returns>Value of destination enumeration type</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.CollapseWhitespace(System.String)">
            <summary>
            Collapses a whitespace
            </summary>
            <param name="value">String value</param>
            <returns>String value without extra spaces</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.RemoveEndingSemicolon(System.String)">
            <summary>
            Removes a ending semicolon
            </summary>
            <param name="value">String value</param>
            <returns>String value without ending semicolon</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.RemovePrefixAndPostfix(System.String,System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Regex)">
            <summary>
            Removes a prefix and postfix
            </summary>
            <param name="value">String value</param>
            <param name="prefixRegex">Prefix regular expression</param>
            <param name="postfixRegex">Postfix regular expression</param>
            <returns>String value without prefix and postfix</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.RemoveByteOrderMark(System.String)">
            <summary>
            Removes a BOM from value content
            </summary>
            <param name="value">String value</param>
            <returns>String value without BOM</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.ContainsUppercaseCharacters(System.String)">
            <summary>
            Determines whether the value contains a upper case letters
            </summary>
            <param name="value">String value</param>
            <returns>true if the value contains an upper case letters; otherwise, false</returns>
        </member>
        <member name="M:WebMarkupMin.Core.Utilities.Utils.UnionHashSets``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Produces a set union of many sequences
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences</typeparam>
            <param name="sequences">Input sequences</param>
            <returns>An System.Collections.Generic.HashSet&lt;T&gt; that contains the elements from
            input sequences, excluding duplicates</returns>
        </member>
    </members>
</doc>
