{
  "Hosting": {
    //Set to "true" the settings below if your hosting uses a load balancer. It'll be used to determine whether the current request is HTTPS
    "UseHttpClusterHttps": false,
    "UseHttpXForwardedProto": false,

    //Use the setting below if your hosting doesn't use "X-FORWARDED-FOR" header to determine IP address.
    //In some cases server use other HTTP header. You can specify a custom HTTP header here. For example, CF-Connecting-IP, X-FORWARDED-PROTO, etc
    "ForwardedHttpHeader": "",

    //Use a reverse proxy server - more information you can find at: https://docs.microsoft.com/en-US/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-2.1
    "UseForwardedHeaders": false,

    //AllowedHosts, is used for host filtering to bind your app to specific hostnames
    "AllowedHosts": ""
  },

  "Grand": {
    //Enable if you want to see the full error in production environment. It's ignored (always enabled) in development environment
    "DisplayFullErrorStack": false,

    //Value of "Cache-Control" header value for static content
    "StaticFilesCacheControl": "public,max-age=604800",

    //Indicates whether to compress response (gzip by default)
    //You may want to disable it, for example, If you have an active IIS Dynamic Compression Module configured at the server level
    "UseResponseCompression": false,

    //This settings adds the following headers to all responses that pass
    //X-Content-Type-Options: nosniff
    //Strict-Transport-Security: max-age=31536000; includeSubDomains
    //X-Frame-Options: Deny
    //X-XSS-Protection: 1; mode=block
    //Referrer-Policy: strict-origin-when-cross-origin
    //Content-Security-Policy: object-src 'none'; form-action 'self'; frame-ancestors 'none'
    "UseDefaultSecurityHeaders": false,

    //Flag for whether to enable html minification
    "UseHtmlMinification": false,

    //Load url rewrite rules from external file AppData/UrlRewrite.xml
    "UseUrlRewrite": false,
    "UrlRewriteHttpsOptions": false,
    "UrlRewriteHttpsOptionsStatusCode": 303,
    "UrlRewriteHttpsOptionsPort": 443,
    "UrlRedirectToHttpsPermanent": false,

    //HTTP Strict Transport Security Protocol
    "UseHsts": false,

    //We recommend all ASP.NET Core web apps call HTTPS Redirection Middleware to redirect all HTTP requests to HTTPS
    "UseHttpsRedirection": false,
    "HttpsRedirectionRedirect": 308,
    "HttpsRedirectionHttpsPort": 443,

    //Enable the session-based TempData provider
    "UseSessionStateTempDataProvider": false,

    //Enable "RunOnAzureWebApps" if you run on Windows Azure Web Apps (not cloud services)
    "RunOnAzureWebApps": false,

    //Azure BLOB storage.
    //Specify your connection string, container name, end point for BLOB storage here
    "AzureBlobStorageConnectionString": "",
    "AzureBlobStorageContainerName": "",
    "AzureBlobStorageEndPoint": "",

    //Amazon Blob storage
    //<!--Available Region System Names can be found here http://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region -->
    "AmazonAwsAccessKeyId": "",
    "AmazonAwsSecretAccessKey": "",
    "AmazonBucketName": "",
    "AmazonRegion": "",
    "AmazonDistributionDomainName": "", //Domain name for cloudfront distribution

    ///Enable the Publish/Subscribe messaging with redis to manage memory cache on every server
    "RedisPubSubEnabled": false,
    "RedisPubSubConnectionString": "127.0.0.1:6379,allowAdmin=true",
    "RedisPubSubChannel": "channel",
    "PersistKeysToRedis": false,
    "PersistKeysToRedisUrl": "127.0.0.1:6379,allowAdmin=true,defaultDatabase=1",

    //A list of plugins to be ignored during start application - pattern
    "PluginSkipLoadingPattern": "",

    //For developers - more info you can find at https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/
    //https://github.com/dotnet/roslyn/wiki/Roslyn-Overview
    "UseRoslynScripts": false,

    //Gets or sets a value indicating for default cache time in minutes"
    "DefaultCacheTimeMinutes": 60,

    //Gets or sets a value indicating for cookie auth expires in hours - default 24 * 365 = 8760
    "CookieAuthExpires": 8760,

    //Gets or sets a value for cookie prefix - any changes will log out all of the customers
    "CookiePrefix": ".Grand.",

    //Gets or sets a value for cookie claim issuer - any changes will log out all of the customers
    "CookieClaimsIssuer": "grandnode",

    //CookieSecurePolicy.Always always sets the Secure flag
    //Always setting the Secure flag is the most restrictive and most secure option. 
    //This is the one you should be targeting if your production environment fully runs on HTTPS
    "CookieSecurePolicyAlways": false,

    //Gets or sets a value indicating whether mini profiler should be displayed in public store (used for debugging)
    "DisplayMiniProfilerInPublicStore": false,

    //A value indicating whether SEO friendly URLs with multiple languages are enabled
    "SeoFriendlyUrlsForLanguagesEnabled": false,
    "SeoFriendlyUrlsDefaultCode": "en",

    //A value indicating whether to load all search engine friendly names (slugs) on application startup
    "LoadAllUrlRecordsOnStartup": false,

    ///Enable minimal Progressive Web App.
    "EnableProgressiveWebApp": false,
    //CacheFirst = 0,
    //CacheFirstSafe = 1,
    //CacheFingerprinted = 2,
    //Minimal = 3,
    //NetworkFirst = 4
    "ServiceWorkerStrategy": 3,

    //Use my request localization culture
    "UseRequestLocalization": false,
    "DefaultRequestCulture": "en-US",
    //sample list
    "SupportedCultures": [ "en-US", "pl" ],
    //Indicates whether to ignore startup tasks
    "IgnoreStartupTasks": false,
    //Enable if you want to clear /Plugins/bin directory on application startup
    "ClearPluginShadowDirectoryOnStartup": true,
    //Enable if you want to copy plugin dll files to directory /Plugins/bin on application startup
    "PluginShadowCopy": true,
    //Indicates whether to ignore InstallUrlMiddleware
    "IgnoreInstallUrlMiddleware": false,
    //Indicates whether to ignore UsePoweredByMiddleware
    "IgnoreUsePoweredByMiddleware": false,
    //(Serilog) Request logging - The package includes middleware for smarter HTTP request logging. 
    "UseSerilogRequestLogging": false
  },
  "Api": {
    "Enabled": false,
    "UseSwagger": false,
    "SecretKey": "your private secret key",
    "ValidateIssuer": false,
    "ValidIssuer": "",
    "ValidateAudience": false,
    "ValidAudience": "",
    "ValidateLifetime": true,
    "ValidateIssuerSigningKey": true,
    "ExpiryInMinutes": 1440,
    //generate system model
    "SystemModel": true
  },
  "Serilog": {
    //"Using": [ "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Warning"
    }
    //,
    //"WriteTo": [
    //  {
    //   "Name": "File",
    //   "Args": { "path": "logs/log.txt" }
    //  }
    // ]
  }
}