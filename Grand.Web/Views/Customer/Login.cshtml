@model LoginModel
@using System.Net
@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] });
}
<div class="page login-page">
    <h2 class="generalTitle">@T("Account.Login.Welcome")</h2>
    <partial name="_ExternalAuthentication.Errors" />
    <div class="mb-2">
        <div class="row flex-md-row mt-3 mb-3">
            @* login main block *@
            <div class="col-lg-6 col-12">
                <div class="card">
                    <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                        <h5 class="card-header"><strong>@T("Account.Login.ReturningCustomer")</strong></h5>
                        <div class="card-body">
                            <div class="row">
                                <div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
                                <div class="col-12 form-group mb-0">
                                    @if (Model.UsernamesEnabled)
                                    {
                                        <div class="form-group row">
                                            <div class="col-lg-3 col-12">
                                                <label asp-for="Username" class="col-form-label">@T("Account.Login.Fields.UserName"):</label>
                                            </div>
                                            <div class="col-lg-9 col-12">
                                                <input asp-for="Username" class="form-control username" autofocus="autofocus" />
                                                <span asp-validation-for="Username"></span>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group row">
                                            <div class="col-lg-3 col-12">
                                                <label asp-for="Email" class="col-form-label">@T("Account.Login.Fields.Email"):</label>
                                            </div>
                                            <div class="col-lg-9 col-12">
                                                <input asp-for="Email" class="form-control email" autofocus="autofocus" />
                                                <span asp-validation-for="Email"></span>
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group row">
                                        <div class="col-lg-3 col-12">
                                            <label asp-for="Password" class="col-form-label">@T("Account.Login.Fields.Password"):</label>
                                        </div>
                                        <div class="col-lg-9 col-12">
                                            <input asp-for="Password" class="form-control password" />
                                            <span asp-validation-for="Password"></span>
                                        </div>
                                    </div>
                                    <div class="inputs d-flex flex-row">
                                        <label class="custom-control custom-checkbox">
                                            <input class="custom-control-input" asp-for="RememberMe" />
                                            <input class="custom-control-label" name="RememberMe" type="hidden" value="false">
                                            <span class="custom-control-label"></span>
                                            <span class="custom-control-description">@T("Account.Login.Fields.RememberMe")</span>
                                        </label>
                                        <span class="ml-3 forgot-password">
                                            <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                        </span>
                                    </div>
                                    @if (Model.DisplayCaptcha)
                                    {
                                        <div class="captcha-box">
                                            <captcha />
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="buttons">
                                <input class="btn btn-info login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            @* want some register? *@
            @if (Model.CheckoutAsGuest)
            {
                <div class="col-lg-6 col-12 new-wrapper checkout-as-guest-or-register-block mt-2">
                    <h5 class="pt-1">
                        <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                    </h5>
                    <div class="row text">
                        <div class="col-12">
                            @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                        </div>
                    </div>
                    <div class="buttons mt-1 areYouGuest">
                        <input type="button" class="btn btn-secondary checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                        <input type="button" class="btn btn-secondary register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                    </div>
                </div>
            }
            else
            {
                <div class="col-lg-6 col-12">
                    <div class="card-body register-block">
                        <h5><strong>@T("Account.Login.NewCustomer")</strong></h5>
                        <div class="text generalMarginSupporter">
                            @T("Account.Login.NewCustomerText")
                        </div>
                        <div class="buttons">
                            <input type="button" class="btn btn-secondary register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="external-authentication">
        @await Component.InvokeAsync("ExternalMethods")
    </div>
    <div class="row">
        <div class="col-12 mb-2">
            @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" })
        </div>
    </div>
</div>
