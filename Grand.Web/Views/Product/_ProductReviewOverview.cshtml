@model ProductReviewOverviewModel
@using System.Globalization
@{
    int ratingPercent = 0;
    if (Model.TotalReviews != 0)
    {
        ratingPercent = ((Model.RatingSum * 100) / Model.TotalReviews) / 5;
    }
}
@if (Model.AllowCustomerReviews)
{
    <div class="product-reviews-overview d-inline-flex align-items-center flex-wrap" @if (Model.TotalReviews > 0) { <text> itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating" </text> }>
        <div class="product-review-box d-inline-block">
            <div class="rating">
                <div class="rating-ghost">
                    &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;
                </div>
                <div class="rating-real" style="width: @(ratingPercent)%">
                    &#9733;&#9733;&#9733;&#9733;&#9733;
                </div>
            </div>
        </div>
        @if (Model.TotalReviews > 0)
        {
            <div class="product-review-links">
                <a class="btn btn-sm pr-0 review-scroll-button" href="#review-tab">
                    @Model.TotalReviews
                    @T("Reviews.Overview.Reviews")
                </a> 
            </div>
            @*hidden microdata info*@
        decimal ratingValue = ratingPercent / (decimal)20;
        <span itemprop="ratingValue" style="display: none;">@ratingValue.ToString("0.0", new CultureInfo("en-US"))</span>
            <span itemprop="reviewCount" style="display: none;">@Model.TotalReviews</span>
        }
        else
        { 
            <div class="product-no-reviews">
                <a class="btn btn-sm pr-0" href="@Url.RouteUrl("ProductReviews", new { productId = Model.ProductId })">@T("Reviews.Overview.First")</a>
            </div>
        }
    </div>
}