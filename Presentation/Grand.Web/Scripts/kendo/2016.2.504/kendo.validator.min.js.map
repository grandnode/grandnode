{"version":3,"sources":["kendo.validator.js"],"names":["f","define","$","undefined","resolveRules","element","name","resolvers","kendo","ui","validator","ruleResolvers","rules","extend","resolve","decode","value","replace","numberOfDecimalDigits","split","length","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","attr","idx","containers","invalidMsgRegExp","test","className","getAttribute","add","Validator","window","Widget","NS","INVALIDMSG","RegExp","INVALIDINPUT","VALIDINPUT","emailRegExp","urlRegExp","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","proxy","patternMatcher","pattern","matcher","input","selector","val","filter","hasAttribute","attributes","messages","init","options","that","this","resolved","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","events","required","min","max","step","email","url","date","dateCompare","checkbox","parseFloat","raise","decimals","Math","pow","floor","parseDate","validateOnBlur","destroy","off","errors","_submit","e","validate","stopPropagation","stopImmediatePropagation","preventDefault","_checkElement","state","validateInput","trigger","on","inputs","invalid","result","isValid","find","eq","valid","lbl","messageText","messageLabel","lblId","_checkValidity","_findMessageContainer","next","hide","removeAttr","_extractMessage","key","message","_decorateMessageContainer","replaceWith","insertAfter","show","toggleClass","hideMessages","locators","messageLocators","getElementsByTagName","locate","container","addClass","decorate","ruleKey","customMessage","isFunction","format","rule","error","results","push","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.validator.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.validator', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'validator',\n        name: 'Validator',\n        category: 'web',\n        description: 'The Validator offers an easy way to do a client-side form validation.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, NS = '.kendoValidator', INVALIDMSG = 'k-invalid-msg', invalidMsgRegExp = new RegExp(INVALIDMSG, 'i'), INVALIDINPUT = 'k-invalid', VALIDINPUT = 'k-valid', emailRegExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, urlRegExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i, INPUTSELECTOR = ':input:not(:button,[type=submit],[type=reset],[disabled],[readonly])', CHECKBOXSELECTOR = ':checkbox:not([disabled],[readonly])', NUMBERINPUTSELECTOR = '[type=number],[type=range]', BLUR = 'blur', NAME = 'name', FORM = 'form', NOVALIDATE = 'novalidate', proxy = $.proxy, patternMatcher = function (value, pattern) {\n                if (typeof pattern === 'string') {\n                    pattern = new RegExp('^(?:' + pattern + ')$');\n                }\n                return pattern.test(value);\n            }, matcher = function (input, selector, pattern) {\n                var value = input.val();\n                if (input.filter(selector).length && value !== '') {\n                    return patternMatcher(value, pattern);\n                }\n                return true;\n            }, hasAttribute = function (input, name) {\n                if (input.length) {\n                    return input[0].attributes[name] != null;\n                }\n                return false;\n            };\n        if (!kendo.ui.validator) {\n            kendo.ui.validator = {\n                rules: {},\n                messages: {}\n            };\n        }\n        function resolveRules(element) {\n            var resolvers = kendo.ui.validator.ruleResolvers || {}, rules = {}, name;\n            for (name in resolvers) {\n                $.extend(true, rules, resolvers[name].resolve(element));\n            }\n            return rules;\n        }\n        function decode(value) {\n            return value.replace(/&amp/g, '&amp;').replace(/&quot;/g, '\"').replace(/&#39;/g, '\\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n        }\n        function numberOfDecimalDigits(value) {\n            value = (value + '').split('.');\n            if (value.length > 1) {\n                return value[1].length;\n            }\n            return 0;\n        }\n        function parseHtml(text) {\n            if ($.parseHTML) {\n                return $($.parseHTML(text));\n            }\n            return $(text);\n        }\n        function searchForMessageContainer(elements, fieldName) {\n            var containers = $(), element, attr;\n            for (var idx = 0, length = elements.length; idx < length; idx++) {\n                element = elements[idx];\n                if (invalidMsgRegExp.test(element.className)) {\n                    attr = element.getAttribute(kendo.attr('for'));\n                    if (attr === fieldName) {\n                        containers = containers.add(element);\n                    }\n                }\n            }\n            return containers;\n        }\n        var Validator = Widget.extend({\n            init: function (element, options) {\n                var that = this, resolved = resolveRules(element), validateAttributeSelector = '[' + kendo.attr('validate') + '!=false]';\n                options = options || {};\n                options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n                options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n                Widget.fn.init.call(that, element, options);\n                that._errorTemplate = kendo.template(that.options.errorTemplate);\n                if (that.element.is(FORM)) {\n                    that.element.attr(NOVALIDATE, NOVALIDATE);\n                }\n                that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n                that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n                that._errors = {};\n                that._attachEvents();\n                that._isValidated = false;\n            },\n            events: [\n                'validate',\n                'change'\n            ],\n            options: {\n                name: 'Validator',\n                errorTemplate: '<span class=\"k-widget k-tooltip k-tooltip-validation\">' + '<span class=\"k-icon k-warning\"> </span> #=message#</span>',\n                messages: {\n                    required: '{0} is required',\n                    pattern: '{0} is not valid',\n                    min: '{0} should be greater than or equal to {1}',\n                    max: '{0} should be smaller than or equal to {1}',\n                    step: '{0} is not valid',\n                    email: '{0} is not valid email',\n                    url: '{0} is not valid URL',\n                    date: '{0} is not valid date',\n                    dateCompare: 'End date should be greater than or equal to the start date'\n                },\n                rules: {\n                    required: function (input) {\n                        var checkbox = input.filter('[type=checkbox]').length && !input.is(':checked'), value = input.val();\n                        return !(hasAttribute(input, 'required') && (value === '' || !value || checkbox));\n                    },\n                    pattern: function (input) {\n                        if (input.filter('[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]').filter('[pattern]').length && input.val() !== '') {\n                            return patternMatcher(input.val(), input.attr('pattern'));\n                        }\n                        return true;\n                    },\n                    min: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[min]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, val = kendo.parseFloat(input.val());\n                            return min <= val;\n                        }\n                        return true;\n                    },\n                    max: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[max]').length && input.val() !== '') {\n                            var max = parseFloat(input.attr('max')) || 0, val = kendo.parseFloat(input.val());\n                            return max >= val;\n                        }\n                        return true;\n                    },\n                    step: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[step]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, step = parseFloat(input.attr('step')) || 1, val = parseFloat(input.val()), decimals = numberOfDecimalDigits(step), raise;\n                            if (decimals) {\n                                raise = Math.pow(10, decimals);\n                                return Math.floor((val - min) * raise) % (step * raise) / Math.pow(100, decimals) === 0;\n                            }\n                            return (val - min) % step === 0;\n                        }\n                        return true;\n                    },\n                    email: function (input) {\n                        return matcher(input, '[type=email],[' + kendo.attr('type') + '=email]', emailRegExp);\n                    },\n                    url: function (input) {\n                        return matcher(input, '[type=url],[' + kendo.attr('type') + '=url]', urlRegExp);\n                    },\n                    date: function (input) {\n                        if (input.filter('[type^=date],[' + kendo.attr('type') + '=date]').length && input.val() !== '') {\n                            return kendo.parseDate(input.val(), input.attr(kendo.attr('format'))) !== null;\n                        }\n                        return true;\n                    }\n                },\n                validateOnBlur: true\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this.element.off(NS);\n            },\n            value: function () {\n                if (!this._isValidated) {\n                    return false;\n                }\n                return this.errors().length === 0;\n            },\n            _submit: function (e) {\n                if (!this.validate()) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    return false;\n                }\n                return true;\n            },\n            _checkElement: function (element) {\n                var state = this.value();\n                this.validateInput(element);\n                if (this.value() !== state) {\n                    this.trigger('change');\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                if (that.element.is(FORM)) {\n                    that.element.on('submit' + NS, proxy(that._submit, that));\n                }\n                if (that.options.validateOnBlur) {\n                    if (!that.element.is(INPUTSELECTOR)) {\n                        that.element.on(BLUR + NS, that._inputSelector, function () {\n                            that._checkElement($(this));\n                        });\n                        that.element.on('click' + NS, that._checkboxSelector, function () {\n                            that._checkElement($(this));\n                        });\n                    } else {\n                        that.element.on(BLUR + NS, function () {\n                            that._checkElement(that.element);\n                        });\n                        if (that.element.is(CHECKBOXSELECTOR)) {\n                            that.element.on('click' + NS, function () {\n                                that._checkElement(that.element);\n                            });\n                        }\n                    }\n                }\n            },\n            validate: function () {\n                var inputs;\n                var idx;\n                var result = false;\n                var length;\n                var isValid = this.value();\n                this._errors = {};\n                if (!this.element.is(INPUTSELECTOR)) {\n                    var invalid = false;\n                    inputs = this.element.find(this._inputSelector);\n                    for (idx = 0, length = inputs.length; idx < length; idx++) {\n                        if (!this.validateInput(inputs.eq(idx))) {\n                            invalid = true;\n                        }\n                    }\n                    result = !invalid;\n                } else {\n                    result = this.validateInput(this.element);\n                }\n                this.trigger('validate', { valid: result });\n                if (isValid !== result) {\n                    this.trigger('change');\n                }\n                return result;\n            },\n            validateInput: function (input) {\n                input = $(input);\n                this._isValidated = true;\n                var that = this, template = that._errorTemplate, result = that._checkValidity(input), valid = result.valid, className = '.' + INVALIDMSG, fieldName = input.attr(NAME) || '', lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function () {\n                        var element = $(this);\n                        if (element.filter('[' + kendo.attr('for') + ']').length) {\n                            return element.attr(kendo.attr('for')) === fieldName;\n                        }\n                        return true;\n                    })).hide(), messageText;\n                input.removeAttr('aria-invalid');\n                if (!valid) {\n                    messageText = that._extractMessage(input, result.key);\n                    that._errors[fieldName] = messageText;\n                    var messageLabel = parseHtml(template({ message: decode(messageText) }));\n                    var lblId = lbl.attr('id');\n                    that._decorateMessageContainer(messageLabel, fieldName);\n                    if (lblId) {\n                        messageLabel.attr('id', lblId);\n                    }\n                    if (!lbl.replaceWith(messageLabel).length) {\n                        messageLabel.insertAfter(input);\n                    }\n                    messageLabel.show();\n                    input.attr('aria-invalid', true);\n                } else {\n                    delete that._errors[fieldName];\n                }\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n                return valid;\n            },\n            hideMessages: function () {\n                var that = this, className = '.' + INVALIDMSG, element = that.element;\n                if (!element.is(INPUTSELECTOR)) {\n                    element.find(className).hide();\n                } else {\n                    element.next(className).hide();\n                }\n            },\n            _findMessageContainer: function (fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name, containers = $();\n                for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                    containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName('*'), fieldName));\n                }\n                for (name in locators) {\n                    containers = containers.add(locators[name].locate(this.element, fieldName));\n                }\n                return containers;\n            },\n            _decorateMessageContainer: function (container, fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name;\n                container.addClass(INVALIDMSG).attr(kendo.attr('for'), fieldName || '');\n                for (name in locators) {\n                    locators[name].decorate(container, fieldName);\n                }\n                container.attr('role', 'alert');\n            },\n            _extractMessage: function (input, ruleKey) {\n                var that = this, customMessage = that.options.messages[ruleKey], fieldName = input.attr(NAME);\n                customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                return kendo.format(input.attr(kendo.attr(ruleKey + '-msg')) || input.attr('validationMessage') || input.attr('title') || customMessage || '', fieldName, input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n            },\n            _checkValidity: function (input) {\n                var rules = this.options.rules, rule;\n                for (rule in rules) {\n                    if (!rules[rule].call(this, input)) {\n                        return {\n                            valid: false,\n                            key: rule\n                        };\n                    }\n                }\n                return { valid: true };\n            },\n            errors: function () {\n                var results = [], errors = this._errors, error;\n                for (error in errors) {\n                    results.push(errors[error]);\n                }\n                return results;\n            }\n        });\n        kendo.ui.plugin(Validator);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}