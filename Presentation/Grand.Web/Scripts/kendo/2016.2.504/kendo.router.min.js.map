{"version":3,"sources":["kendo.router.js"],"names":["f","define","$","undefined","absoluteURL","path","pathPrefix","regEx","RegExp","test","location","protocol","host","replace","hashDelimiter","bang","locationHash","href","indexOf","split","stripRoot","root","url","substr","length","fixHash","fixBang","kendo","window","CHANGE","BACK","SAME","support","history","CHECK_URL_INTERVAL","BROKEN_BACK_NAV","browser","msie","hashStrip","document","HistoryAdapter","Class","extend","back","setTimeout","forward","replaceLocation","PushStateAdapter","init","this","navigate","to","pushState","title","replaceState","normalize","current","pathname","search","change","callback","bind","stop","unbind","normalizeCurrent","options","fixedUrl","hash","hashBang","HashAdapter","_id","guid","prefix","fix","hashChange","on","_interval","setInterval","off","clearInterval","History","Observable","start","_started","adapter","createAdapter","historyLength","locations","proxy","silent","_navigate","backCalled","push","decodeURIComponent","trigger","call","_checkUrl","newLength","navigatingInExisting","prev","backButtonPressed","pop","jQuery","namedParamReplace","match","optional","routeToRegExp","route","ignoreCase","escapeRegExp","optionalParam","namedParam","splatParam","stripUrl","INIT","ROUTE_MISSING","Route","_callback","params","idx","queryStringParams","parseQueryStringParams","_back","exec","slice","apply","worksWith","Router","fn","routes","destroy","_urlChangedProxy","_sameProxy","_backProxy","initEventObject","that","sameProxy","_same","backProxy","e","urlChangedProxy","_urlChanged","same","preventDefault","noop","amd","a1","a2","a3"],"mappings":"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","file":"kendo.router.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.router', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'router',\n        name: 'Router',\n        category: 'framework',\n        description: 'The Router class is responsible for tracking the application state and navigating between the application states.',\n        depends: ['core'],\n        hidden: false\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, CHANGE = 'change', BACK = 'back', SAME = 'same', support = kendo.support, location = window.location, history = window.history, CHECK_URL_INTERVAL = 50, BROKEN_BACK_NAV = kendo.support.browser.msie, hashStrip = /^#*/, document = window.document;\n        function absoluteURL(path, pathPrefix) {\n            if (!pathPrefix) {\n                return path;\n            }\n            if (path + '/' === pathPrefix) {\n                path = pathPrefix;\n            }\n            var regEx = new RegExp('^' + pathPrefix, 'i');\n            if (!regEx.test(path)) {\n                path = pathPrefix + '/' + path;\n            }\n            return location.protocol + '//' + (location.host + '/' + path).replace(/\\/\\/+/g, '/');\n        }\n        function hashDelimiter(bang) {\n            return bang ? '#!' : '#';\n        }\n        function locationHash(hashDelimiter) {\n            var href = location.href;\n            if (hashDelimiter === '#!' && href.indexOf('#') > -1 && href.indexOf('#!') < 0) {\n                return null;\n            }\n            return href.split(hashDelimiter)[1] || '';\n        }\n        function stripRoot(root, url) {\n            if (url.indexOf(root) === 0) {\n                return url.substr(root.length).replace(/\\/\\//g, '/');\n            } else {\n                return url;\n            }\n        }\n        var HistoryAdapter = kendo.Class.extend({\n            back: function () {\n                if (BROKEN_BACK_NAV) {\n                    setTimeout(function () {\n                        history.back();\n                    });\n                } else {\n                    history.back();\n                }\n            },\n            forward: function () {\n                if (BROKEN_BACK_NAV) {\n                    setTimeout(function () {\n                        history.forward();\n                    });\n                } else {\n                    history.forward();\n                }\n            },\n            length: function () {\n                return history.length;\n            },\n            replaceLocation: function (url) {\n                location.replace(url);\n            }\n        });\n        var PushStateAdapter = HistoryAdapter.extend({\n            init: function (root) {\n                this.root = root;\n            },\n            navigate: function (to) {\n                history.pushState({}, document.title, absoluteURL(to, this.root));\n            },\n            replace: function (to) {\n                history.replaceState({}, document.title, absoluteURL(to, this.root));\n            },\n            normalize: function (url) {\n                return stripRoot(this.root, url);\n            },\n            current: function () {\n                var current = location.pathname;\n                if (location.search) {\n                    current += location.search;\n                }\n                return stripRoot(this.root, current);\n            },\n            change: function (callback) {\n                $(window).bind('popstate.kendo', callback);\n            },\n            stop: function () {\n                $(window).unbind('popstate.kendo');\n            },\n            normalizeCurrent: function (options) {\n                var fixedUrl, root = options.root, pathname = location.pathname, hash = locationHash(hashDelimiter(options.hashBang));\n                if (root === pathname + '/') {\n                    fixedUrl = root;\n                }\n                if (root === pathname && hash) {\n                    fixedUrl = absoluteURL(hash.replace(hashStrip, ''), root);\n                }\n                if (fixedUrl) {\n                    history.pushState({}, document.title, fixedUrl);\n                }\n            }\n        });\n        function fixHash(url) {\n            return url.replace(/^(#)?/, '#');\n        }\n        function fixBang(url) {\n            return url.replace(/^(#(!)?)?/, '#!');\n        }\n        var HashAdapter = HistoryAdapter.extend({\n            init: function (bang) {\n                this._id = kendo.guid();\n                this.prefix = hashDelimiter(bang);\n                this.fix = bang ? fixBang : fixHash;\n            },\n            navigate: function (to) {\n                location.hash = this.fix(to);\n            },\n            replace: function (to) {\n                this.replaceLocation(this.fix(to));\n            },\n            normalize: function (url) {\n                if (url.indexOf(this.prefix) < 0) {\n                    return url;\n                } else {\n                    return url.split(this.prefix)[1];\n                }\n            },\n            change: function (callback) {\n                if (support.hashChange) {\n                    $(window).on('hashchange.' + this._id, callback);\n                } else {\n                    this._interval = setInterval(callback, CHECK_URL_INTERVAL);\n                }\n            },\n            stop: function () {\n                $(window).off('hashchange.' + this._id);\n                clearInterval(this._interval);\n            },\n            current: function () {\n                return locationHash(this.prefix);\n            },\n            normalizeCurrent: function (options) {\n                var pathname = location.pathname, root = options.root;\n                if (options.pushState && root !== pathname) {\n                    this.replaceLocation(root + this.prefix + stripRoot(root, pathname));\n                    return true;\n                }\n                return false;\n            }\n        });\n        var History = kendo.Observable.extend({\n            start: function (options) {\n                options = options || {};\n                this.bind([\n                    CHANGE,\n                    BACK,\n                    SAME\n                ], options);\n                if (this._started) {\n                    return;\n                }\n                this._started = true;\n                options.root = options.root || '/';\n                var adapter = this.createAdapter(options), current;\n                if (adapter.normalizeCurrent(options)) {\n                    return;\n                }\n                current = adapter.current();\n                $.extend(this, {\n                    adapter: adapter,\n                    root: options.root,\n                    historyLength: adapter.length(),\n                    current: current,\n                    locations: [current]\n                });\n                adapter.change($.proxy(this, '_checkUrl'));\n            },\n            createAdapter: function (options) {\n                return support.pushState && options.pushState ? new PushStateAdapter(options.root) : new HashAdapter(options.hashBang);\n            },\n            stop: function () {\n                if (!this._started) {\n                    return;\n                }\n                this.adapter.stop();\n                this.unbind(CHANGE);\n                this._started = false;\n            },\n            change: function (callback) {\n                this.bind(CHANGE, callback);\n            },\n            replace: function (to, silent) {\n                this._navigate(to, silent, function (adapter) {\n                    adapter.replace(to);\n                    this.locations[this.locations.length - 1] = this.current;\n                });\n            },\n            navigate: function (to, silent) {\n                if (to === '#:back') {\n                    this.backCalled = true;\n                    this.adapter.back();\n                    return;\n                }\n                this._navigate(to, silent, function (adapter) {\n                    adapter.navigate(to);\n                    this.locations.push(this.current);\n                });\n            },\n            _navigate: function (to, silent, callback) {\n                var adapter = this.adapter;\n                to = adapter.normalize(to);\n                if (this.current === to || this.current === decodeURIComponent(to)) {\n                    this.trigger(SAME);\n                    return;\n                }\n                if (!silent) {\n                    if (this.trigger(CHANGE, { url: to })) {\n                        return;\n                    }\n                }\n                this.current = to;\n                callback.call(this, adapter);\n                this.historyLength = adapter.length();\n            },\n            _checkUrl: function () {\n                var adapter = this.adapter, current = adapter.current(), newLength = adapter.length(), navigatingInExisting = this.historyLength === newLength, back = current === this.locations[this.locations.length - 2] && navigatingInExisting, backCalled = this.backCalled, prev = this.current;\n                if (current === null || this.current === current || this.current === decodeURIComponent(current)) {\n                    return true;\n                }\n                this.historyLength = newLength;\n                this.backCalled = false;\n                this.current = current;\n                if (back && this.trigger('back', {\n                        url: prev,\n                        to: current\n                    })) {\n                    adapter.forward();\n                    this.current = prev;\n                    return;\n                }\n                if (this.trigger(CHANGE, {\n                        url: current,\n                        backButtonPressed: !backCalled\n                    })) {\n                    if (back) {\n                        adapter.forward();\n                    } else {\n                        adapter.back();\n                        this.historyLength--;\n                    }\n                    this.current = prev;\n                    return;\n                }\n                if (back) {\n                    this.locations.pop();\n                } else {\n                    this.locations.push(current);\n                }\n            }\n        });\n        kendo.History = History;\n        kendo.History.HistoryAdapter = HistoryAdapter;\n        kendo.History.HashAdapter = HashAdapter;\n        kendo.History.PushStateAdapter = PushStateAdapter;\n        kendo.absoluteURL = absoluteURL;\n        kendo.history = new History();\n    }(window.kendo.jQuery));\n    (function () {\n        var kendo = window.kendo, history = kendo.history, Observable = kendo.Observable, INIT = 'init', ROUTE_MISSING = 'routeMissing', CHANGE = 'change', BACK = 'back', SAME = 'same', optionalParam = /\\((.*?)\\)/g, namedParam = /(\\(\\?)?:\\w+/g, splatParam = /\\*\\w+/g, escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n        function namedParamReplace(match, optional) {\n            return optional ? match : '([^/]+)';\n        }\n        function routeToRegExp(route, ignoreCase) {\n            return new RegExp('^' + route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, namedParamReplace).replace(splatParam, '(.*?)') + '$', ignoreCase ? 'i' : '');\n        }\n        function stripUrl(url) {\n            return url.replace(/(\\?.*)|(#.*)/g, '');\n        }\n        var Route = kendo.Class.extend({\n            init: function (route, callback, ignoreCase) {\n                if (!(route instanceof RegExp)) {\n                    route = routeToRegExp(route, ignoreCase);\n                }\n                this.route = route;\n                this._callback = callback;\n            },\n            callback: function (url, back) {\n                var params, idx = 0, length, queryStringParams = kendo.parseQueryStringParams(url);\n                queryStringParams._back = back;\n                url = stripUrl(url);\n                params = this.route.exec(url).slice(1);\n                length = params.length;\n                for (; idx < length; idx++) {\n                    if (typeof params[idx] !== 'undefined') {\n                        params[idx] = decodeURIComponent(params[idx]);\n                    }\n                }\n                params.push(queryStringParams);\n                this._callback.apply(null, params);\n            },\n            worksWith: function (url, back) {\n                if (this.route.test(stripUrl(url))) {\n                    this.callback(url, back);\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        });\n        var Router = Observable.extend({\n            init: function (options) {\n                if (!options) {\n                    options = {};\n                }\n                Observable.fn.init.call(this);\n                this.routes = [];\n                this.pushState = options.pushState;\n                this.hashBang = options.hashBang;\n                this.root = options.root;\n                this.ignoreCase = options.ignoreCase !== false;\n                this.bind([\n                    INIT,\n                    ROUTE_MISSING,\n                    CHANGE,\n                    SAME\n                ], options);\n            },\n            destroy: function () {\n                history.unbind(CHANGE, this._urlChangedProxy);\n                history.unbind(SAME, this._sameProxy);\n                history.unbind(BACK, this._backProxy);\n                this.unbind();\n            },\n            start: function () {\n                var that = this, sameProxy = function () {\n                        that._same();\n                    }, backProxy = function (e) {\n                        that._back(e);\n                    }, urlChangedProxy = function (e) {\n                        that._urlChanged(e);\n                    };\n                history.start({\n                    same: sameProxy,\n                    change: urlChangedProxy,\n                    back: backProxy,\n                    pushState: that.pushState,\n                    hashBang: that.hashBang,\n                    root: that.root\n                });\n                var initEventObject = {\n                    url: history.current || '/',\n                    preventDefault: $.noop\n                };\n                if (!that.trigger(INIT, initEventObject)) {\n                    that._urlChanged(initEventObject);\n                }\n                this._urlChangedProxy = urlChangedProxy;\n                this._backProxy = backProxy;\n            },\n            route: function (route, callback) {\n                this.routes.push(new Route(route, callback, this.ignoreCase));\n            },\n            navigate: function (url, silent) {\n                kendo.history.navigate(url, silent);\n            },\n            replace: function (url, silent) {\n                kendo.history.replace(url, silent);\n            },\n            _back: function (e) {\n                if (this.trigger(BACK, {\n                        url: e.url,\n                        to: e.to\n                    })) {\n                    e.preventDefault();\n                }\n            },\n            _same: function () {\n                this.trigger(SAME);\n            },\n            _urlChanged: function (e) {\n                var url = e.url;\n                var back = e.backButtonPressed;\n                if (!url) {\n                    url = '/';\n                }\n                if (this.trigger(CHANGE, {\n                        url: e.url,\n                        params: kendo.parseQueryStringParams(e.url),\n                        backButtonPressed: back\n                    })) {\n                    e.preventDefault();\n                    return;\n                }\n                var idx = 0, routes = this.routes, route, length = routes.length;\n                for (; idx < length; idx++) {\n                    route = routes[idx];\n                    if (route.worksWith(url, back)) {\n                        return;\n                    }\n                }\n                if (this.trigger(ROUTE_MISSING, {\n                        url: url,\n                        params: kendo.parseQueryStringParams(url),\n                        backButtonPressed: back\n                    })) {\n                    e.preventDefault();\n                }\n            }\n        });\n        kendo.Router = Router;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}