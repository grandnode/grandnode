{"version":3,"sources":["kendo.splitter.js"],"names":["f","define","$","undefined","isPercentageSize","size","percentageUnitsRegex","test","isPixelSize","pxUnitsRegex","isFluid","calculateSize","total","output","parseInt","Math","floor","panePropertyAccessor","propertyName","triggersResize","pane","value","splitter","paneConfig","this","element","find","data","PANE","arguments","length","options","name","resize","PaneResizing","that","orientation","owner","_element","extend","HORIZONTAL","horizontalDefaults","verticalDefaults","_resizable","kendo","ui","Resizable","handle","_marker","hint","proxy","_createHint","start","_start","max","_max","min","_min","invalidClass","resizeend","_stop","window","keys","Widget","NS","EXPAND","COLLAPSE","CONTENTLOAD","ERROR","RESIZE","LAYOUTCHANGE","VERTICAL","MOUSEENTER","CLICK","MOUSELEAVE","FOCUSED","KPANE","PANECLASS","Splitter","init","isHorizontal","fn","call","wrapper","toLowerCase","_dimension","_keys","decrease","LEFT","UP","increase","RIGHT","DOWN","_resizeStep","guid","substring","_initPanes","resizing","triggerHandler","events","_addOverlays","_panes","append","_removeOverlays","children","remove","_attachEvents","on","_keydown","e","currentTarget","focus","addClass","removeClass","end","_togglePane","_arrowClick","document","_detachEvents","off","panes","destroy","key","keyCode","target","navigationKeys","ctrlKey","isResizing","_triggerAction","move","preventDefault","ENTER","panesConfig","each","i","nodeName","_initPane","config","attr","toggleClass","scrollable","ajaxRequest","url","contentUrl","isLocalUrl","jQuery","ajax","type","dataType","success","angular","elements","get","html","trigger","error","xhr","status","arrow","closest","is","prev","next","arrowType","parent","_updateSplitBar","splitbar","previousPane","nextPane","catIconIf","iconType","condition","draggable","resizable","prevCollapsible","collapsible","prevCollapsed","collapsed","nextCollapsible","nextCollapsed","removeAttr","_updateSplitBars","prevAll","first","nextAll","_removeSplitBars","_resize","sizedPanesWidth","sizedPanesCount","freeSizedPanes","freeSizePanesCount","freeSizePaneWidth","sum","alternateSizingProperty","positioningProperty","sizingDomProperty","lastNonCollapsedPane","splitBars","splitBarsCount","sizingProperty","totalSize","slice","after","css","position","top","collapsedSize","add","eq","filter","last","child","tagName","style","toggle","expand","collapse","_addPane","idx","paneElement","splice","appendTo","insertBefore","referencePane","index","insertAfter","plugin","mousePositioningProperty","prototype","press","delta","pressed","previousPaneConfig","nextPaneConfig","prevBoundary","nextBoundary","toPx","val","prevMinSize","prevMaxSize","nextMinSize","nextMaxSize","_maxPosition","_minPosition","ghostPosition","previousPaneNewSize","nextPaneNewSize","fluidPanesCount","ESC","amd","a1","a2","a3"],"mappings":"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","file":"kendo.splitter.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.splitter', ['kendo.resizable'], f);\n}(function () {\n    var __meta__ = {\n        id: 'splitter',\n        name: 'Splitter',\n        category: 'web',\n        description: 'The Splitter widget provides an easy way to create a dynamic layout of resizable and collapsible panes.',\n        depends: ['resizable']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, keys = kendo.keys, extend = $.extend, proxy = $.proxy, Widget = ui.Widget, pxUnitsRegex = /^\\d+(\\.\\d+)?px$/i, percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i, NS = '.kendoSplitter', EXPAND = 'expand', COLLAPSE = 'collapse', CONTENTLOAD = 'contentLoad', ERROR = 'error', RESIZE = 'resize', LAYOUTCHANGE = 'layoutChange', HORIZONTAL = 'horizontal', VERTICAL = 'vertical', MOUSEENTER = 'mouseenter', CLICK = 'click', PANE = 'pane', MOUSELEAVE = 'mouseleave', FOCUSED = 'k-state-focused', KPANE = 'k-' + PANE, PANECLASS = '.' + KPANE;\n        function isPercentageSize(size) {\n            return percentageUnitsRegex.test(size);\n        }\n        function isPixelSize(size) {\n            return pxUnitsRegex.test(size) || /^\\d+$/.test(size);\n        }\n        function isFluid(size) {\n            return !isPercentageSize(size) && !isPixelSize(size);\n        }\n        function calculateSize(size, total) {\n            var output = parseInt(size, 10);\n            if (isPercentageSize(size)) {\n                output = Math.floor(output * total / 100);\n            }\n            return output;\n        }\n        function panePropertyAccessor(propertyName, triggersResize) {\n            return function (pane, value) {\n                var paneConfig = this.element.find(pane).data(PANE);\n                if (arguments.length == 1) {\n                    return paneConfig[propertyName];\n                }\n                paneConfig[propertyName] = value;\n                if (triggersResize) {\n                    var splitter = this.element.data('kendo' + this.options.name);\n                    splitter.resize(true);\n                }\n            };\n        }\n        var Splitter = Widget.extend({\n            init: function (element, options) {\n                var that = this, isHorizontal;\n                Widget.fn.init.call(that, element, options);\n                that.wrapper = that.element;\n                isHorizontal = that.options.orientation.toLowerCase() != VERTICAL;\n                that.orientation = isHorizontal ? HORIZONTAL : VERTICAL;\n                that._dimension = isHorizontal ? 'width' : 'height';\n                that._keys = {\n                    decrease: isHorizontal ? keys.LEFT : keys.UP,\n                    increase: isHorizontal ? keys.RIGHT : keys.DOWN\n                };\n                that._resizeStep = 10;\n                that._marker = kendo.guid().substring(0, 8);\n                that._initPanes();\n                that.resizing = new PaneResizing(that);\n                that.element.triggerHandler('init' + NS);\n            },\n            events: [\n                EXPAND,\n                COLLAPSE,\n                CONTENTLOAD,\n                ERROR,\n                RESIZE,\n                LAYOUTCHANGE\n            ],\n            _addOverlays: function () {\n                this._panes().append('<div class=\\'k-splitter-overlay k-overlay\\' />');\n            },\n            _removeOverlays: function () {\n                this._panes().children('.k-splitter-overlay').remove();\n            },\n            _attachEvents: function () {\n                var that = this, orientation = that.options.orientation;\n                that.element.children('.k-splitbar-draggable-' + orientation).on('keydown' + NS, proxy(that._keydown, that)).on('mousedown' + NS, function (e) {\n                    e.currentTarget.focus();\n                }).on('focus' + NS, function (e) {\n                    $(e.currentTarget).addClass(FOCUSED);\n                }).on('blur' + NS, function (e) {\n                    $(e.currentTarget).removeClass(FOCUSED);\n                    if (that.resizing) {\n                        that.resizing.end();\n                    }\n                }).on(MOUSEENTER + NS, function () {\n                    $(this).addClass('k-splitbar-' + that.orientation + '-hover');\n                }).on(MOUSELEAVE + NS, function () {\n                    $(this).removeClass('k-splitbar-' + that.orientation + '-hover');\n                }).on('mousedown' + NS, proxy(that._addOverlays, that)).end().children('.k-splitbar').on('dblclick' + NS, proxy(that._togglePane, that)).children('.k-collapse-next, .k-collapse-prev').on(CLICK + NS, that._arrowClick(COLLAPSE)).end().children('.k-expand-next, .k-expand-prev').on(CLICK + NS, that._arrowClick(EXPAND)).end().end();\n                $(window).on('resize' + NS + that._marker, proxy(that.resize, that, false));\n                $(document).on('mouseup' + NS + that._marker, proxy(that._removeOverlays, that));\n            },\n            _detachEvents: function () {\n                var that = this;\n                that.element.children('.k-splitbar-draggable-' + that.orientation).off(NS).end().children('.k-splitbar').off('dblclick' + NS).children('.k-collapse-next, .k-collapse-prev, .k-expand-next, .k-expand-prev').off(NS);\n                $(window).off(NS + that._marker);\n                $(document).off(NS + that._marker);\n            },\n            options: {\n                name: 'Splitter',\n                orientation: HORIZONTAL,\n                panes: []\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this._detachEvents();\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n                kendo.destroy(this.element);\n                this.wrapper = this.element = null;\n            },\n            _keydown: function (e) {\n                var that = this, key = e.keyCode, resizing = that.resizing, target = $(e.currentTarget), navigationKeys = that._keys, increase = key === navigationKeys.increase, decrease = key === navigationKeys.decrease, pane;\n                if (increase || decrease) {\n                    if (e.ctrlKey) {\n                        pane = target[decrease ? 'next' : 'prev']();\n                        if (resizing && resizing.isResizing()) {\n                            resizing.end();\n                        }\n                        if (!pane[that._dimension]()) {\n                            that._triggerAction(EXPAND, pane);\n                        } else {\n                            that._triggerAction(COLLAPSE, target[decrease ? 'prev' : 'next']());\n                        }\n                    } else if (resizing) {\n                        resizing.move((decrease ? -1 : 1) * that._resizeStep, target);\n                    }\n                    e.preventDefault();\n                } else if (key === keys.ENTER && resizing) {\n                    resizing.end();\n                    e.preventDefault();\n                }\n            },\n            _initPanes: function () {\n                var panesConfig = this.options.panes || [];\n                var that = this;\n                this.element.addClass('k-widget').addClass('k-splitter').children().each(function (i, pane) {\n                    if (pane.nodeName.toLowerCase() != 'script') {\n                        that._initPane(pane, panesConfig[i]);\n                    }\n                });\n                this.resize();\n            },\n            _initPane: function (pane, config) {\n                pane = $(pane).attr('role', 'group').addClass(KPANE);\n                pane.data(PANE, config ? config : {}).toggleClass('k-scrollable', config ? config.scrollable !== false : true);\n                this.ajaxRequest(pane);\n            },\n            ajaxRequest: function (pane, url, data) {\n                var that = this, paneConfig;\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n                url = url || paneConfig.contentUrl;\n                if (url) {\n                    pane.append('<span class=\\'k-icon k-loading k-pane-loading\\' />');\n                    if (kendo.isLocalUrl(url)) {\n                        jQuery.ajax({\n                            url: url,\n                            data: data || {},\n                            type: 'GET',\n                            dataType: 'html',\n                            success: function (data) {\n                                that.angular('cleanup', function () {\n                                    return { elements: pane.get() };\n                                });\n                                pane.html(data);\n                                that.angular('compile', function () {\n                                    return { elements: pane.get() };\n                                });\n                                that.trigger(CONTENTLOAD, { pane: pane[0] });\n                            },\n                            error: function (xhr, status) {\n                                that.trigger(ERROR, {\n                                    pane: pane[0],\n                                    status: status,\n                                    xhr: xhr\n                                });\n                            }\n                        });\n                    } else {\n                        pane.removeClass('k-scrollable').html('<iframe src=\\'' + url + '\\' frameborder=\\'0\\' class=\\'k-content-frame\\'>' + 'This page requires frames in order to show content' + '</iframe>');\n                    }\n                }\n            },\n            _triggerAction: function (type, pane) {\n                if (!this.trigger(type, { pane: pane[0] })) {\n                    this[type](pane[0]);\n                }\n            },\n            _togglePane: function (e) {\n                var that = this, target = $(e.target), arrow;\n                if (target.closest('.k-splitter')[0] != that.element[0]) {\n                    return;\n                }\n                arrow = target.children('.k-icon:not(.k-resize-handle)');\n                if (arrow.length !== 1) {\n                    return;\n                }\n                if (arrow.is('.k-collapse-prev')) {\n                    that._triggerAction(COLLAPSE, target.prev());\n                } else if (arrow.is('.k-collapse-next')) {\n                    that._triggerAction(COLLAPSE, target.next());\n                } else if (arrow.is('.k-expand-prev')) {\n                    that._triggerAction(EXPAND, target.prev());\n                } else if (arrow.is('.k-expand-next')) {\n                    that._triggerAction(EXPAND, target.next());\n                }\n            },\n            _arrowClick: function (arrowType) {\n                var that = this;\n                return function (e) {\n                    var target = $(e.target), pane;\n                    if (target.closest('.k-splitter')[0] != that.element[0]) {\n                        return;\n                    }\n                    if (target.is('.k-' + arrowType + '-prev')) {\n                        pane = target.parent().prev();\n                    } else {\n                        pane = target.parent().next();\n                    }\n                    that._triggerAction(arrowType, pane);\n                };\n            },\n            _updateSplitBar: function (splitbar, previousPane, nextPane) {\n                var catIconIf = function (iconType, condition) {\n                        return condition ? '<div class=\\'k-icon ' + iconType + '\\' />' : '';\n                    }, orientation = this.orientation, draggable = previousPane.resizable !== false && nextPane.resizable !== false, prevCollapsible = previousPane.collapsible, prevCollapsed = previousPane.collapsed, nextCollapsible = nextPane.collapsible, nextCollapsed = nextPane.collapsed;\n                splitbar.addClass('k-splitbar k-state-default k-splitbar-' + orientation).attr('role', 'separator').attr('aria-expanded', !(prevCollapsed || nextCollapsed)).removeClass('k-splitbar-' + orientation + '-hover').toggleClass('k-splitbar-draggable-' + orientation, draggable && !prevCollapsed && !nextCollapsed).toggleClass('k-splitbar-static-' + orientation, !draggable && !prevCollapsible && !nextCollapsible).html(catIconIf('k-collapse-prev', prevCollapsible && !prevCollapsed && !nextCollapsed) + catIconIf('k-expand-prev', prevCollapsible && prevCollapsed && !nextCollapsed) + catIconIf('k-resize-handle', draggable) + catIconIf('k-collapse-next', nextCollapsible && !nextCollapsed && !prevCollapsed) + catIconIf('k-expand-next', nextCollapsible && nextCollapsed && !prevCollapsed));\n                if (!draggable && !prevCollapsible && !nextCollapsible) {\n                    splitbar.removeAttr('tabindex');\n                }\n            },\n            _updateSplitBars: function () {\n                var that = this;\n                this.element.children('.k-splitbar').each(function () {\n                    var splitbar = $(this), previousPane = splitbar.prevAll(PANECLASS).first().data(PANE), nextPane = splitbar.nextAll(PANECLASS).first().data(PANE);\n                    if (!nextPane) {\n                        return;\n                    }\n                    that._updateSplitBar(splitbar, previousPane, nextPane);\n                });\n            },\n            _removeSplitBars: function () {\n                this.element.children('.k-splitbar').remove();\n            },\n            _panes: function () {\n                if (!this.element) {\n                    return $();\n                }\n                return this.element.children(PANECLASS);\n            },\n            _resize: function () {\n                var that = this, element = that.element, panes = element.children(PANECLASS), isHorizontal = that.orientation == HORIZONTAL, splitBars = element.children('.k-splitbar'), splitBarsCount = splitBars.length, sizingProperty = isHorizontal ? 'width' : 'height', totalSize = element[sizingProperty]();\n                that.wrapper.addClass('k-splitter-resizing');\n                if (splitBarsCount === 0) {\n                    splitBarsCount = panes.length - 1;\n                    panes.slice(0, splitBarsCount).after('<div tabindex=\\'0\\' class=\\'k-splitbar\\' data-marker=\\'' + that._marker + '\\' />');\n                    that._updateSplitBars();\n                    splitBars = element.children('.k-splitbar');\n                } else {\n                    that._updateSplitBars();\n                }\n                splitBars.each(function () {\n                    totalSize -= this[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n                });\n                var sizedPanesWidth = 0, sizedPanesCount = 0, freeSizedPanes = $();\n                panes.css({\n                    position: 'absolute',\n                    top: 0\n                })[sizingProperty](function () {\n                    var element = $(this), config = element.data(PANE) || {}, size;\n                    element.removeClass('k-state-collapsed');\n                    if (config.collapsed) {\n                        size = config.collapsedSize ? calculateSize(config.collapsedSize, totalSize) : 0;\n                        element.css('overflow', 'hidden').addClass('k-state-collapsed');\n                    } else if (isFluid(config.size)) {\n                        freeSizedPanes = freeSizedPanes.add(this);\n                        return;\n                    } else {\n                        size = calculateSize(config.size, totalSize);\n                    }\n                    sizedPanesCount++;\n                    sizedPanesWidth += size;\n                    return size;\n                });\n                totalSize -= sizedPanesWidth;\n                var freeSizePanesCount = freeSizedPanes.length, freeSizePaneWidth = Math.floor(totalSize / freeSizePanesCount);\n                freeSizedPanes.slice(0, freeSizePanesCount - 1).css(sizingProperty, freeSizePaneWidth).end().eq(freeSizePanesCount - 1).css(sizingProperty, totalSize - (freeSizePanesCount - 1) * freeSizePaneWidth);\n                var sum = 0, alternateSizingProperty = isHorizontal ? 'height' : 'width', positioningProperty = isHorizontal ? 'left' : 'top', sizingDomProperty = isHorizontal ? 'offsetWidth' : 'offsetHeight';\n                if (freeSizePanesCount === 0) {\n                    var lastNonCollapsedPane = panes.filter(function () {\n                        return !($(this).data(PANE) || {}).collapsed;\n                    }).last();\n                    lastNonCollapsedPane[sizingProperty](totalSize + lastNonCollapsedPane[0][sizingDomProperty]);\n                }\n                element.children().css(alternateSizingProperty, element[alternateSizingProperty]()).each(function (i, child) {\n                    if (child.tagName.toLowerCase() != 'script') {\n                        child.style[positioningProperty] = Math.floor(sum) + 'px';\n                        sum += child[sizingDomProperty];\n                    }\n                });\n                that._detachEvents();\n                that._attachEvents();\n                that.wrapper.removeClass('k-splitter-resizing');\n                kendo.resize(panes);\n                that.trigger(LAYOUTCHANGE);\n            },\n            toggle: function (pane, expand) {\n                var that = this, paneConfig;\n                pane = that.element.find(pane);\n                paneConfig = pane.data(PANE);\n                if (!expand && !paneConfig.collapsible) {\n                    return;\n                }\n                if (arguments.length == 1) {\n                    expand = paneConfig.collapsed === undefined ? false : paneConfig.collapsed;\n                }\n                paneConfig.collapsed = !expand;\n                if (paneConfig.collapsed) {\n                    pane.css('overflow', 'hidden');\n                } else {\n                    pane.css('overflow', '');\n                }\n                that.resize(true);\n            },\n            collapse: function (pane) {\n                this.toggle(pane, false);\n            },\n            expand: function (pane) {\n                this.toggle(pane, true);\n            },\n            _addPane: function (config, idx, paneElement) {\n                var that = this;\n                if (paneElement.length) {\n                    that.options.panes.splice(idx, 0, config);\n                    that._initPane(paneElement, config);\n                    that._removeSplitBars();\n                    that.resize(true);\n                }\n                return paneElement;\n            },\n            append: function (config) {\n                config = config || {};\n                var that = this, paneElement = $('<div />').appendTo(that.element);\n                return that._addPane(config, that.options.panes.length, paneElement);\n            },\n            insertBefore: function (config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n                var that = this, idx = that.wrapper.children('.k-pane').index(referencePane), paneElement = $('<div />').insertBefore($(referencePane));\n                return that._addPane(config, idx, paneElement);\n            },\n            insertAfter: function (config, referencePane) {\n                referencePane = $(referencePane);\n                config = config || {};\n                var that = this, idx = that.wrapper.children('.k-pane').index(referencePane), paneElement = $('<div />').insertAfter($(referencePane));\n                return that._addPane(config, idx + 1, paneElement);\n            },\n            remove: function (pane) {\n                pane = $(pane);\n                var that = this;\n                if (pane.length) {\n                    kendo.destroy(pane);\n                    pane.each(function (idx, element) {\n                        that.options.panes.splice(that.wrapper.children('.k-pane').index(element), 1);\n                        $(element).remove();\n                    });\n                    that._removeSplitBars();\n                    if (that.options.panes.length) {\n                        that.resize(true);\n                    }\n                }\n                return that;\n            },\n            size: panePropertyAccessor('size', true),\n            min: panePropertyAccessor('min'),\n            max: panePropertyAccessor('max')\n        });\n        ui.plugin(Splitter);\n        var verticalDefaults = {\n            sizingProperty: 'height',\n            sizingDomProperty: 'offsetHeight',\n            alternateSizingProperty: 'width',\n            positioningProperty: 'top',\n            mousePositioningProperty: 'pageY'\n        };\n        var horizontalDefaults = {\n            sizingProperty: 'width',\n            sizingDomProperty: 'offsetWidth',\n            alternateSizingProperty: 'height',\n            positioningProperty: 'left',\n            mousePositioningProperty: 'pageX'\n        };\n        function PaneResizing(splitter) {\n            var that = this, orientation = splitter.orientation;\n            that.owner = splitter;\n            that._element = splitter.element;\n            that.orientation = orientation;\n            extend(that, orientation === HORIZONTAL ? horizontalDefaults : verticalDefaults);\n            that._resizable = new kendo.ui.Resizable(splitter.element, {\n                orientation: orientation,\n                handle: '.k-splitbar-draggable-' + orientation + '[data-marker=' + splitter._marker + ']',\n                hint: proxy(that._createHint, that),\n                start: proxy(that._start, that),\n                max: proxy(that._max, that),\n                min: proxy(that._min, that),\n                invalidClass: 'k-restricted-size-' + orientation,\n                resizeend: proxy(that._stop, that)\n            });\n        }\n        PaneResizing.prototype = {\n            press: function (target) {\n                this._resizable.press(target);\n            },\n            move: function (delta, target) {\n                if (!this.pressed) {\n                    this.press(target);\n                    this.pressed = true;\n                }\n                if (!this._resizable.target) {\n                    this._resizable.press(target);\n                }\n                this._resizable.move(delta);\n            },\n            end: function () {\n                this._resizable.end();\n                this.pressed = false;\n            },\n            destroy: function () {\n                this._resizable.destroy();\n                this._resizable = this._element = this.owner = null;\n            },\n            isResizing: function () {\n                return this._resizable.resizing;\n            },\n            _createHint: function (handle) {\n                var that = this;\n                return $('<div class=\\'k-ghost-splitbar k-ghost-splitbar-' + that.orientation + ' k-state-default\\' />').css(that.alternateSizingProperty, handle[that.alternateSizingProperty]());\n            },\n            _start: function (e) {\n                var that = this, splitbar = $(e.currentTarget), previousPane = splitbar.prev(), nextPane = splitbar.next(), previousPaneConfig = previousPane.data(PANE), nextPaneConfig = nextPane.data(PANE), prevBoundary = parseInt(previousPane[0].style[that.positioningProperty], 10), nextBoundary = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - splitbar[0][that.sizingDomProperty], totalSize = parseInt(that._element.css(that.sizingProperty), 10), toPx = function (value) {\n                        var val = parseInt(value, 10);\n                        return (isPixelSize(value) ? val : totalSize * val / 100) || 0;\n                    }, prevMinSize = toPx(previousPaneConfig.min), prevMaxSize = toPx(previousPaneConfig.max) || nextBoundary - prevBoundary, nextMinSize = toPx(nextPaneConfig.min), nextMaxSize = toPx(nextPaneConfig.max) || nextBoundary - prevBoundary;\n                that.previousPane = previousPane;\n                that.nextPane = nextPane;\n                that._maxPosition = Math.min(nextBoundary - nextMinSize, prevBoundary + prevMaxSize);\n                that._minPosition = Math.max(prevBoundary + prevMinSize, nextBoundary - nextMaxSize);\n            },\n            _max: function () {\n                return this._maxPosition;\n            },\n            _min: function () {\n                return this._minPosition;\n            },\n            _stop: function (e) {\n                var that = this, splitbar = $(e.currentTarget), owner = that.owner;\n                owner._panes().children('.k-splitter-overlay').remove();\n                if (e.keyCode !== kendo.keys.ESC) {\n                    var ghostPosition = e.position, previousPane = splitbar.prev(), nextPane = splitbar.next(), previousPaneConfig = previousPane.data(PANE), nextPaneConfig = nextPane.data(PANE), previousPaneNewSize = ghostPosition - parseInt(previousPane[0].style[that.positioningProperty], 10), nextPaneNewSize = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - ghostPosition - splitbar[0][that.sizingDomProperty], fluidPanesCount = that._element.children(PANECLASS).filter(function () {\n                            return isFluid($(this).data(PANE).size);\n                        }).length;\n                    if (!isFluid(previousPaneConfig.size) || fluidPanesCount > 1) {\n                        if (isFluid(previousPaneConfig.size)) {\n                            fluidPanesCount--;\n                        }\n                        previousPaneConfig.size = previousPaneNewSize + 'px';\n                    }\n                    if (!isFluid(nextPaneConfig.size) || fluidPanesCount > 1) {\n                        nextPaneConfig.size = nextPaneNewSize + 'px';\n                    }\n                    owner.resize(true);\n                }\n                return false;\n            }\n        };\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}