{"version":3,"sources":["kendo.imagebrowser.js"],"names":["f","define","$","undefined","concatPaths","path","name","match","sizeFormatter","value","suffix","Math","round","offsetTop","ImageBrowser","kendo","window","FileBrowser","ui","isPlainObject","proxy","extend","browser","support","isFunction","trimSlashesRegExp","ERROR","NS","NAMEFIELD","SIZEFIELD","TYPEFIELD","DEFAULTSORTORDER","field","dir","EMPTYTILE","template","data","schemas","imagebrowser","items","model","id","fields","size","type","transports","RemoteTransport","init","options","fn","call","this","_call","read","create","destroy","update","msie","version","element","height","that","addClass","fileTypes","selected","_selectedItem","imageUrl","transport","get","replace","format","encodeURIComponent","_fileUpload","e","filterRegExp","RegExp","split","join","fileName","files","fileNameField","sizeField","test","_createFile","_uploading","upload","one","set","response","_getFieldName","_tiles","listView","filter","attr","_scroll","preventDefault","_showMessage","messages","invalidFileType","_content","list","appendTo","on","_dblClick","ListView","dataSource","_itemTmpl","editTemplate","_editTmpl","selectable","autoBind","dataBinding","toolbar","find","parent","action","dataBound","view","length","wrapper","append","text","emptyFolder","change","_listViewChange","_dataSource","schema","typeSortOrder","nameSortOrder","sort","_errorHandler","unbind","_error","DataSource","bind","_loadImage","li","dataItem","getByUid","thumbnailUrl","img","alt","urlJoin","hide","prev","remove","end","fadeIn","after","indexOf","_forceReload","Date","getTime","loaded","clearTimeout","_timeout","setTimeout","outerHeight","viewTop","scrollTop","viewBottom","each","top","bottom","offsetHeight","html","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.imagebrowser.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.imagebrowser', ['kendo.filebrowser'], f);\n}(function () {\n    var __meta__ = {\n        id: 'imagebrowser',\n        name: 'ImageBrowser',\n        category: 'web',\n        description: '',\n        hidden: true,\n        depends: ['filebrowser']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, FileBrowser = kendo.ui.FileBrowser, isPlainObject = $.isPlainObject, proxy = $.proxy, extend = $.extend, browser = kendo.support.browser, isFunction = kendo.isFunction, trimSlashesRegExp = /(^\\/|\\/$)/g, ERROR = 'error', NS = '.kendoImageBrowser', NAMEFIELD = 'name', SIZEFIELD = 'size', TYPEFIELD = 'type', DEFAULTSORTORDER = {\n                field: TYPEFIELD,\n                dir: 'asc'\n            }, EMPTYTILE = kendo.template('<li class=\"k-tile-empty\"><strong>${text}</strong></li>');\n        extend(true, kendo.data, {\n            schemas: {\n                'imagebrowser': {\n                    data: function (data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: 'name',\n                        fields: {\n                            name: 'name',\n                            size: 'size',\n                            type: 'type'\n                        }\n                    }\n                }\n            }\n        });\n        extend(true, kendo.data, {\n            transports: {\n                'imagebrowser': kendo.data.RemoteTransport.extend({\n                    init: function (options) {\n                        kendo.data.RemoteTransport.fn.init.call(this, $.extend(true, {}, this.options, options));\n                    },\n                    _call: function (type, options) {\n                        options.data = $.extend({}, options.data, { path: this.options.path() });\n                        if (isFunction(this.options[type])) {\n                            this.options[type].call(this, options);\n                        } else {\n                            kendo.data.RemoteTransport.fn[type].call(this, options);\n                        }\n                    },\n                    read: function (options) {\n                        this._call('read', options);\n                    },\n                    create: function (options) {\n                        this._call('create', options);\n                    },\n                    destroy: function (options) {\n                        this._call('destroy', options);\n                    },\n                    update: function () {\n                    },\n                    options: {\n                        read: { type: 'POST' },\n                        update: { type: 'POST' },\n                        create: { type: 'POST' },\n                        destroy: { type: 'POST' }\n                    }\n                })\n            }\n        });\n        var offsetTop;\n        if (browser.msie && browser.version < 8) {\n            offsetTop = function (element) {\n                return element.offsetTop;\n            };\n        } else {\n            offsetTop = function (element) {\n                return element.offsetTop - $(element).height();\n            };\n        }\n        function concatPaths(path, name) {\n            if (path === undefined || !path.match(/\\/$/)) {\n                path = (path || '') + '/';\n            }\n            return path + name;\n        }\n        function sizeFormatter(value) {\n            if (!value) {\n                return '';\n            }\n            var suffix = ' bytes';\n            if (value >= 1073741824) {\n                suffix = ' GB';\n                value /= 1073741824;\n            } else if (value >= 1048576) {\n                suffix = ' MB';\n                value /= 1048576;\n            } else if (value >= 1024) {\n                suffix = ' KB';\n                value /= 1024;\n            }\n            return Math.round(value * 100) / 100 + suffix;\n        }\n        var ImageBrowser = FileBrowser.extend({\n            init: function (element, options) {\n                var that = this;\n                options = options || {};\n                FileBrowser.fn.init.call(that, element, options);\n                that.element.addClass('k-imagebrowser');\n            },\n            options: {\n                name: 'ImageBrowser',\n                fileTypes: '*.png,*.gif,*.jpg,*.jpeg'\n            },\n            value: function () {\n                var that = this, selected = that._selectedItem(), path, imageUrl = that.options.transport.imageUrl;\n                if (selected && selected.get(TYPEFIELD) === 'f') {\n                    path = concatPaths(that.path(), selected.get(NAMEFIELD)).replace(trimSlashesRegExp, '');\n                    if (imageUrl) {\n                        path = isFunction(imageUrl) ? imageUrl(path) : kendo.format(imageUrl, encodeURIComponent(path));\n                    }\n                    return path;\n                }\n            },\n            _fileUpload: function (e) {\n                var that = this, options = that.options, fileTypes = options.fileTypes, filterRegExp = new RegExp(('(' + fileTypes.split(',').join(')|(') + ')').replace(/\\*\\./g, '.*.'), 'i'), fileName = e.files[0].name, fileNameField = NAMEFIELD, sizeField = SIZEFIELD, model;\n                if (filterRegExp.test(fileName)) {\n                    e.data = { path: that.path() };\n                    model = that._createFile(fileName);\n                    if (!model) {\n                        e.preventDefault();\n                    } else {\n                        model._uploading = true;\n                        that.upload.one('success', function (e) {\n                            delete model._uploading;\n                            model.set(fileNameField, e.response[that._getFieldName(fileNameField)]);\n                            model.set(sizeField, e.response[that._getFieldName(sizeField)]);\n                            that._tiles = that.listView.items().filter('[' + kendo.attr('type') + '=f]');\n                            that._scroll();\n                        });\n                    }\n                } else {\n                    e.preventDefault();\n                    that._showMessage(kendo.format(options.messages.invalidFileType, fileName, fileTypes));\n                }\n            },\n            _content: function () {\n                var that = this;\n                that.list = $('<ul class=\"k-reset k-floats k-tiles\" />').appendTo(that.element).on('scroll' + NS, proxy(that._scroll, that)).on('dblclick' + NS, 'li', proxy(that._dblClick, that));\n                that.listView = new kendo.ui.ListView(that.list, {\n                    dataSource: that.dataSource,\n                    template: that._itemTmpl(),\n                    editTemplate: that._editTmpl(),\n                    selectable: true,\n                    autoBind: false,\n                    dataBinding: function (e) {\n                        that.toolbar.find('.k-delete').parent().addClass('k-state-disabled');\n                        if (e.action === 'remove' || e.action === 'sync') {\n                            e.preventDefault();\n                        }\n                    },\n                    dataBound: function () {\n                        if (that.dataSource.view().length) {\n                            that._tiles = this.items().filter('[' + kendo.attr('type') + '=f]');\n                            that._scroll();\n                        } else {\n                            this.wrapper.append(EMPTYTILE({ text: that.options.messages.emptyFolder }));\n                        }\n                    },\n                    change: proxy(that._listViewChange, that)\n                });\n            },\n            _dataSource: function () {\n                var that = this, options = that.options, transport = options.transport, typeSortOrder = extend({}, DEFAULTSORTORDER), nameSortOrder = {\n                        field: NAMEFIELD,\n                        dir: 'asc'\n                    }, schema, dataSource = {\n                        type: transport.type || 'imagebrowser',\n                        sort: [\n                            typeSortOrder,\n                            nameSortOrder\n                        ]\n                    };\n                if (isPlainObject(transport)) {\n                    transport.path = proxy(that.path, that);\n                    dataSource.transport = transport;\n                }\n                if (isPlainObject(options.schema)) {\n                    dataSource.schema = options.schema;\n                } else if (transport.type && isPlainObject(kendo.data.schemas[transport.type])) {\n                    schema = kendo.data.schemas[transport.type];\n                }\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._errorHandler = proxy(that._error, that);\n                }\n                that.dataSource = kendo.data.DataSource.create(dataSource).bind(ERROR, that._errorHandler);\n            },\n            _loadImage: function (li) {\n                var that = this, element = $(li), dataItem = that.dataSource.getByUid(element.attr(kendo.attr('uid'))), name = dataItem.get(NAMEFIELD), thumbnailUrl = that.options.transport.thumbnailUrl, img = $('<img />', { alt: name }), urlJoin = '?';\n                if (dataItem._uploading) {\n                    return;\n                }\n                img.hide().on('load' + NS, function () {\n                    $(this).prev().remove().end().addClass('k-image').fadeIn();\n                });\n                element.find('.k-loading').after(img);\n                if (isFunction(thumbnailUrl)) {\n                    thumbnailUrl = thumbnailUrl(that.path(), encodeURIComponent(name));\n                } else {\n                    if (thumbnailUrl.indexOf('?') >= 0) {\n                        urlJoin = '&';\n                    }\n                    thumbnailUrl = thumbnailUrl + urlJoin + 'path=' + encodeURIComponent(that.path() + name);\n                    if (dataItem._forceReload) {\n                        thumbnailUrl += '&_=' + new Date().getTime();\n                        delete dataItem._forceReload;\n                    }\n                }\n                img.attr('src', thumbnailUrl);\n                li.loaded = true;\n            },\n            _scroll: function () {\n                var that = this;\n                if (that.options.transport && that.options.transport.thumbnailUrl) {\n                    clearTimeout(that._timeout);\n                    that._timeout = setTimeout(function () {\n                        var height = that.list.outerHeight(), viewTop = that.list.scrollTop(), viewBottom = viewTop + height;\n                        that._tiles.each(function () {\n                            var top = offsetTop(this), bottom = top + this.offsetHeight;\n                            if (top >= viewTop && top < viewBottom || bottom >= viewTop && bottom < viewBottom) {\n                                that._loadImage(this);\n                            }\n                            if (top > viewBottom) {\n                                return false;\n                            }\n                        });\n                        that._tiles = that._tiles.filter(function () {\n                            return !this.loaded;\n                        });\n                    }, 250);\n                }\n            },\n            _itemTmpl: function () {\n                var that = this, html = '<li class=\"k-tile\" ' + kendo.attr('uid') + '=\"#=uid#\" ';\n                html += kendo.attr('type') + '=\"${' + TYPEFIELD + '}\">';\n                html += '#if(' + TYPEFIELD + ' == \"d\") { #';\n                html += '<div class=\"k-thumb\"><span class=\"k-icon k-folder\"></span></div>';\n                html += '#}else{#';\n                if (that.options.transport && that.options.transport.thumbnailUrl) {\n                    html += '<div class=\"k-thumb\"><span class=\"k-icon k-loading\"></span></div>';\n                } else {\n                    html += '<div class=\"k-thumb\"><span class=\"k-icon k-file\"></span></div>';\n                }\n                html += '#}#';\n                html += '<strong>${' + NAMEFIELD + '}</strong>';\n                html += '#if(' + TYPEFIELD + ' == \"f\") { # <span class=\"k-filesize\">${this.sizeFormatter(' + SIZEFIELD + ')}</span> #}#';\n                html += '</li>';\n                return proxy(kendo.template(html), { sizeFormatter: sizeFormatter });\n            }\n        });\n        kendo.ui.plugin(ImageBrowser);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}