{"version":3,"sources":["kendo.pager.js"],"names":["f","define","$","undefined","button","template","idx","text","numeric","title","ns","kendo","icon","className","wrapClassName","iconTemplate","substring","update","element","selector","page","disabled","find","parent","attr","toggleClass","first","FIRST","prev","PREV","Math","max","next","totalPages","NEXT","min","last","LAST","window","ui","Widget","proxy","CHANGE","NS","CLICK","KEYDOWN","DISABLED","Pager","extend","init","options","pageSizes","pageItems","that","this","fn","call","dataSource","data","DataSource","create","linkTemplate","selectTemplate","currentPageTemplate","_refreshHandler","refresh","bind","previousNext","length","append","messages","previous","list","appendTo","input","format","of","on","_keydown","map","size","toLowerCase","allPages","itemsPerPage","html","join","end","val","pageSize","DropDownList","show","kendoDropDownList","_change","_refreshClick","info","_click","addClass","_toggleActive","autoBind","notify","destroy","off","unbind","events","name","buttonCount","display","empty","morePages","setDataSource","fetch","e","reminder","hasAll","selectAll","start","total","action","removeClass","filter","keyCode","keys","ENTER","parseInt","isNaN","preventDefault","read","value","currentTarget","target","is","ceil","trigger","index","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.pager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.pager', ['kendo.data'], f);\n}(function () {\n    var __meta__ = {\n        id: 'pager',\n        name: 'Pager',\n        category: 'framework',\n        depends: ['data'],\n        advanced: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, proxy = $.proxy, FIRST = '.k-i-seek-w', LAST = '.k-i-seek-e', PREV = '.k-i-arrow-w', NEXT = '.k-i-arrow-e', CHANGE = 'change', NS = '.kendoPager', CLICK = 'click', KEYDOWN = 'keydown', DISABLED = 'disabled', iconTemplate = kendo.template('<a href=\"\\\\#\" title=\"#=text#\" class=\"k-link k-pager-nav #= wrapClassName #\"><span class=\"k-icon #= className #\">#=text#</span></a>');\n        function button(template, idx, text, numeric, title) {\n            return template({\n                idx: idx,\n                text: text,\n                ns: kendo.ns,\n                numeric: numeric,\n                title: title || ''\n            });\n        }\n        function icon(className, text, wrapClassName) {\n            return iconTemplate({\n                className: className.substring(1),\n                text: text,\n                wrapClassName: wrapClassName || ''\n            });\n        }\n        function update(element, selector, page, disabled) {\n            element.find(selector).parent().attr(kendo.attr('page'), page).attr('tabindex', -1).toggleClass('k-state-disabled', disabled);\n        }\n        function first(element, page) {\n            update(element, FIRST, 1, page <= 1);\n        }\n        function prev(element, page) {\n            update(element, PREV, Math.max(1, page - 1), page <= 1);\n        }\n        function next(element, page, totalPages) {\n            update(element, NEXT, Math.min(totalPages, page + 1), page >= totalPages);\n        }\n        function last(element, page, totalPages) {\n            update(element, LAST, totalPages, page >= totalPages);\n        }\n        var Pager = Widget.extend({\n            init: function (element, options) {\n                var that = this, page, totalPages;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                that.dataSource = kendo.data.DataSource.create(options.dataSource);\n                that.linkTemplate = kendo.template(that.options.linkTemplate);\n                that.selectTemplate = kendo.template(that.options.selectTemplate);\n                that.currentPageTemplate = kendo.template(that.options.currentPageTemplate);\n                page = that.page();\n                totalPages = that.totalPages();\n                that._refreshHandler = proxy(that.refresh, that);\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                if (options.previousNext) {\n                    if (!that.element.find(FIRST).length) {\n                        that.element.append(icon(FIRST, options.messages.first, 'k-pager-first'));\n                        first(that.element, page, totalPages);\n                    }\n                    if (!that.element.find(PREV).length) {\n                        that.element.append(icon(PREV, options.messages.previous));\n                        prev(that.element, page, totalPages);\n                    }\n                }\n                if (options.numeric) {\n                    that.list = that.element.find('.k-pager-numbers');\n                    if (!that.list.length) {\n                        that.list = $('<ul class=\"k-pager-numbers k-reset\" />').appendTo(that.element);\n                    }\n                }\n                if (options.input) {\n                    if (!that.element.find('.k-pager-input').length) {\n                        that.element.append('<span class=\"k-pager-input k-label\">' + options.messages.page + '<input class=\"k-textbox\">' + kendo.format(options.messages.of, totalPages) + '</span>');\n                    }\n                    that.element.on(KEYDOWN + NS, '.k-pager-input input', proxy(that._keydown, that));\n                }\n                if (options.previousNext) {\n                    if (!that.element.find(NEXT).length) {\n                        that.element.append(icon(NEXT, options.messages.next));\n                        next(that.element, page, totalPages);\n                    }\n                    if (!that.element.find(LAST).length) {\n                        that.element.append(icon(LAST, options.messages.last, 'k-pager-last'));\n                        last(that.element, page, totalPages);\n                    }\n                }\n                if (options.pageSizes) {\n                    if (!that.element.find('.k-pager-sizes').length) {\n                        var pageSizes = options.pageSizes.length ? options.pageSizes : [\n                            'all',\n                            5,\n                            10,\n                            20\n                        ];\n                        var pageItems = $.map(pageSizes, function (size) {\n                            if (size.toLowerCase && size.toLowerCase() === 'all') {\n                                return '<option value=\\'all\\'>' + options.messages.allPages + '</option>';\n                            }\n                            return '<option>' + size + '</option>';\n                        });\n                        $('<span class=\"k-pager-sizes k-label\"><select/>' + options.messages.itemsPerPage + '</span>').appendTo(that.element).find('select').html(pageItems.join('')).end().appendTo(that.element);\n                    }\n                    that.element.find('.k-pager-sizes select').val(that.pageSize());\n                    if (kendo.ui.DropDownList) {\n                        that.element.find('.k-pager-sizes select').show().kendoDropDownList();\n                    }\n                    that.element.on(CHANGE + NS, '.k-pager-sizes select', proxy(that._change, that));\n                }\n                if (options.refresh) {\n                    if (!that.element.find('.k-pager-refresh').length) {\n                        that.element.append('<a href=\"#\" class=\"k-pager-refresh k-link\" title=\"' + options.messages.refresh + '\"><span class=\"k-icon k-i-refresh\">' + options.messages.refresh + '</span></a>');\n                    }\n                    that.element.on(CLICK + NS, '.k-pager-refresh', proxy(that._refreshClick, that));\n                }\n                if (options.info) {\n                    if (!that.element.find('.k-pager-info').length) {\n                        that.element.append('<span class=\"k-pager-info k-label\" />');\n                    }\n                }\n                that.element.on(CLICK + NS, 'a', proxy(that._click, that)).addClass('k-pager-wrap k-widget k-floatwrap');\n                that.element.on(CLICK + NS, '.k-current-page', proxy(that._toggleActive, that));\n                if (options.autoBind) {\n                    that.refresh();\n                }\n                kendo.notify(that);\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.element.off(NS);\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that._refreshHandler = null;\n                kendo.destroy(that.element);\n                that.element = that.list = null;\n            },\n            events: [CHANGE],\n            options: {\n                name: 'Pager',\n                selectTemplate: '<li><span class=\"k-state-selected\">#=text#</span></li>',\n                currentPageTemplate: '<li class=\"k-current-page\"><span class=\"k-link k-pager-nav\">#=text#</span></li>',\n                linkTemplate: '<li><a tabindex=\"-1\" href=\"\\\\#\" class=\"k-link\" data-#=ns#page=\"#=idx#\" #if (title !== \"\") {# title=\"#=title#\" #}#>#=text#</a></li>',\n                buttonCount: 10,\n                autoBind: true,\n                numeric: true,\n                info: true,\n                input: false,\n                previousNext: true,\n                pageSizes: false,\n                refresh: false,\n                messages: {\n                    allPages: 'All',\n                    display: '{0} - {1} of {2} items',\n                    empty: 'No items to display',\n                    page: 'Page',\n                    of: 'of {0}',\n                    itemsPerPage: 'items per page',\n                    first: 'Go to the first page',\n                    previous: 'Go to the previous page',\n                    next: 'Go to the next page',\n                    last: 'Go to the last page',\n                    refresh: 'Refresh',\n                    morePages: 'More pages'\n                }\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that.dataSource = that.options.dataSource = dataSource;\n                dataSource.bind(CHANGE, that._refreshHandler);\n                if (that.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            refresh: function (e) {\n                var that = this, idx, end, start = 1, reminder, page = that.page(), html = '', options = that.options, pageSize = that.pageSize(), total = that.dataSource.total(), totalPages = that.totalPages(), linkTemplate = that.linkTemplate, buttonCount = options.buttonCount;\n                if (e && e.action == 'itemchange') {\n                    return;\n                }\n                if (options.numeric) {\n                    if (page > buttonCount) {\n                        reminder = page % buttonCount;\n                        start = reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n                    }\n                    end = Math.min(start + buttonCount - 1, totalPages);\n                    if (start > 1) {\n                        html += button(linkTemplate, start - 1, '...', false, options.messages.morePages);\n                    }\n                    for (idx = start; idx <= end; idx++) {\n                        html += button(idx == page ? that.selectTemplate : linkTemplate, idx, idx, true);\n                    }\n                    if (end < totalPages) {\n                        html += button(linkTemplate, idx, '...', false, options.messages.morePages);\n                    }\n                    if (html === '') {\n                        html = that.selectTemplate({ text: 0 });\n                    }\n                    html = this.currentPageTemplate({ text: page }) + html;\n                    that.list.removeClass('k-state-expanded').html(html);\n                }\n                if (options.info) {\n                    if (total > 0) {\n                        html = kendo.format(options.messages.display, (page - 1) * pageSize + 1, Math.min(page * pageSize, total), total);\n                    } else {\n                        html = options.messages.empty;\n                    }\n                    that.element.find('.k-pager-info').html(html);\n                }\n                if (options.input) {\n                    that.element.find('.k-pager-input').html(that.options.messages.page + '<input class=\"k-textbox\">' + kendo.format(options.messages.of, totalPages)).find('input').val(page).attr(DISABLED, total < 1).toggleClass('k-state-disabled', total < 1);\n                }\n                if (options.previousNext) {\n                    first(that.element, page, totalPages);\n                    prev(that.element, page, totalPages);\n                    next(that.element, page, totalPages);\n                    last(that.element, page, totalPages);\n                }\n                if (options.pageSizes) {\n                    var hasAll = that.element.find('.k-pager-sizes option[value=\\'all\\']').length > 0;\n                    var selectAll = hasAll && pageSize === this.dataSource.total();\n                    var text = pageSize;\n                    if (selectAll) {\n                        pageSize = 'all';\n                        text = options.messages.allPages;\n                    }\n                    that.element.find('.k-pager-sizes select').val(pageSize).filter('[' + kendo.attr('role') + '=dropdownlist]').kendoDropDownList('value', pageSize).kendoDropDownList('text', text);\n                }\n            },\n            _keydown: function (e) {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    var input = this.element.find('.k-pager-input').find('input'), page = parseInt(input.val(), 10);\n                    if (isNaN(page) || page < 1 || page > this.totalPages()) {\n                        page = this.page();\n                    }\n                    input.val(page);\n                    this.page(page);\n                }\n            },\n            _refreshClick: function (e) {\n                e.preventDefault();\n                this.dataSource.read();\n            },\n            _change: function (e) {\n                var value = e.currentTarget.value;\n                var pageSize = parseInt(value, 10);\n                var dataSource = this.dataSource;\n                if (!isNaN(pageSize)) {\n                    dataSource.pageSize(pageSize);\n                } else if ((value + '').toLowerCase() == 'all') {\n                    dataSource.pageSize(dataSource.total());\n                }\n            },\n            _toggleActive: function () {\n                this.list.toggleClass('k-state-expanded');\n            },\n            _click: function (e) {\n                var target = $(e.currentTarget);\n                e.preventDefault();\n                if (!target.is('.k-state-disabled')) {\n                    this.page(target.attr(kendo.attr('page')));\n                }\n            },\n            totalPages: function () {\n                return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));\n            },\n            pageSize: function () {\n                return this.dataSource.pageSize() || this.dataSource.total();\n            },\n            page: function (page) {\n                if (page !== undefined) {\n                    this.dataSource.page(page);\n                    this.trigger(CHANGE, { index: page });\n                } else {\n                    if (this.dataSource.total() > 0) {\n                        return this.dataSource.page();\n                    } else {\n                        return 0;\n                    }\n                }\n            }\n        });\n        ui.plugin(Pager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}