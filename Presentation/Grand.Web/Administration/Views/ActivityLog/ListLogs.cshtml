@model ActivityLogSearchModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
    
    //page title
    ViewBag.Title = T("Admin.Configuration.ActivityLog.ActivityLog").Text;
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="portlet light form-fit">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-sitemap"></i>
                    @T("Admin.Configuration.ActivityLog.ActivityLog")
                </div>
                <div class="actions btn-group btn-group-devided">
                    <a href="@Url.Action("ClearAll")" class="btn red">
                    <i class="fa fa-trash-o"></i> @T("Admin.Common.Clear")</a>
                </div>
            </div>
            <div class="portlet-body form">
                <div class="form-horizontal">
                    <div class="form-body">
                        <div class="form-group">
                            @Html.GrandLabelFor(model => model.CreatedOnFrom)
                            <div class="col-md-4 col-sm-6">
                                @Html.GrandEditorFor(model => model.CreatedOnFrom)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.GrandLabelFor(model => model.CreatedOnTo)
                            <div class="col-md-4 col-sm-6">
                                @Html.GrandEditorFor(model => model.CreatedOnTo)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.GrandLabelFor(model => model.IpAddress)
                            <div class="col-md-4 col-sm-6">
                                @Html.GrandEditorFor(model => model.IpAddress)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.GrandLabelFor(model => model.ActivityLogTypeId)
                            <div class="col-md-4 col-sm-6">
                                @Html.GrandDropDownListFor(model => model.ActivityLogTypeId, Model.ActivityLogType)
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-sm-offset-3 col-md-9 col-sm-9">
                                <button class="btn btn-success filter-submit" id="search-log">
                                    <i class="fa fa-search"></i> @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="portlet-body">
                <div id="activityLog-grid"></div>
            </div>
        </div>
    </div>
</div>


            <script>
                $(document).ready(function () {
                    $("#activityLog-grid").kendoGrid({
                        dataSource: {
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ListLogs", "ActivityLog"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                },
                                destroy: {
                                    url: "@Html.Raw(Url.Action("AcivityLogDelete", "ActivityLog"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        //do not implicitly specify all fields
                                        //we do it only for fields which implicitly require it
                                        //otherwise, they'll be formatted wrong way
                                        CreatedOn: {type: "date" }
                                    }
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)]
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [{
                            field: "ActivityLogTypeName",
                            title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.ActivityLogType")",
                            width: 150
                        }, {
                            field: "CustomerId",
                            title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.Customer")",
                            width: 100,
                            template: '<a href="@Url.Content("~/Admin/Customer/Edit/")#=CustomerId#">#:CustomerEmail#</a>'
                        }, {
                            field: "IpAddress",
                            title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.IpAddress")"
                        }, {
                            field: "Comment",
                            title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.Comment")"
                        }, {
                            field: "CreatedOn",
                            title: "@T("Admin.System.Log.Fields.CreatedOn")",
                            width: 200,
                            type: "date",
                            format: "{0:G}"
                        }, {
                            command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                            title: "@T("Admin.Common.Delete")",
                            width: 100
                        }]
                    });
                });
            </script>
            <script type="text/javascript">

                $(document).ready(function () {

                    $('#search-log').click(function () {
                        var grid = $('#activityLog-grid').data('kendoGrid');
                        grid.dataSource.page(1); //new search. Set page size to 1
                        //grid.dataSource.read(); we already loaded the grid above using "page" function
                        return false;
                    });
                });

                function additionalData() {
                    var data = {
                        CreatedOnFrom: $('#@Html.FieldIdFor(model => model.CreatedOnFrom)').val(),
                        CreatedOnTo: $('#@Html.FieldIdFor(model => model.CreatedOnTo)').val(),
                        IpAddress: $('#@Html.FieldIdFor(model => model.IpAddress)').val(),
                        ActivityLogTypeId: $('#ActivityLogTypeId').val()
                    };
                    addAntiForgeryToken(data);
                    return data;
                }
            </script>
