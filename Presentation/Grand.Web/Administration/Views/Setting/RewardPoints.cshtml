@model RewardPointsSettingsModel
@using Grand.Core.Domain.Orders;
@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.RewardPoints").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)


    <div class="row">
        <div class="col-md-12">
            <div class="portlet light form-fit">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-fw fa-sliders"></i>
                        @T("Admin.Configuration.Settings.RewardPoints")
                    </div>
                    <div class="actions">
                        <div class="btn-group btn-group-devided">
                            <button class="btn btn-success" type="submit" name="save"><i class="fa fa-check"></i> @T("Admin.Common.Save") </button>
                        </div>
                    </div>
                </div>
                <div class="portlet-body">
                    <div class="form-horizontal">
                        <div class="form-body">
                            @Html.Action("StoreScopeConfiguration", "Setting")
                        </div>
                    </div>
                </div>
                <div class="portlet-body form">

                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="form-group">
                                <div class="note note-info">
                                    @T("Admin.Configuration.Settings.RewardPoints.Description")
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.Enabled_OverrideForStore, model => model.Enabled, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.Enabled, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.Enabled)
                                    @Html.ValidationMessageFor(model => model.Enabled)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.ExchangeRate_OverrideForStore, model => model.ExchangeRate, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.ExchangeRate, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @T("Admin.Configuration.Settings.RewardPoints.ExchangeRate.Hint2")
                                    @Html.GrandEditorFor(model => model.ExchangeRate)
                                    @Model.PrimaryStoreCurrencyCode
                                    @Html.ValidationMessageFor(model => model.ExchangeRate)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.MinimumRewardPointsToUse_OverrideForStore, model => model.MinimumRewardPointsToUse, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.MinimumRewardPointsToUse, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.MinimumRewardPointsToUse)
                                    @Html.ValidationMessageFor(model => model.MinimumRewardPointsToUse)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="note note-info">
                                    @T("Admin.Configuration.Settings.RewardPoints.Earning")
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.PointsForRegistration_OverrideForStore, model => model.PointsForRegistration, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.PointsForRegistration, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.PointsForRegistration)
                                    @Html.ValidationMessageFor(model => model.PointsForRegistration)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.PointsForPurchases_OverrideForStore, model => model.PointsForPurchases_Amount, model => model.PointsForPurchases_Points, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.PointsForPurchases_Amount, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @T("Admin.Configuration.Settings.RewardPoints.Earning.Hint1")
                                    @Html.GrandEditorFor(model => model.PointsForPurchases_Amount)
                                    @Model.PrimaryStoreCurrencyCode
                                    &nbsp;
                                    @T("Admin.Configuration.Settings.RewardPoints.Earning.Hint2")
                                    @Html.GrandEditorFor(model => model.PointsForPurchases_Points)
                                    @T("Admin.Configuration.Settings.RewardPoints.Earning.Hint3")
                                    @Html.ValidationMessageFor(model => model.PointsForPurchases_Amount)
                                    @Html.ValidationMessageFor(model => model.PointsForPurchases_Points)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.PointsForPurchases_Awarded_OverrideForStore, model => model.PointsForPurchases_Awarded, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.PointsForPurchases_Awarded, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.PointsForPurchases_Awarded, ((OrderStatus)Model.PointsForPurchases_Awarded).ToSelectList())
                                    @Html.ValidationMessageFor(model => model.PointsForPurchases_Awarded)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.PointsForPurchases_Canceled_OverrideForStore, model => model.PointsForPurchases_Canceled, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.PointsForPurchases_Canceled, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.PointsForPurchases_Canceled, ((OrderStatus)Model.PointsForPurchases_Canceled).ToSelectList())
                                    @Html.ValidationMessageFor(model => model.PointsForPurchases_Canceled)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.OverrideStoreCheckboxFor(model => model.DisplayHowMuchWillBeEarned_OverrideForStore, model => model.DisplayHowMuchWillBeEarned, Model.ActiveStoreScopeConfiguration)
                                    @Html.GrandLabelFor(model => model.DisplayHowMuchWillBeEarned, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.DisplayHowMuchWillBeEarned)
                                    @Html.ValidationMessageFor(model => model.DisplayHowMuchWillBeEarned)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3 col-sm-3 text-right">
                                    @Html.GrandLabelFor(model => model.PointsAccumulatedForAllStores, new Dictionary<string, object> { { "class", "control-label" } }, false)
                                </div>
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.PointsAccumulatedForAllStores)
                                    @Html.ValidationMessageFor(model => model.PointsAccumulatedForAllStores)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}