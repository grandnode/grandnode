@using Grand.Core.Domain.Catalog
@model OrderModel.AddOrderProductModel.ProductDetailsModel
@{
    //page title
    ViewBag.Title = string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.Name, Model.OrderId);
}
@*we add enctype = "multipart/form-data" because "File upload" attribute control type requries it*@
@using (Html.BeginForm("AddProductToOrderDetails", "Order",
                new RouteValueDictionary(new { orderId = Model.OrderId, productId = Model.ProductId }),
                FormMethod.Post,
                new Dictionary<string, Object> { { "enctype", "multipart/form-data" } }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)

    <div class="row">
        <div class="col-md-12">
            <div class="portlet light form-fit">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-cubes"></i>
                        @string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.Name, Model.OrderId)
                        @Html.ActionLink("(" + T("Admin.Orders.Products.AddNew.BackToList") + ")", "AddProductToOrder", new { orderId = Model.OrderId })
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="col-md-offset-1 col-md-11 col-sm-11">
                        @if (Model.Warnings.Count > 0)
                        {
                            <div class="note note-danger">
                                @foreach (var warning in Model.Warnings)
                                {
                                    @warning
                                    <br />
                                }
                            </div>
                        }
                    </div>

                    @if (Model.ProductType == ProductType.SimpleProduct)
                    {
                        <div class="form-horizontal">
                            <div class="form-body">
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.UnitPriceInclTax)
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.UnitPriceInclTax)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.UnitPriceExclTax)
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.UnitPriceExclTax)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.Quantity)
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.Quantity)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.SubTotalInclTax)
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.SubTotalInclTax)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.SubTotalExclTax)
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.SubTotalExclTax)
                                    </div>
                                </div>
                                
                                @Html.Partial("_ProductAddAttributes", Model.ProductAttributes)
                                

                                @{
                                    var dataDictGiftCard = new ViewDataDictionary();
                                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = "giftcard";
                                    @Html.Partial("_ProductAddGiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                }
                                <div class="form-group">
                                    @Html.Partial("_ProductAddRentalInfo", Model)
                                </div>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-3 col-md-11 col-sm-11">
                                            <div class="note note-info">
                                                <strong>@T("Admin.Orders.Products.AddNew.Note2")</strong>
                                            </div>

                                            <input type="submit" class="btn default" value="@T("Admin.Orders.Products.AddNew")" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                                }
                                else if (Model.ProductType == ProductType.GroupedProduct)
                                {
                                    <div>
                                        @*TODO add support for grouped products to be added to an existing order*@
                                        <div class="note note-info">
                                            Grouped products are not currently supported for adding to an existing order
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="note note-info">
                                        This product type (unknown) is not currently supported for adding to an existing order
                                    </div>
                                }
                </div>
            </div>
        </div>
    </div>
                                }
