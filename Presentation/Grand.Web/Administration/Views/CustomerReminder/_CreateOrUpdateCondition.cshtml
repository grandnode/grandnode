@model CustomerReminderModel.ConditionModel
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.CustomerReminderId)

<script type="text/javascript">
    $(document).ready(function () {
        $("#customerremindercondition-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

<div id="customerremindercondition-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Customers.CustomerReminder.Condition.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex()) id="tab-product">
            @T("Admin.Customers.CustomerActionCondition.Products")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex()) id="tab-category">
            @T("Admin.Customers.CustomerReminder.Condition.Categories")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex()) id="tab-manufacturer">
            @T("Admin.Customers.CustomerReminder.Condition.Manufacturers")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex()) id="tab-customerRole">
            @T("Admin.Customers.CustomerReminder.Condition.CustomerRole")
        </li>
        <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex()) id="tab-customerTag">
            @T("Admin.Customers.CustomerReminder.Condition.CustomerTag")
        </li>
        <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex()) id="tab-customerRegister">
            @T("Admin.Customers.CustomerReminder.Condition.CustomerRegister")
        </li>
        <li @Html.RenderSelectedTabIndex(7, GetSelectedTabIndex()) id="tab-customAttribute">
            @T("Admin.Customers.CustomerReminder.Condition.CustomCustomerAttribute")
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabProduct()
    </div>
    <div>
        @TabCategory()
    </div>
    <div>
        @TabManufacturer()
    </div>
    <div>
        @TabCustomerRole()
    </div>
    <div>
        @TabCustomerTag()
    </div>
    <div>
        @TabCustomerRegister()
    </div>
    <div>
        @TabCustomAttribute()
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "customerremindercondition-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    <script type="text/javascript">
            $(document).ready(function () {
                $("#@Html.FieldIdFor(model => model.ConditionTypeId)").change(toggleConditionType);
                toggleConditionType();
            });

        function toggleConditionType() {
            var selectedConditionTypeId = $("#@Html.FieldIdFor(model => model.ConditionTypeId)").val();
            if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.Product).ToString()))
            {
                $('#tab-product').show();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();
            }
            else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.Manufacturer).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').show();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();

            } else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.Category).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').show();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();

            }
            else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.CustomerRole).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').show();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();
            }
            else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.CustomerTag).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').show();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();
            }
            else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.CustomerRegisterField).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').show();
                $('#tab-customAttribute').hide();
            }
            else if (selectedConditionTypeId == @(((int)Grand.Core.Domain.Customers.CustomerReminderConditionTypeEnum.CustomCustomerAttribute).ToString()))
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').show();
            }
            else
            {
                $('#tab-product').hide();
                $('#tab-manufacturer').hide();
                $('#tab-category').hide();
                $('#tab-customerRole').hide();
                $('#tab-customerTag').hide();
                $('#tab-customerRegister').hide();
                $('#tab-customAttribute').hide();
             }
        }

    </script>
        


<div class="form-horizontal">
    <div class="form-body">
        <div class="form-group">
            @Html.GrandLabelFor(model => model.Name)
            <div class="col-md-9 col-sm-9">
                @Html.GrandEditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.ConditionTypeId)
            <div class="col-md-9 col-sm-9">
                @if (!String.IsNullOrEmpty(Model.Id))
                {
                    @Html.GrandDropDownListFor(model => model.ConditionTypeId, Model.ConditionType, new { @disabled = "disabled" })
                }
                else
                {
                    @Html.GrandDropDownListFor(model => model.ConditionTypeId, Model.ConditionType)
                }
                @Html.ValidationMessageFor(model => model.ConditionTypeId)
                @Html.HiddenFor(x => x.ConditionTypeId)
            </div>
        </div>
        <div class="form-group">
            @Html.GrandLabelFor(model => model.ConditionId)
            <div class="col-md-9 col-sm-9">
                @Html.GrandDropDownListFor(model => model.ConditionId, ((Grand.Core.Domain.Customers.CustomerReminderConditionEnum)Model.ConditionId).ToSelectList())
                @Html.ValidationMessageFor(model => model.ConditionId)
            </div>
        </div>
    </div>
</div>
}

@helper TabProduct()
{
    @Html.Partial("_ConditionProduct", Model)
}

@helper TabCategory()
{
    @Html.Partial("_ConditionCategory", Model)
}

@helper TabManufacturer()
{
    @Html.Partial("_ConditionManufacturer", Model)
}

@helper TabCustomerRole()
{
    @Html.Partial("_ConditionCustomerRole", Model)
}

@helper TabCustomerTag()
{
    @Html.Partial("_ConditionCustomerTag", Model)
}

@helper TabCustomerRegister()
{
    @Html.Partial("_ConditionCustomerRegister", Model)
}

@helper TabCustomAttribute()
{
    @Html.Partial("_ConditionCustomCustomerAttribute", Model)
}

