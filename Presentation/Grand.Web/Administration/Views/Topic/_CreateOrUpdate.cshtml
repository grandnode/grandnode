@model TopicModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
<script>
    $(document).ready(function () {
        $("#topic-edit").show();
        $("#topic-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>
<div id="topic-edit" style="display:none">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.ContentManagement.Topics.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.Common.SEO")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.ContentManagement.Topics.Acl")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.ContentManagement.Topics.Stores")
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabSeo()
    </div>
    <div>
        @TabAcl()
    </div>
    <div>
        @TabStores()
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "topic-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    <script type="text/javascript">
        $(document).ready(function() {
            $("#@Html.FieldIdFor(model => model.IsPasswordProtected)").click(togglePassword);
            togglePassword();
        });

        function togglePassword() {
            if ($('#@Html.FieldIdFor(model => model.IsPasswordProtected)').is(':checked')) {
                $('#pnlPasswordEnabled').show();
            } else {
                $('#pnlPasswordEnabled').hide();
            }
        }
    </script>
    @(Html.LocalizedEditor<TopicModel, TopicLocalizedModel>("topic-info-localized",
    @<div class="form-horizontal">
         <div class="form-body">
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].Title)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(model => model.Locales[item].Title)
                     @Html.ValidationMessageFor(model => model.Locales[item].Title)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].Body)
                 <div class="col-md-9 col-sm-9">
                     @Html.EditorFor(model => model.Locales[item].Body, "RichEditor")
                     @Html.ValidationMessageFor(model => model.Locales[item].Body)
                 </div>
             </div>
            @Html.HiddenFor(model => model.Locales[item].LanguageId)
         </div>
    </div>
        ,
    @<div class="form-horizontal">
         <div class="form-body">
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Title)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(model => model.Title)
                     @Html.ValidationMessageFor(model => model.Title)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Body)
                 <div class="col-md-9 col-sm-9">
                     @Html.EditorFor(x => x.Body, "RichEditor")
                     @Html.ValidationMessageFor(model => model.Body)
                 </div>
             </div>
         </div>
    </div>
    ))
    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.SystemName)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.SystemName)
                    @Html.ValidationMessageFor(model => model.SystemName)
                </div>
            </div>
            @if (!String.IsNullOrEmpty(Model.Id))
            {
                <div class="form-group">
                        @Html.GrandLabelFor(model => model.Url)
                    <div class="col-md-9 col-sm-9">
                        <label class="control-label"><a href="@Model.Url">@Model.Url</a></label>
                    </div>
                </div>
            }
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IsPasswordProtected)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(model => model.IsPasswordProtected)
                    @Html.ValidationMessageFor(model => model.IsPasswordProtected)
                </div>
            </div>
            <div class="form-group" id="pnlPasswordEnabled">
                    @Html.GrandLabelFor(model => model.Password)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IncludeInSitemap)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.IncludeInSitemap)
                    @Html.ValidationMessageFor(model => model.IncludeInSitemap)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IncludeInTopMenu)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.IncludeInTopMenu)
                    @Html.ValidationMessageFor(model => model.IncludeInTopMenu)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IncludeInFooterColumn1)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.IncludeInFooterColumn1)
                    @Html.ValidationMessageFor(model => model.IncludeInFooterColumn1)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IncludeInFooterColumn2)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.IncludeInFooterColumn2)
                    @Html.ValidationMessageFor(model => model.IncludeInFooterColumn2)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.IncludeInFooterColumn3)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.IncludeInFooterColumn3)
                    @Html.ValidationMessageFor(model => model.IncludeInFooterColumn3)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.DisplayOrder)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(x => x.DisplayOrder)
                    @Html.ValidationMessageFor(model => model.DisplayOrder)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.AccessibleWhenStoreClosed)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(x => x.AccessibleWhenStoreClosed)
                    @Html.ValidationMessageFor(model => model.AccessibleWhenStoreClosed)
                </div>
            </div>
            <div class="form-group">
                    @Html.GrandLabelFor(model => model.TopicTemplateId)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandDropDownListFor(model => model.TopicTemplateId, Model.AvailableTopicTemplates)
                    @Html.ValidationMessageFor(model => model.TopicTemplateId)
                </div>
            </div>
        </div>
    </div>
}
@helper TabSeo()
{
    @(Html.LocalizedEditor<TopicModel, TopicLocalizedModel>("topic-seo-localized",
    @<div class="form-horizontal">
         <div class="form-body">
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].MetaKeywords)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(model => model.Locales[item].MetaKeywords)
                     @Html.ValidationMessageFor(model => model.Locales[item].MetaKeywords)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].MetaDescription)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandTextAreaFor(model => model.Locales[item].MetaDescription)
                     @Html.ValidationMessageFor(model => model.Locales[item].MetaDescription)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].MetaTitle)
                 <div class="col-md-9 col-sm-9">
                     @Html.EditorFor(model => model.Locales[item].MetaTitle)
                     @Html.ValidationMessageFor(model => model.Locales[item].MetaTitle)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.Locales[item].SeName)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(model => model.Locales[item].SeName)
                     @Html.ValidationMessageFor(model => model.Locales[item].SeName)
                 </div>
             </div>
            @Html.HiddenFor(model => model.Locales[item].LanguageId)
         </div>
    </div>
               ,
    @<div class="form-horizontal">
         <div class="form-body">
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.MetaKeywords)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(x => x.MetaKeywords)
                     @Html.ValidationMessageFor(model => model.MetaKeywords)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.MetaDescription)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandTextAreaFor(x => x.MetaDescription)
                     @Html.ValidationMessageFor(model => model.MetaDescription)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.MetaTitle)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(x => x.MetaTitle)
                     @Html.ValidationMessageFor(model => model.MetaTitle)
                 </div>
             </div>
             <div class="form-group">
                     @Html.GrandLabelFor(model => model.SeName)
                 <div class="col-md-9 col-sm-9">
                     @Html.GrandEditorFor(x => x.SeName)
                     @Html.ValidationMessageFor(model => model.SeName)
                 </div>
             </div>
         </div>
    </div>
    ))
}

@helper TabAcl()
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.SubjectToAcl)").click(toggleAcl);

            toggleAcl();
        });


        function toggleAcl() {
            if ($('#@Html.FieldIdFor(model => model.SubjectToAcl)').is(':checked')) {
                $('#pnl-acl').show();
            }
            else {
                $('#pnl-acl').hide();
            }
        }

    </script>
    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                @Html.GrandLabelFor(model => model.SubjectToAcl)
                <div class="col-md-9 col-sm-9">
                    <label class="mt-checkbox mt-checkbox-outline">
                        @Html.GrandEditorFor(model => model.SubjectToAcl)
                        <span></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.SubjectToAcl)
                </div>
            </div>
            <div class="form-group" id="pnl-acl">
                @Html.GrandLabelFor(model => model.AvailableCustomerRoles)
                <div class="col-md-9 col-sm-9">
                    @if (Model.AvailableCustomerRoles != null && Model.AvailableCustomerRoles.Count > 0)
                    {
                        @Html.Action("AclDisabledWarning", "Common")
                        <div class="mt-checkbox-list">
                            @foreach (var customerRole in Model.AvailableCustomerRoles)
                            {
                                <label class="mt-checkbox mt-checkbox-outline">
                                    <input type="checkbox" name="SelectedCustomerRoleIds" value="@customerRole.Id" checked="@(Model.SelectedCustomerRoleIds!=null && Model.SelectedCustomerRoleIds.Contains(customerRole.Id))" />@customerRole.Name
                                    <span></span>
                                </label>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="note note-info">No customer roles defined</div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@helper TabStores()
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.LimitedToStores)").click(toggleStoreMapping);

            toggleStoreMapping();
        });


        function toggleStoreMapping() {
            if ($('#@Html.FieldIdFor(model => model.LimitedToStores)').is(':checked')) {
                $('#pnl-available-stores').show();
            }
            else {
                $('#pnl-available-stores').hide();
            }
        }

    </script>

    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                @Html.GrandLabelFor(model => model.LimitedToStores)
                <div class="col-md-9 col-sm-9">
                    <label class="mt-checkbox mt-checkbox-outline">
                        @Html.GrandEditorFor(model => model.LimitedToStores)
                        <span></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.LimitedToStores)
                </div>
            </div>
            <div class="form-group" id="pnl-available-stores">
                @Html.GrandLabelFor(model => model.AvailableStores)
                <div class="col-md-9 col-sm-9">
                    @if (Model.AvailableStores != null && Model.AvailableStores.Count > 0)
                    {
                        @Html.Action("MultistoreDisabledWarning", "Common")
                        <div class="mt-checkbox-list">
                            @foreach (var store in Model.AvailableStores)
                            {
                                <label class="mt-checkbox mt-checkbox-outline">
                                    <input type="checkbox" name="SelectedStoreIds" value="@store.Id" checked="@(Model.SelectedStoreIds != null && Model.SelectedStoreIds.Contains(store.Id))" />@store.Name
                                    <span></span>
                                </label>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="note note-info">
                            No stores defined
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
