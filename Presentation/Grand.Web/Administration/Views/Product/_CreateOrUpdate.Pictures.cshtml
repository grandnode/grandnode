@model ProductModel

@if (!String.IsNullOrEmpty(Model.Id))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="productpictures-grid"></div>
        </div>
    </div>
        <script>
            $(document).ready(function () {
                $("#productpictures-grid").kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("ProductPictureList", "Product", new { productId = Model.Id }))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            update: {
                                url:"@Html.Raw(Url.Action("ProductPictureUpdate", "Product"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            destroy: {
                                url: "@Html.Raw(Url.Action("ProductPictureDelete", "Product"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    PictureUrl: {editable: false, type: "string" },
                                    DisplayOrder: {editable: true, type: "number" },
                                    OverrideAltAttribute: {editable: true, type: "string" },
                                    OverrideTitleAttribute: {editable: true, type: "string" }
                                }
                            }
                        },
                        requestEnd: function(e) {
                            if(e.type=="update") {
                                this.read();
                            }
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    pageable: {
                        refresh: true,
                        numeric: false,
                        previousNext: false,
                        info: false
                    },
                    editable: {
                        confirmation: false,
                        mode: "inline"
                    },
                    scrollable: false,
                    columns: [{
                        field: "PictureUrl",
                        title: "@T("Admin.Catalog.Products.Pictures.Fields.Picture")",
                        template: '<a href="#=PictureUrl#" target="_blank"><img alt="#=PictureId#" src="#=PictureUrl#" width="150" /></a>',
                        width: 200
                    }, {
                        field: "DisplayOrder",
                        title: "@T("Admin.Catalog.Products.Pictures.Fields.DisplayOrder")",
                        //integer format
                        format: "{0:0}",
                        width: 150
                    }, {
                        field: "OverrideAltAttribute",
                        title: "@T("Admin.Catalog.Products.Pictures.Fields.OverrideAltAttribute")",
                        width: 200
                    }, {
                        field: "OverrideTitleAttribute",
                        title: "@T("Admin.Catalog.Products.Pictures.Fields.OverrideTitleAttribute")",
                        width: 200
                    }, {
                        command: [{
                            name: "edit",
                            text: {
                                edit: "@T("Admin.Common.Edit")",
                                update: "@T("Admin.Common.Update")",
                                cancel: "@T("Admin.Common.Cancel")"
                            }
                        }, {
                            name: "destroy",
                            text: "@T("Admin.Common.Delete")"
                        }],
                        width: 200
                    }]
                });
            });
        </script>

    <p>
        <strong>@T("Admin.Catalog.Products.Pictures.AddNew")</strong>
    </p>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#addProductPicture').click(function () {
                var pictureId = $("#@Html.FieldIdFor(model => model.AddPictureModel.PictureId)").val();
                var overrideAltAttribute = $("#@Html.FieldIdFor(model => model.AddPictureModel.OverrideAltAttribute)").val();
                var overrideTitleAttribute = $("#@Html.FieldIdFor(model => model.AddPictureModel.OverrideTitleAttribute)").val();
                var displayOrder = $("#@Html.FieldIdFor(model => model.AddPictureModel.DisplayOrder)").val();

                if (pictureId == 0) {
                    alert('Upload picture first');
                    return;
                }

                $('#addProductPicture').attr('disabled', true);

                var postData = {
                    pictureId: pictureId,
                    displayOrder: displayOrder,
                    overrideAltAttribute: overrideAltAttribute,
                    overrideTitleAttribute: overrideTitleAttribute,
                    productId: '@Model.Id'
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("ProductPictureAdd", "Product"))",
                    data: postData,
                    success: function(data) {
                        var grid = $("#productpictures-grid");
                        grid.data('kendoGrid').dataSource.read();
                        $('#addProductPicture').attr('disabled', false);
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert('Failed to add product picture.');
                        $('#addProductPicture').attr('disabled', false);
                    }
                });
            });
        });
    </script>
    <div class="form-horizontal">
        <div class="form-body">
            <div class="form-group">
                @Html.GrandLabelFor(model => model.AddPictureModel.PictureId)
                <div class="col-md-9 col-sm-9">
                    @Html.EditorFor(model => model.AddPictureModel.PictureId)
                    @Html.ValidationMessageFor(model => model.AddPictureModel.PictureId)
                </div>
            </div>
            <div class="form-group">
                @Html.GrandLabelFor(model => model.AddPictureModel.OverrideAltAttribute)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.AddPictureModel.OverrideAltAttribute)
                    @Html.ValidationMessageFor(model => model.AddPictureModel.OverrideAltAttribute)
                </div>
            </div>
            <div class="form-group">
                @Html.GrandLabelFor(model => model.AddPictureModel.OverrideTitleAttribute)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.AddPictureModel.OverrideTitleAttribute)
                    @Html.ValidationMessageFor(model => model.AddPictureModel.OverrideTitleAttribute)
                </div>
            </div>
            <div class="form-group">
                @Html.GrandLabelFor(model => model.AddPictureModel.DisplayOrder)
                <div class="col-md-9 col-sm-9">
                    @Html.GrandEditorFor(model => model.AddPictureModel.DisplayOrder)
                    @Html.ValidationMessageFor(model => model.AddPictureModel.DisplayOrder)
                </div>
            </div>
            <div class="form-actions">
                    <div class="col-md-offset-3 col-md-9 col-sm-9">
                        <input type="button" id="addProductPicture" class="btn green" value="@T("Admin.Catalog.Products.Pictures.AddButton")" />
                    </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="note note-info">
        @T("Admin.Catalog.Products.Pictures.SaveBeforeEdit")
    </div>
}