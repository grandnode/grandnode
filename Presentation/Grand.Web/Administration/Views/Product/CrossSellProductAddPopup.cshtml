@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}
@model ProductModel.AddCrossSellProductModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Catalog.Products.CrossSells.AddNew").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="portlet light form-fit">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-cubes"></i>
                        @T("Admin.Catalog.Products.CrossSells.AddNew")
                    </div>
                </div>
                <div class="portlet-body form">

                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchProductName, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.SearchProductName)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchCategoryId, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.SearchCategoryId, Model.AvailableCategories)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchManufacturerId, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9  col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.SearchManufacturerId, Model.AvailableManufacturers)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchStoreId, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.SearchStoreId, Model.AvailableStores)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchVendorId, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.SearchVendorId, Model.AvailableVendors)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.SearchProductTypeId, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandDropDownListFor(model => model.SearchProductTypeId, Model.AvailableProductTypes)
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-1 col-md-11 col-sm-11 btn-group btn-group-devided">
                                        <button class="btn btn-success filter-submit" id="search-products">
                                            <i class="fa fa-search"></i> @T("Admin.Common.Search")
                                        </button>
                                        <button class="btn btn-success" type="submit" name="save" ><i class="fa fa-check"></i> @T("Admin.Common.Save") </button>
                                    </div>
                                </div>
                            </div>
                            <div id="products-grid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    if (ViewBag.RefreshPage == true)
    {
    <script type="text/javascript">
            try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
            catch (e){} 
            window.close();
    </script>
    }

    
    

                <script>
                    $(document).ready(function () {
                        $("#products-grid").kendoGrid({
                            dataSource: {
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("CrossSellProductAddPopupList", "Product"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [{
                                field: "Id",
                                title: "@T("Admin.Common.Check")",
                                headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                headerAttributes: { style: "text-align:center" },
                                template: "<input type='checkbox' name='SelectedProductIds' value='#=Id#' class='checkboxGroups' />",
                                attributes: { style: "text-align:center" },
                                width: 50
                            }, {
                                field: "Name",
                                title: "@T("Admin.Catalog.Products.Fields.Name")"
                            }, {
                                field: "Published",
                                title: "@T("Admin.Catalog.Products.Fields.Published")",
                                width: 100,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '# if(Published) {# <i class="fa fa-check" aria-hidden="true" style="color:green"></i> #} else {# <i class="fa fa-times" aria-hidden="true" style="color:red"></i> #} #'
                            }]
                        });
                    });
                </script>
            
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('#search-products').click(function () {
                var grid = $('#products-grid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                //clear selected checkboxes
                $('.checkboxGroups').prop('checked', false).change();
                return false;
            });
        
            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-products").click();
                    return false;
                }
            });

            //wire up checkboxes
            $('#mastercheckbox').click(function() {
                $('.checkboxGroups').prop('checked', $(this).is(':checked')).change();
            });

            $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                SearchCategoryId: $('#SearchCategoryId').val(),
                SearchManufacturerId: $('#SearchManufacturerId').val(),
                SearchStoreId: $('#SearchStoreId').val(),
                SearchVendorId: $('#SearchVendorId').val(),
                SearchProductTypeId: $('#SearchProductTypeId').val()
            };
            addAntiForgeryToken(data);
            return data;
        }
        function updateMasterCheckbox() {
            var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
            $('#mastercheckbox').prop('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>
}