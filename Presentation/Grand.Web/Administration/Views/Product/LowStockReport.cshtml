@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Grand.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Catalog.LowStockReport").Text;
}
@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="portlet light form-fit">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-cubes"></i>
                    @T("Admin.Catalog.LowStockReport")
                </div>
            </div>
            <div class="portlet-body form">
                <div class="form-horizontal">
                    <div class="portlet-body">
                        <div id="products-grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function() {
        $("#products-grid").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("LowStockReportList", "Product"))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            columns: [
                {
                    field: "Name",
                    title: "@T("Admin.Catalog.Products.Fields.Name")",
                    width: 300,
                    //if not a grouped product, then display
                    template: "#:Name# # if(Attributes !== null) {# <br /><i> #=Attributes# </i> #} #"
                }, {
                    field: "ManageInventoryMethod",
                    title: "@T("Admin.Catalog.Products.Fields.ManageInventoryMethod")",
                    width: 150
                }, {
                    field: "StockQuantity",
                    title: "@T("Admin.Catalog.Products.Fields.StockQuantity")",
                    width: 100
                }, {
                    field: "Published",
                    title: "@T("Admin.Catalog.Products.Fields.Published")",
                    width: 100,
                    headerAttributes: { style: "text-align:center" },
                    attributes: { style: "text-align:center" },
                    template: '# if(Published) {# <i class="fa fa-check" aria-hidden="true" style="color:green"></i> #} else {# <i class="fa fa-times" aria-hidden="true" style="color:red"></i> #} #'
                }, {
                    field: "Id",
                    title: "@T("Admin.Common.Edit")",
                    width: 100,
                    template: '<a class="btn btn-sm btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i> @T("Admin.Common.Edit")</a>'
                }
            ]
        });
    });
</script>
        