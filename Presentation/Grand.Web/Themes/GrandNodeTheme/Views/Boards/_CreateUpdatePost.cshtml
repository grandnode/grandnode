@model EditForumPostModel
@using Grand.Core.Domain.Forums;
@using Grand.Web.Models.Boards;

@Html.Action("ForumBreadcrumb", new { forumTopicId = Model.ForumTopicId })
<div class="page forum-edit-page">
    <div class="page-title">
        @if (Model.IsEdit)
        {
            <h1>@T("Forum.EditPost")</h1>
        }
        else
        {
            <h1>@T("Forum.NewPost")</h1>
        }
    </div>
    <div class="page-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            var validationSummary = Html.ValidationSummary(true);
            if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div>
            }
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ForumTopicId)
            <div class="fieldset">
                <div class="form-fields">
                    <div class="inputs">
                        <label>@T("Forum.ForumName"):</label>
                        <strong class="forum-subject">@Model.ForumName</strong>
                    </div>
                    <div class="inputs">
                        <label>@T("Forum.TopicTitle"):</label>
                        <strong class="topic-subject">@Model.ForumTopicSubject</strong>
                    </div>
                    <div class="inputs">
                        @if (Model.ForumEditor == EditorType.BBCodeEditor)
                        {
                            @Html.BBCodeEditor("Text")
                        }
                        @Html.TextAreaFor(model => model.Text, new { @class = "forum-post-text", TextMode = "MultiLine" })
                        @Html.ValidationMessageFor(model => model.Text)
                    </div>
                    @if (Model.IsCustomerAllowedToSubscribe)
                    {
                        <div class="inputs reversed">
                            <input type="checkbox" name="subscribed" id="subscribed" value="true">
                            <label for="subscribed">@T("Forum.NotifyWhenSomeonePostsInThisTopic")</label>
                            <input name="subscribed" type="hidden" value="false">
                        </div>
                    }
                </div>
            </div>
            <div class="buttons">
                <button type="submit" value="@T("Forum.Submit")" class="btn waves-effect waves-ligth">
                    @T("Forum.Submit")
                </button>
                <button type="button" class="btn-flat wavel-green waves-effect" value="@T("Forum.Cancel")" onclick="setLocation('@Url.RouteUrl("TopicSlug", new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName })')">
                    @T("Forum.Cancel")
                </button>
            </div>
        }
    </div>
</div>
