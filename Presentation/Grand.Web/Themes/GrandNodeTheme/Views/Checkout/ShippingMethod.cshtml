@model CheckoutShippingMethodModel
@using Grand.Web.Models.Checkout;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page shipping-method-page">
    @Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Shipping })
    <div class="page-title">
        <h1>@T("Checkout.SelectShippingMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        <div class="section shipping-method">
            @using (Html.BeginRouteForm("CheckoutShippingMethod", FormMethod.Post))
            {
                @Html.Widget("checkout_shipping_method_top")
                if (Model.Warnings.Count == 0)
                {
                <div class="row">
                    @for (int i = 0; i < Model.ShippingMethods.Count; i++)
                    {
                        var shippingMethod = Model.ShippingMethods[i];
                        <div class="col s12 m12 l4">
                            <div class="card hoverable">
                                <div class="method-name">
                                    <input id="shippingoption_@(i)" class="with-gap" type="radio" name="shippingoption" value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)" checked="@shippingMethod.Selected" />
                                    <label for="shippingoption_@(i)">@T("Checkout.SelectShippingMethod.MethodAndFee", shippingMethod.Name, shippingMethod.Fee)</label>
                                </div>
                                @if (!String.IsNullOrEmpty(shippingMethod.Description))
                                {
                                    <div class="method-description">
                                        @Html.Raw(shippingMethod.Description)
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    </div>
                        if (Model.NotifyCustomerAboutShippingFromMultipleLocations)
                        {
                    <div class="multiple-locations">
                        @T("Checkout.ShippingMethod.ShippingFromMultipleLocations")
                    </div>
                }
                <div class="buttons">
                    <button type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn waves-effect waves-light">
                        @T("Checkout.NextButton")
                    </button>
                </div>
                }
                else
                {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
                }
                @Html.Widget("checkout_shipping_method_bottom")
            }
        </div>
        <div class="section order-summary">
            <div class="title">
                <strong>@T("Checkout.OrderSummary")</strong>
            </div>
            @Html.Action("OrderSummary", "ShoppingCart")
        </div>
    </div>
</div>
