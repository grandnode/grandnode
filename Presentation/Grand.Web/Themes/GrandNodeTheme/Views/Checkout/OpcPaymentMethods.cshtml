@model CheckoutPaymentMethodModel
@using Grand.Web.Models.Checkout;
<div class="checkout-data">
    @Html.Widget("op_checkout_payment_method_top")
    <div class="section payment-method">
        @if (Model.DisplayRewardPoints && Model.PaymentMethods.Count > 0)
        {
            <div class="use-reward-points">
                @* @Html.EditorFor(model => model.UseRewardPoints) *@
				<input class="check-box" id="UseRewardPoints" name="UseRewardPoints" type="checkbox" value="true">
				<label for="UseRewardPoints"> @string.Format(T("Checkout.UseRewardPoints").Text, Model.RewardPointsBalance, Model.RewardPointsAmount)</label>
				<input name="UseRewardPoints" type="hidden" value="false">
                
            </div>
        }
        @if (Model.PaymentMethods.Count > 0)
        {
            <div class="row">
                @for (int i = 0; i < Model.PaymentMethods.Count; i++)
                {
                    var paymentMethod = Model.PaymentMethods[i];
                    var paymentMethodName = paymentMethod.Name;
                    if (!String.IsNullOrEmpty(paymentMethod.Fee))
                    {
                        paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                    }
                    <div class="col s12 m12 l4">
                        <div class="card hoverable">
                            <div class="method-name">
                                @if (!String.IsNullOrEmpty(paymentMethod.LogoUrl))
                                {
                                    <div class="payment-logo">
                                        <label for="paymentmethod_@(i)">
                                            <img src="@paymentMethod.LogoUrl" alt="@paymentMethodName" />
                                        </label>
                                    </div>
                                }
                                <div class="payment-details">
                                    <input id="paymentmethod_@(i)" class="with-gap" type="radio" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected" />
                                    <label for="paymentmethod_@(i)">@paymentMethodName</label>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="message-error">
                @T("Checkout.NoPaymentMethods")
            </div>
        }
    </div>
    @Html.Widget("op_checkout_payment_method_bottom")
</div>
