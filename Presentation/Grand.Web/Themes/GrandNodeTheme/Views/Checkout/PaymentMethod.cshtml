@model CheckoutPaymentMethodModel
@using Grand.Web.Models.Checkout;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page payment-method-page">
    @Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Payment })
    <div class="page-title">
        <h1>@T("Checkout.SelectPaymentMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        @Html.Widget("checkout_payment_method_top")
        <div class="section payment-method">
            @using (Html.BeginRouteForm("CheckoutPaymentMethod", FormMethod.Post))
            {
                if (Model.DisplayRewardPoints && Model.PaymentMethods.Count > 0)
                {
                <div class="use-reward-points">
                    @* @Html.EditorFor(model => model.UseRewardPoints)*@
					<input class="check-box" id="UseRewardPoints" name="UseRewardPoints" type="checkbox" value="true">
					<label for="UseRewardPoints"> @string.Format(T("Checkout.UseRewardPoints").Text, Model.RewardPointsBalance, Model.RewardPointsAmount)</label>
					<input name="UseRewardPoints" type="hidden" value="false">
                    
                </div>
                }
                if (Model.PaymentMethods.Count > 0)
                {
                <div class="row">
                    @for (int i = 0; i < Model.PaymentMethods.Count; i++)
                    {
                        var paymentMethod = Model.PaymentMethods[i];
                        var paymentMethodName = paymentMethod.Name;
                        if (!String.IsNullOrEmpty(paymentMethod.Fee))
                        {
                            paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                        }
                        <div class="col s12 m12 l4">
                            <div class="card hoverable">
                                <div class="method-name">
                                    @if (!String.IsNullOrEmpty(paymentMethod.LogoUrl))
                                    {
                                        <div class="payment-logo">
                                            <label for="paymentmethod_@(i)">
                                                <img src="@paymentMethod.LogoUrl" alt="@paymentMethodName" />
                                            </label>
                                        </div>
                                    }
                                    <div class="payment-details">
                                        <input id="paymentmethod_@(i)" class="with-gap" type="radio" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected" />
                                        <label for="paymentmethod_@(i)">@paymentMethodName</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="buttons">
                    <button type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn waves-effect waves-light">
                        @T("Checkout.NextButton")
                    </button>
                </div>
                }
                else
                {
                <div class="message-error">
                    @T("Checkout.NoPaymentMethods")
                </div>
                }
            }
        </div>
        @Html.Widget("checkout_payment_method_bottom")
        <div class="section order-summary">
            <div class="title">
                <strong>@T("Checkout.OrderSummary")</strong>
            </div>
            @Html.Action("OrderSummary", "ShoppingCart")
        </div>
    </div>
</div>
