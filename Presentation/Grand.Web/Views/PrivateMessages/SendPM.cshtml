@model SendPrivateMessageModel
@using Grand.Web.Models.PrivateMessages;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    Html.AddTitleParts(T("PageTitle.SendPM").Text);
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page private-messages private-message-send-page">
        <div class="page-title">
            <h1>@T("PrivateMessages.Send.PostMessage")</h1>
        </div>
        <div class="page-body">
            @{
                var validationSummary = Html.ValidationSummary(true);
            }
            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div>
            }
            @Html.HiddenFor(model => model.ToCustomerId)
            @Html.HiddenFor(model => model.ReplyToMessageId)
            <div class="fieldset">
                <div class="form-fields">
                    <div class="inputs">
                        <label>@T("PrivateMessages.Send.To")</label>
                        @if (Model.AllowViewingToProfile)
                        {
                            <a href="@Url.RouteUrl("CustomerProfile", new { id = Model.ToCustomerId })">@(Model.CustomerToName)</a>
                        }
                        else
                        {
                            <span>@Model.CustomerToName</span>
                        }
                    </div>
                    <div class="inputs">
                        <label>@T("PrivateMessages.Send.Subject")</label>
                        @Html.TextBoxFor(model => model.Subject, new { @class = "pm-title-text" })
                        @Html.ValidationMessageFor(model => model.Subject)
                    </div>
                    <div class="inputs message">
                        <label>@T("PrivateMessages.Send.Message")</label>
                        @Html.BBCodeEditor("Message")
                        @Html.TextAreaFor(model => model.Message, new { @class = "bb-editor-text", TextMode = "MultiLine" })
                        @Html.ValidationMessageFor(model => model.Message)
                    </div>
                </div>
            </div>
            <div class="buttons">
                <input type="submit" class="button-1 send-pm-button" value="@T("PrivateMessages.Send.SendButton")" />
                <input type="button" class="button-2 cancel-pm-button" value="@T("PrivateMessages.Send.CancelButton")" onclick="setLocation('@Url.RouteUrl("PrivateMessages")')" />
            </div>
        </div>
    </div>
                }