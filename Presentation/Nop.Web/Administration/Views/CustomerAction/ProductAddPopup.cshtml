@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}

@model CustomerActionConditionModel.AddProductToConditionModel


@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Customers.CustomerActionCondition.Products.AddNew").Text;
}
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.CustomerActionId)
    @Html.HiddenFor(model => model.CustomerActionConditionId)

    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-promotions.png")" alt="" />
            @T("Admin.Customers.CustomerActionCondition.Products.AddNew")
        </div>
    </div>    
    
       if (ViewBag.RefreshPage == true)
       {
        <script type="text/javascript">
            try {window.opener.document.getElementById('@(ViewBag.btnId)').click();}
            catch (e){}
            window.close();
        </script>
       }

    
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchStoreId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchStoreId", Model.AvailableStores)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchVendorId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchVendorId", Model.AvailableVendors)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductTypeId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchProductTypeId", Model.AvailableProductTypes)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-products" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <table class="adminContent">
        <tr>
            <td>
                <div id="products-grid"></div>

                <script>
                $(document).ready(function () {
                    $("#products-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ProductAddPopupList", "CustomerAction"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors"
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)]
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [{
                            field: "Id",
                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                            headerAttributes: { style: "text-align:center" },
                            template: "<input type='checkbox' name='SelectedProductIds' value='#=Id#' class='checkboxGroups' />",
                            attributes: { style: "text-align:center" },
                            width: 50
                        }, {
                            field: "Name",
                            title: "@T("Admin.Catalog.Products.Fields.Name")"
                        }, {
                            field: "Published",
                            title: "@T("Admin.Catalog.Products.Fields.Published")",
                            width: 100,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=Published#.gif" />'
                        }]
                    });
                });
                </script>

                <script type="text/javascript">
                    $(document).ready(function() {
                        $('#search-products').click(function() {
                            var grid = $('#products-grid').data('kendoGrid');
                            grid.dataSource.page(1); 
                            $('.checkboxGroups').attr('checked', false).change();
                            return false;
                        });

                        $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function(event) {
                            if (event.keyCode == 13) {
                                $("#search-products").click();
                                return false;
                            }
                        });

                        //wire up checkboxes
                        $('#mastercheckbox').click(function() {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                            updateMasterCheckbox();
                        });
                    });

                    function additionalData() {
                        var data = {
                            SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                            SearchCategoryId: $('#SearchCategoryId').val(),
                            SearchManufacturerId: $('#SearchManufacturerId').val(),
                            SearchStoreId: $('#SearchStoreId').val(),
                            SearchVendorId: $('#SearchVendorId').val(),
                            SearchProductTypeId: $('#SearchProductTypeId').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }

                </script>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
            </td>
        </tr>
    </table>
}